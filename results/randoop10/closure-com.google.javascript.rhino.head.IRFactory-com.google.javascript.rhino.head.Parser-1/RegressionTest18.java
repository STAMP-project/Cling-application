import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node(9, node1, 0);
        int int4 = node1.getType();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 131 + "'", int4 == 131);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        compilerEnvirons0.setStrictMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.isRecordingLocalJsDocComments();
        compilerEnvirons18.setWarnTrailingComma(false);
        compilerEnvirons18.setAllowSharpComments(false);
        boolean boolean26 = compilerEnvirons18.isGenerateDebugInfo();
        compilerEnvirons18.setIdeMode(false);
        compilerEnvirons18.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons31.getErrorReporter();
        boolean boolean35 = compilerEnvirons31.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter36 = compilerEnvirons31.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser37 = new com.google.javascript.rhino.head.Parser(compilerEnvirons18, errorReporter36);
        errorReporter36.warning("-1\t  BLOCK 0 1\n", "java.io.IOException: java.io.IOException: ", 11, "  {\n  }\n", (int) '4');
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter36);
        java.io.Reader reader45 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot48 = iRFactory44.parse(reader45, "0", 893335251);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorReporter36);
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean21 = compilerEnvirons0.reportWarningAsError();
        boolean boolean22 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        astRoot2.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray14 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet15, commentArray14);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot2.target = astRoot9;
        int int20 = astRoot9.getType();
        java.lang.String str21 = astRoot9.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList22 = astRoot9.getFunctions();
        int int23 = astRoot9.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        astRoot24.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = astRoot24.getAstRoot();
        java.lang.String str29 = astRoot28.shortName();
        astRoot28.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        astRoot28.visitComments(nodeVisitor31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot36.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor42 = null;
        astRoot34.visitComments(nodeVisitor42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = astRoot44.getChildScopes();
        java.lang.String str50 = astRoot44.toString();
        astRoot34.addChildToBack((com.google.javascript.rhino.head.Node) astRoot44);
        astRoot44.setEncodedSourceBounds(6, (-1438167940));
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((-78159348), (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getEndLineno();
        boolean boolean58 = astRoot56.hasChildren();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot56, (-475744774));
        // The following exception was thrown during execution in test generation
        try {
            astRoot44.setEndLineno((-407655094));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(commentArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str21, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(functionNodeList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(astRoot28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AstRoot" + "'", str29, "AstRoot");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertNotNull(scopeList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "136" + "'", str50, "136");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                            ");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getRegexpCount();
        com.google.javascript.rhino.head.Node node17 = astRoot3.getNext();
        astRoot3.setBaseLineno(10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = astRoot3.getComments();
        astRoot3.setLength((-12));
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot3.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = astRoot3.getFunctions();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(commentSet20);
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertNotNull(functionNodeList24);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        astRoot0.setRelative(1034001328);
        int int15 = astRoot0.getEncodedSourceEnd();
        int int16 = astRoot0.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray20 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList21, symbolArray20);
        astRoot18.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList21);
        boolean boolean24 = astRoot18.hasConsistentReturnUsage();
        astRoot18.setLineno((-3));
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) astRoot18);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = astRoot18.new NodeIterator();
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList30 = astRoot0.getStatements();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1034001329) + "'", int16 == (-1034001329));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(symbolArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(astNodeList30);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap1 = astRoot0.getSymbolTable();
        java.lang.String str2 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str3 = astRoot2.debugPrint();
        int int6 = astRoot2.getIntProp((int) (short) 1, (-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope9.spliterator();
        astRoot7.addChildScope(scope9);
        java.lang.String str13 = astRoot7.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment14 = null;
        astRoot7.setJsDocNode(comment14);
        astRoot7.setEncodedSourceStart(4);
        astRoot7.removeChildren();
        astRoot7.flattenSymbolTable(true);
        java.lang.String str21 = astRoot2.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot7);
        astRoot7.setEndLineno(548641306);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(1128480984, (com.google.javascript.rhino.head.Node) astRoot7, (-61111));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = node25.new NodeIterator();
        boolean boolean27 = nodeIterator26.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str3, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        int int6 = astRoot1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope9.spliterator();
        astRoot7.addChildScope(scope9);
        java.lang.String str13 = astRoot7.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment14 = null;
        astRoot7.setJsDocNode(comment14);
        astRoot7.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean20 = astRoot19.hasSideEffects();
        int int21 = astRoot19.getParamCount();
        astRoot7.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode23.toSource(0);
        scriptNode23.setEncodedSourceBounds(12, 10);
        scriptNode23.setSourceName("");
        astRoot7.setTop(scriptNode23);
        astRoot1.setTop(scriptNode23);
        int int33 = scriptNode23.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot34.getAstRoot();
        java.lang.String str36 = astRoot35.shortName();
        java.lang.String str37 = astRoot35.getSourceName();
        astRoot35.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = astRoot35.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot41);
        int int48 = astRoot41.depth();
        int int49 = astRoot35.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        java.lang.String str50 = scriptNode23.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot41);
        com.google.javascript.rhino.head.ast.Comment comment51 = null;
        scriptNode23.setJsDocNode(comment51);
        boolean boolean53 = scriptNode23.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode54.toSource(0);
        scriptNode54.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = astRoot58.getAstRoot();
        java.lang.String str60 = astRoot59.shortName();
        java.lang.String str62 = astRoot59.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = astRoot59.getFunctions();
        astRoot59.checkParentLinks();
        boolean boolean65 = astRoot59.hasConsistentReturnUsage();
        int int66 = astRoot59.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = astRoot59.getSymbols();
        scriptNode54.setSymbols(symbolList67);
        scriptNode23.setSymbols(symbolList67);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AstRoot" + "'", str36, "AstRoot");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-276468670) + "'", int49 == (-276468670));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{\n}\n" + "'", str56, "{\n}\n");
        org.junit.Assert.assertNotNull(astRoot59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AstRoot" + "'", str60, "AstRoot");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(symbolList67);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(709642208);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor2 = null;
        astRoot1.visitComments(nodeVisitor2);
        int int4 = astRoot1.depth();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = astRoot1.getChildScopes();
        java.lang.String str8 = astRoot1.debugPrint();
        astRoot1.clearParentScope();
        java.lang.String str10 = astRoot1.getJsDoc();
        java.lang.String str11 = astRoot1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str8, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean14 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.Node node29 = astRoot7.setType(20);
        java.lang.String str31 = astRoot7.toSource(131);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                                                                                      {\n                                                                                                                                                                                                                                                                      }\n" + "'", str31, "                                                                                                                                                                                                                                                                      {\n                                                                                                                                                                                                                                                                      }\n");
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setOptimizationLevel(5);
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        com.google.javascript.rhino.head.ast.Comment comment3 = null;
        scriptNode0.setJsDocNode(comment3);
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.Node node6 = scriptNode0.getLastSibling();
        java.lang.String str7 = scriptNode0.shortName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ScriptNode" + "'", str7, "ScriptNode");
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        int int4 = scriptNode2.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = astRoot5.getAstRoot();
        java.lang.String str7 = astRoot6.shortName();
        java.lang.String str9 = astRoot6.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = astRoot6.getFunctions();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot6, 6);
        astRoot6.removeProp((-852661786));
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        astRoot17.checkParentLinks();
        scope15.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot(23);
        scope15.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = astRoot28.getTop();
        int int32 = astRoot28.getParamCount();
        boolean boolean33 = astRoot28.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator34 = astRoot28.new NodeIterator();
        astRoot28.checkParentLinks();
        int int36 = astRoot28.getRegexpCount();
        astRoot28.setEncodedSourceBounds(653625563, 441866554);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(852409088, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, 8);
        astRoot28.checkParentLinks();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump43 = astRoot28.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(astRoot6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AstRoot" + "'", str7, "AstRoot");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        boolean boolean19 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.Node node3 = astRoot0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList4 = astRoot0.getStatements();
        java.lang.String str6 = astRoot0.toSource(23);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        java.lang.String str9 = astRoot0.toSource((-52));
        astRoot0.setInStrictMode(false);
        int int12 = astRoot0.getLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(astNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.lang.String str8 = scriptNode0.getNextTempName();
        int int9 = scriptNode0.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        astRoot2.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = astRoot2.getTop();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot2, (-1468440406));
        com.google.javascript.rhino.head.ast.Scope scope9 = null;
        astRoot2.setParentScope(scope9);
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(scriptNode6);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException("", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("", (java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        iOException7.addSuppressed((java.lang.Throwable) iOException10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet17 = compilerEnvirons14.getActivationNames();
        boolean boolean18 = compilerEnvirons14.getWarnTrailingComma();
        compilerEnvirons14.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean22 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setWarnTrailingComma(true);
        boolean boolean28 = compilerEnvirons25.isRecordingLocalJsDocComments();
        compilerEnvirons25.setWarnTrailingComma(false);
        compilerEnvirons25.setAllowSharpComments(false);
        boolean boolean33 = compilerEnvirons25.isGenerateDebugInfo();
        compilerEnvirons25.setIdeMode(false);
        compilerEnvirons25.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter41 = compilerEnvirons38.getErrorReporter();
        boolean boolean42 = compilerEnvirons38.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = compilerEnvirons38.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser44 = new com.google.javascript.rhino.head.Parser(compilerEnvirons25, errorReporter43);
        com.google.javascript.rhino.head.IRFactory iRFactory45 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons21, errorReporter43);
        errorReporter43.warning("java.io.IOException:   {\n  }\n", "          {\n          }\n", 5, "14", 9);
        compilerEnvirons14.setErrorReporter(errorReporter43);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException58 = errorReporter43.runtimeError("  $0;\n", "/", 1779213838, "", 21);
        iOException7.addSuppressed((java.lang.Throwable) evaluatorException58);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(errorReporter41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(errorReporter43);
        org.junit.Assert.assertNotNull(evaluatorException58);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: java.io.IOException");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        scriptNode5.setEncodedSourceStart(17);
        int int11 = scriptNode5.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = scriptNode5.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.setEncodedSourceBounds(12, 10);
        scriptNode13.setSourceName("");
        scriptNode5.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral22 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.addRegExp(regExpLiteral22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode32.toSource(0);
        int int35 = scriptNode32.getEncodedSourceEnd();
        astRoot12.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        java.lang.Object obj37 = astRoot12.getCompilerData();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{\n}\n" + "'", str34, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-1291599107));
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.putIntProp(7, 852076584);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot1.new NodeIterator();
        boolean boolean7 = nodeIterator6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1291599107\tSCRIPT -1291599107 1\n" + "'", str2, "-1291599107\tSCRIPT -1291599107 1\n");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        compilerEnvirons0.setGeneratingSource(false);
        boolean boolean36 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons37.setRecordingLocalJsDocComments(false);
        boolean boolean40 = compilerEnvirons37.isGeneratingSource();
        compilerEnvirons37.setGeneratingSource(true);
        boolean boolean43 = compilerEnvirons37.recoverFromErrors();
        java.util.Set<java.lang.String> strSet44 = compilerEnvirons37.getActivationNames();
        boolean boolean45 = compilerEnvirons37.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons46 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean47 = compilerEnvirons46.recoverFromErrors();
        compilerEnvirons46.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons50.setWarnTrailingComma(true);
        boolean boolean53 = compilerEnvirons50.isRecordingLocalJsDocComments();
        compilerEnvirons50.setWarnTrailingComma(false);
        compilerEnvirons50.setAllowSharpComments(false);
        boolean boolean58 = compilerEnvirons50.isGenerateDebugInfo();
        compilerEnvirons50.setIdeMode(false);
        compilerEnvirons50.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons63 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons63.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter66 = compilerEnvirons63.getErrorReporter();
        boolean boolean67 = compilerEnvirons63.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter68 = compilerEnvirons63.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser69 = new com.google.javascript.rhino.head.Parser(compilerEnvirons50, errorReporter68);
        com.google.javascript.rhino.head.IRFactory iRFactory70 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons46, errorReporter68);
        errorReporter68.warning("{\n}\n", "136", (int) (byte) 100, "hi!", 10);
        com.google.javascript.rhino.head.Parser parser77 = new com.google.javascript.rhino.head.Parser(compilerEnvirons37, errorReporter68);
        com.google.javascript.rhino.head.IRFactory iRFactory78 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter68);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode80 = astRoot79.getParent();
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope();
        scope82.addChild((com.google.javascript.rhino.head.ast.AstNode) scope83);
        com.google.javascript.rhino.head.Node node85 = scope83.getFirstChild();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope83);
        astRoot79.target = node86;
        com.google.javascript.rhino.head.ast.AstRoot astRoot88 = astRoot79.getAstRoot();
        boolean boolean89 = astRoot88.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = iRFactory78.transformTree(astRoot88);
        int int91 = astRoot88.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(errorReporter66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(errorReporter68);
        org.junit.Assert.assertNull(astNode80);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNotNull(astRoot88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(scriptNode90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        com.google.javascript.rhino.head.Node node27 = astRoot7.target;
        java.lang.String str28 = astRoot7.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = astRoot7.getTop();
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException("hi!", (java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.io.IOException iOException39 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray40 = iOException39.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray43 = iOException42.getSuppressed();
        iOException39.addSuppressed((java.lang.Throwable) iOException42);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException54 = errorReporter48.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) evaluatorException54);
        iOException39.addSuppressed((java.lang.Throwable) evaluatorException54);
        java.io.IOException iOException57 = new java.io.IOException("{\n}\n", (java.lang.Throwable) evaluatorException54);
        iOException35.addSuppressed((java.lang.Throwable) iOException57);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons59 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons59.setWarnTrailingComma(true);
        boolean boolean62 = compilerEnvirons59.getWarnTrailingComma();
        compilerEnvirons59.setGeneratingSource(true);
        compilerEnvirons59.setOptimizationLevel(4);
        boolean boolean67 = compilerEnvirons59.isGeneratingSource();
        com.google.javascript.rhino.head.ErrorReporter errorReporter68 = compilerEnvirons59.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException74 = errorReporter68.runtimeError("21", "                                    ", 32, "          {\n          }\n", 278475323);
        iOException35.addSuppressed((java.lang.Throwable) evaluatorException74);
        scriptNode29.putProp(0, (java.lang.Object) evaluatorException74);
        java.lang.Throwable[] throwableArray77 = evaluatorException74.getSuppressed();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str28, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertNotNull(evaluatorException54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(errorReporter68);
        org.junit.Assert.assertNotNull(evaluatorException74);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        boolean boolean14 = astRoot10.hasSideEffects();
        java.lang.String str16 = astRoot10.toSource(100);
        int int17 = astRoot10.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.Node node23 = scope21.getFirstChild();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope21);
        scope21.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode27 = scope21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getEndLineno();
        java.lang.Object obj30 = astRoot28.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol32 = astRoot28.getSymbol("java.io.IOException: ");
        astRoot28.setEncodedSourceStart(0);
        java.lang.String str36 = astRoot28.toSource(14);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode27, (com.google.javascript.rhino.head.Node) astRoot28);
        astRoot10.target = astRoot28;
        com.google.javascript.rhino.head.ast.Scope scope39 = astRoot10.getParentScope();
        astRoot10.checkParentLinks();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node41 = astRoot10.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(astNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(symbol32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(scope39);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(328069054);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) '#', node34, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode38, 2);
        com.google.javascript.rhino.head.Node node46 = scope37.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getEndLineno();
        java.lang.Object obj52 = astRoot50.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        astRoot50.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode58.getFunctions();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int63 = astRoot48.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope65.setTop(scriptNode67);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = scope65.iterator();
        astRoot48.setParentScope(scope65);
        scope37.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot48);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        scope72.addChild((com.google.javascript.rhino.head.ast.AstNode) scope73);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = scope73.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node77 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node78 = node77.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        node77.addChildToFront((com.google.javascript.rhino.head.Node) scope79);
        scope73.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode76, node77);
        astRoot48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        scriptNode30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode76);
        int int84 = scriptNode30.getLength();
        int int85 = scriptNode30.getFunctionCount();
        int int86 = scriptNode30.getPosition();
        int int87 = scriptNode30.getRegexpCount();
        int int88 = scriptNode30.getEncodedSourceStart();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj4 = node2.getProp((-52));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        int int7 = scriptNode5.depth();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.lang.String str43 = scope38.toSource(12);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot46, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot46.getComments();
        node44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.Node node52 = astRoot46.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node57 = node56.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        node56.addChildToFront((com.google.javascript.rhino.head.Node) scope58);
        int int60 = scope58.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol62 = scope58.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int65 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scope58, (com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        node52.addChildToFront((com.google.javascript.rhino.head.Node) astRoot64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(22, node2, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot12);
        int int78 = scriptNode5.getFunctionCount();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator79 = scriptNode5.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator79.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                        {\n                        }\n" + "'", str43, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(commentSet50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(symbol62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-12) + "'", int65 == (-12));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        boolean boolean3 = scriptNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.Comment comment5 = scriptNode0.getJsDocNode();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(comment5);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        int int13 = scriptNode11.depth();
        astRoot0.setCompilerData((java.lang.Object) scriptNode11);
        scriptNode11.setEncodedSourceBounds((-684240317), (-682257883));
        // The following exception was thrown during execution in test generation
        try {
            double double18 = scriptNode11.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1115693949);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons2 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons2.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons2.getErrorReporter();
        boolean boolean6 = compilerEnvirons2.isGenerateObserverCount();
        boolean boolean7 = compilerEnvirons2.recoverFromErrors();
        java.util.Set<java.lang.String> strSet8 = compilerEnvirons2.getActivationNames();
        compilerEnvirons2.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser(compilerEnvirons2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = parser11.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot15.setEncodedSourceEnd(4);
        java.lang.String str18 = astRoot15.debugPrint();
        java.lang.Object obj20 = astRoot15.getProp((-1291599107));
        int int21 = scope1.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        // The following exception was thrown during execution in test generation
        try {
            astRoot15.setBaseLineno(25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(astRoot15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0\tSCRIPT 0 0\n" + "'", str18, "0\tSCRIPT 0 0\n");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        boolean boolean9 = scope6.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, scope10);
        astRoot0.replaceWith(scope6);
        int int15 = astRoot0.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot0.getSymbolTable();
        java.lang.String str17 = astRoot0.toSource();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = parser11.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot15.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node20 = com.google.javascript.rhino.head.Node.newString((-414560696), "                        {\n                        }\n");
        astRoot15.setCompilerData((java.lang.Object) node20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = iRFactory10.transformTree(astRoot15);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot26 = iRFactory10.parse("java.io.IOException:                   {\n                  }\n", "java.io.IOException: 8\tSCRIPT 8 1\n", 1189996818);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: missing ; before statement (java.io.IOException: 8?SCRIPT 8 1?#1189996818)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astRoot15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(scriptNode22);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        int int12 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node13 = scriptNode3.target;
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = astRoot14.getComments();
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode3.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getNextTempName();
        int int32 = scriptNode30.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = astRoot33.getAstRoot();
        java.lang.String str35 = astRoot34.shortName();
        java.lang.String str37 = astRoot34.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = astRoot34.getFunctions();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) astRoot34, 6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        astRoot34.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot42);
        astRoot42.setPosition(19);
        astRoot42.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode48.toSource(0);
        scriptNode48.clearParentScope();
        boolean boolean52 = scriptNode48.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator57 = scope56.spliterator();
        astRoot54.addChildScope(scope56);
        java.lang.String str60 = astRoot54.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        java.lang.String str63 = astRoot61.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode64.getSymbols();
        java.lang.String str66 = astRoot61.toStringTree(scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scope67.addChild((com.google.javascript.rhino.head.ast.AstNode) scope68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope68.setTop(scriptNode70);
        java.lang.String str73 = scope68.toSource(12);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode64, (com.google.javascript.rhino.head.Node) scope68);
        astRoot54.setBaseLineno(19);
        scriptNode48.addChildToBack((com.google.javascript.rhino.head.Node) astRoot54);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap78 = astRoot54.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        scope79.addChild((com.google.javascript.rhino.head.ast.AstNode) scope80);
        boolean boolean82 = scope79.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope();
        scope83.addChild((com.google.javascript.rhino.head.ast.AstNode) scope84);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope79, scope83);
        com.google.javascript.rhino.head.ast.AstRoot astRoot87 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int88 = astRoot87.getParamCount();
        java.lang.String str89 = astRoot87.debugPrint();
        java.lang.String str90 = astRoot87.getSourceName();
        astRoot87.setEncodedSource("                  ");
        scope83.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot87);
        boolean boolean94 = scope83.hasChildren();
        astRoot54.replaceWith(scope83);
        scriptNode28.addChildAfter((com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot54);
        com.google.javascript.rhino.head.Node node97 = scriptNode28.getLastSibling();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(commentSet26);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(astRoot34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AstRoot" + "'", str35, "AstRoot");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{\n}\n" + "'", str50, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "136" + "'", str63, "136");
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                        {\n                        }\n" + "'", str73, "                        {\n                        }\n");
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str89, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(node97);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: Scope");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        com.google.javascript.rhino.head.Node node11 = astRoot4.getLastSibling();
        int int12 = node11.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        java.lang.String str20 = astRoot13.toSource(0);
        java.lang.String str22 = astRoot13.toSource(25);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope3, node11, (com.google.javascript.rhino.head.Node) astRoot13);
        int int26 = astRoot13.getIntProp(4, (-1593445669));
        java.lang.String str27 = astRoot13.toSource();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1593445669) + "'", int26 == (-1593445669));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        scope2.setLength(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment29 = null;
        astRoot22.setJsDocNode(comment29);
        astRoot22.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean35 = astRoot34.hasSideEffects();
        int int36 = astRoot34.getParamCount();
        astRoot22.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        scriptNode38.setSourceName("");
        astRoot22.setTop(scriptNode38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray49 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList50, symbolArray49);
        astRoot47.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList50);
        boolean boolean53 = astRoot47.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap54 = astRoot47.getSymbolTable();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot47);
        astRoot7.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment58 = astRoot7.getJsDocNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot7);
        int int60 = astRoot7.getParamCount();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(symbolArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(comment58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        java.lang.String str8 = astRoot6.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode9.getSymbols();
        java.lang.String str11 = astRoot6.toStringTree(scriptNode9);
        astRoot6.checkParentLinks();
        int int15 = astRoot6.getIntProp(11, 32);
        int int16 = astRoot6.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.clearParentScope();
        boolean boolean21 = scriptNode17.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = null;
        scriptNode17.setSymbolTable(strMap22);
        int int24 = scriptNode17.getRegexpCount();
        int int25 = scriptNode17.getRegexpCount();
        astRoot6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.AstNode astNode28 = scriptNode17.getParent();
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode17.getDefiningScope("                        {\n                        }\n");
        scriptNode17.setEncodedSource("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = scriptNode17.getAstRoot();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(astNode28);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(astRoot33);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        int int5 = astRoot0.getLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str3 = astRoot2.debugPrint();
        astRoot2.setInStrictMode(false);
        int int6 = astRoot2.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        astRoot7.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        astRoot7.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot7.target = astRoot14;
        int int25 = astRoot14.getType();
        java.lang.String str26 = astRoot14.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = astRoot14.getFunctions();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        boolean boolean33 = compilerEnvirons28.recoverFromErrors();
        java.util.Set<java.lang.String> strSet34 = compilerEnvirons28.getActivationNames();
        compilerEnvirons28.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser37 = new com.google.javascript.rhino.head.Parser(compilerEnvirons28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = parser37.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot41.setEncodedSourceEnd(4);
        java.lang.String str44 = astRoot41.debugPrint();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot41, 14);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = astRoot14.getComments();
        astRoot14.removeChildren();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons49.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter52 = compilerEnvirons49.getErrorReporter();
        boolean boolean53 = compilerEnvirons49.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons49);
        com.google.javascript.rhino.head.Parser parser55 = new com.google.javascript.rhino.head.Parser(compilerEnvirons49);
        boolean boolean56 = compilerEnvirons49.recoverFromErrors();
        compilerEnvirons49.setRecoverFromErrors(false);
        compilerEnvirons49.setXmlAvailable(true);
        astRoot14.setCompilerData((java.lang.Object) true);
        astRoot14.setEncodedSourceBounds((-53), (int) '4');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = astRoot14.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str3, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 136 + "'", int6 == 136);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(strSet34);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0\tSCRIPT 0 0\n" + "'", str44, "0\tSCRIPT 0 0\n");
        org.junit.Assert.assertNull(commentSet47);
        org.junit.Assert.assertNotNull(errorReporter52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(functionNode65);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = astRoot29.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        boolean boolean38 = scope35.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope35, scope39);
        astRoot29.replaceWith(scope35);
        java.lang.String str44 = scope35.debugPrint();
        astRoot23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = astRoot23.getFunctions();
        com.google.javascript.rhino.head.Node node47 = astRoot23.getNext();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(scopeList34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n" + "'", str44, "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(node47);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-738182430));
        astRoot1.setBaseLineno(0);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        scriptNode9.setBounds((int) (byte) -1, 23);
        int int15 = astRoot3.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        astRoot3.setRelative(441866554);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource(0);
        scriptNode18.removeProp((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode23.toSource(0);
        scriptNode23.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode23.getSymbols();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        compilerEnvirons29.setRecordingComments(true);
        boolean boolean36 = compilerEnvirons29.isGenerateObserverCount();
        boolean boolean37 = compilerEnvirons29.isGenerateDebugInfo();
        compilerEnvirons29.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons40.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = compilerEnvirons40.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons29, errorReporter43);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        java.lang.String str49 = astRoot47.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode50.getSymbols();
        java.lang.String str52 = astRoot47.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        int int56 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode50, (com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator60 = scope59.spliterator();
        astRoot57.addChildScope(scope59);
        java.lang.String str63 = astRoot57.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = astRoot57.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str67 = astRoot66.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode69 = astRoot68.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) astRoot68, (com.google.javascript.rhino.head.Node) scriptNode70);
        int int74 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot57, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot66, 24);
        astRoot66.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = iRFactory44.transformTree(astRoot66);
        int int79 = astRoot66.getAbsolutePosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = astRoot66.getChildScopes();
        astRoot66.setBaseLineno(0);
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        java.lang.String str84 = astRoot3.toStringTree(scriptNode23);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorReporter43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "136" + "'", str49, "136");
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertNull(astNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope4 = astRoot0.getDefiningScope("java.io.IOException: ");
        int int5 = astRoot0.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList6 = astRoot0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getNextTempName();
        java.lang.String str9 = scriptNode7.debugPrint();
        scriptNode7.setLineno((int) (byte) -1);
        int int12 = scriptNode7.getFunctionCount();
        scriptNode7.setPosition(1022253418);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor16 = astRoot0.iterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(astNodeList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(nodeItor16);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.setBounds(10, (int) (byte) -1);
        astRoot1.setBounds(891951792, 199686354);
        com.google.javascript.rhino.head.Node node35 = astRoot1.getFirstChild();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node35);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scope5);
        int int7 = scope5.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope5.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int12 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope5, (com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        boolean boolean22 = astRoot14.isInStrictMode();
        astRoot14.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        int int33 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        astRoot34.addChildScope(scope36);
        java.lang.String str40 = astRoot34.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment41 = null;
        astRoot34.setJsDocNode(comment41);
        int int43 = astRoot34.getType();
        astRoot14.target = astRoot34;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = astRoot14.getEnclosingFunction();
        boolean boolean46 = astRoot14.hasConsistentReturnUsage();
        astRoot14.setRelative((-10));
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-12) + "'", int12 == (-12));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-52) + "'", int33 == (-52));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 136 + "'", int43 == 136);
        org.junit.Assert.assertNull(functionNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.setTop(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        scriptNode4.setCompilerData((java.lang.Object) scope7);
        scriptNode4.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        int int16 = scriptNode12.getEncodedSourceEnd();
        scriptNode4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.Node node18 = scriptNode4.getFirstChild();
        boolean boolean19 = node18.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        boolean boolean24 = scope21.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope21, scope25);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = scope25.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = scope25.getAstRoot();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) scope25);
        node18.addChildrenToFront((com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        astRoot34.addChildScope(scope36);
        java.lang.String str40 = astRoot34.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope48.setTop(scriptNode50);
        java.lang.String str53 = scope48.toSource(12);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope48);
        int int55 = astRoot34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = scope58.spliterator();
        astRoot56.addChildScope(scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        java.lang.String str63 = scriptNode61.debugPrint();
        scriptNode61.setLineno((int) (byte) -1);
        scriptNode61.flattenSymbolTable(true);
        astRoot56.setTop(scriptNode61);
        astRoot56.clearParentScope();
        astRoot34.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot56);
        com.google.javascript.rhino.head.Node node71 = astRoot56.target;
        int int72 = astRoot56.getLineno();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) astRoot56);
        int int74 = astRoot56.getLineno();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                        {\n                        }\n" + "'", str53, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter7.error("                                                                                                        {\n                                                                                                        }\n", "java.io.IOException: |", 93440577, "java.io.IOException: ", (-1130896406));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1130896406");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        int int30 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode24, (com.google.javascript.rhino.head.ast.AstNode) scope27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        int int36 = scriptNode33.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node37 = scriptNode33.getLastChild();
        scriptNode33.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = null;
        scriptNode33.setSymbolTable(strMap40);
        int int42 = scriptNode33.getEndLineno();
        com.google.javascript.rhino.head.Node node45 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode33, node45, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray50 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList51, symbolArray50);
        astRoot48.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList51);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope54.addChild((com.google.javascript.rhino.head.ast.AstNode) scope55);
        astRoot48.addChildScope(scope55);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList58 = astRoot48.getStatements();
        scriptNode33.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot48);
        int int60 = scriptNode33.getLineno();
        int int61 = scriptNode33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator65 = scope63.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node67 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node68 = node67.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        node67.addChildToFront((com.google.javascript.rhino.head.Node) scope69);
        scope63.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode66, node67);
        scriptNode66.flattenSymbolTable(false);
        int int74 = scriptNode66.getType();
        java.lang.String str75 = scriptNode66.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str77 = astRoot76.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator79 = scope78.spliterator();
        astRoot76.addChildScope(scope78);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList81 = astRoot76.getChildScopes();
        scriptNode66.setCompilerData((java.lang.Object) scopeList81);
        int int83 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode33, (com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = scriptNode33.getTop();
        boolean boolean85 = scriptNode84.hasConsistentReturnUsage();
        java.lang.String str86 = scriptNode84.getEncodedSource();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(symbolArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(astNodeList58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 136 + "'", int74 == 136);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "136" + "'", str75, "136");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator79);
        org.junit.Assert.assertNotNull(scopeList81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(scriptNode84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node11 = astRoot3.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray15 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList16, symbolArray15);
        astRoot13.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = astRoot20.getParamCount();
        java.lang.String str29 = astRoot20.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray33 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList34, symbolArray33);
        astRoot31.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        astRoot31.addChildScope(scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int45 = astRoot44.getEndLineno();
        java.lang.Object obj46 = astRoot44.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray47 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet48 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet48, commentArray47);
        astRoot44.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        astRoot44.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getNextTempName();
        com.google.javascript.rhino.head.Node node54 = scriptNode52.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList55 = scriptNode52.getFunctions();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) scriptNode52);
        int int57 = astRoot42.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot42);
        astRoot42.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int64 = astRoot63.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int66 = astRoot65.getEndLineno();
        java.lang.Object obj67 = astRoot65.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray68 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet69 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet69, commentArray68);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet69);
        astRoot65.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str74 = scriptNode73.getNextTempName();
        com.google.javascript.rhino.head.Node node75 = scriptNode73.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList76 = scriptNode73.getFunctions();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) astRoot65, (com.google.javascript.rhino.head.Node) scriptNode73);
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot65);
        astRoot3.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot20);
        com.google.javascript.rhino.head.ast.Symbol symbol82 = astRoot3.getSymbol("526823265");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(symbolArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str29, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(symbolArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(commentArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(functionNodeList55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(commentArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertNotNull(functionNodeList76);
        org.junit.Assert.assertNull(symbol82);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(278475323);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        boolean boolean88 = astRoot42.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot89 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot90 = astRoot89.getAstRoot();
        java.lang.String str91 = astRoot90.shortName();
        java.lang.String str92 = astRoot90.getSourceName();
        int int95 = astRoot90.getIntProp(12, (int) ' ');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator96 = astRoot90.spliterator();
        java.lang.String str97 = astRoot90.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            astRoot42.removeChild((com.google.javascript.rhino.head.Node) astRoot90);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-736275797) + "'", int67 == (-736275797));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(astRoot90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "AstRoot" + "'", str91, "AstRoot");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32 + "'", int95 == 32);
        org.junit.Assert.assertNotNull(nodeSpliterator96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str97, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = astRoot0.getParamCount();
        astRoot0.checkParentLinks();
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        astRoot0.putProp((-738182430), (java.lang.Object) iOException8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode12.toSource(0);
        scriptNode12.removeProp((int) (short) 1);
        scriptNode12.setSourceName("                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        boolean boolean29 = astRoot21.isInStrictMode();
        astRoot21.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        int int35 = scriptNode32.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getLastChild();
        astRoot21.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        boolean boolean38 = astRoot21.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = astRoot40.getAstRoot();
        java.lang.String str42 = astRoot41.shortName();
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node44 = node43.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        node43.addChildToFront((com.google.javascript.rhino.head.Node) scope45);
        int int47 = scope45.getLineno();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scope45, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        astRoot41.addChildrenToFront((com.google.javascript.rhino.head.Node) scope51);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator54 = astRoot41.new NodeIterator();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot41, 23);
        scriptNode12.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot21);
        astRoot0.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str60 = scriptNode12.toSource((int) (short) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{\n}\n" + "'", str14, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AstRoot" + "'", str42, "AstRoot");
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{\n}\n" + "'", str60, "{\n}\n");
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser12 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter11);
        int int13 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setIdeMode(false);
        int int18 = compilerEnvirons0.getOptimizationLevel();
        int int19 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setOptimizationLevel(4);
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        boolean boolean9 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet13 = compilerEnvirons10.getActivationNames();
        boolean boolean14 = compilerEnvirons10.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        boolean boolean18 = compilerEnvirons15.isRecordingLocalJsDocComments();
        compilerEnvirons15.setWarnTrailingComma(false);
        compilerEnvirons15.setAllowSharpComments(false);
        boolean boolean23 = compilerEnvirons15.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setWarnTrailingComma(true);
        java.lang.String[] strArray36 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        compilerEnvirons24.setActivationNames((java.util.Set<java.lang.String>) strSet37);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet37);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet37);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet37);
        compilerEnvirons0.setGenerateObserverCount(true);
        boolean boolean45 = compilerEnvirons0.isStrictMode();
        boolean boolean46 = compilerEnvirons0.recoverFromErrors();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        astRoot4.setInStrictMode(true);
        int int12 = astRoot4.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        astRoot13.checkParentLinks();
        int int22 = astRoot13.getIntProp(11, 32);
        int int23 = astRoot13.getPosition();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((-738182430), (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot13, 2);
        java.lang.String str26 = astRoot13.shortName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AstRoot" + "'", str26, "AstRoot");
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        scope7.setPosition(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str16 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope19, 25);
        java.lang.Object obj23 = scriptNode13.getProp(0);
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode13);
        int int25 = scriptNode13.getEncodedSourceEnd();
        scriptNode13.setLineno((-638464135));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        astRoot10.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot17);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = astRoot17.spliterator();
        int int25 = astRoot17.getRegexpCount();
        astRoot10.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot17);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = astRoot17.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(nodeSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setRecordingLocalJsDocComments(false);
        boolean boolean4 = compilerEnvirons1.isGeneratingSource();
        compilerEnvirons1.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isGenerateDebugInfo();
        compilerEnvirons7.setIdeMode(false);
        compilerEnvirons7.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        boolean boolean24 = compilerEnvirons20.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter25);
        compilerEnvirons1.setErrorReporter(errorReporter25);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter25.runtimeError("-1\tSCRIPT -1 1\n", "-1\t  BLOCK 0 1\n", 0, "                                                {\n                                                }\n", 129);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = astRoot34.getTop();
        int int38 = astRoot34.getParamCount();
        astRoot34.checkParentLinks();
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException42);
        astRoot34.putProp((-738182430), (java.lang.Object) iOException42);
        evaluatorException33.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException47 = new java.io.IOException("java.io.IOException: hi!", (java.lang.Throwable) iOException42);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet21 = compilerEnvirons18.getActivationNames();
        boolean boolean22 = compilerEnvirons18.recoverFromErrors();
        boolean boolean23 = compilerEnvirons18.getWarnTrailingComma();
        boolean boolean24 = compilerEnvirons18.isIdeMode();
        boolean boolean25 = compilerEnvirons18.isRecordingLocalJsDocComments();
        boolean boolean26 = compilerEnvirons18.isIdeMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setWarnTrailingComma(true);
        java.lang.String[] strArray39 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        compilerEnvirons27.setActivationNames((java.util.Set<java.lang.String>) strSet40);
        boolean boolean43 = compilerEnvirons27.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser44 = new com.google.javascript.rhino.head.Parser(compilerEnvirons27);
        compilerEnvirons27.setAllowMemberExprAsFunctionName(false);
        boolean boolean47 = compilerEnvirons27.isGeneratingSource();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "$1", "{\n}\n", "                                                                ", "java.io.IOException: 136", "Scope", "ScriptNode", "136", "java.io.IOException: ", "                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n", "$1", "ScriptNode", "/=", "                          ", "                                                                " };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        compilerEnvirons27.setActivationNames((java.util.Set<java.lang.String>) strSet64);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet64);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet64);
        com.google.javascript.rhino.head.ErrorReporter errorReporter69 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory70 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter69);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = iRFactory70.parse("", "775058292", 365074104);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(astRoot74);
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode3.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList13 = scriptNode3.getFunctions();
        scriptNode3.setBaseLineno(0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNotNull(functionNodeList13);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons0.getErrorReporter();
        errorReporter12.warning("|", "typeof", (int) (byte) 10, "{\n}\n{\n}\n", 1004037913);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-72803501));
        scriptNode1.setEncodedSourceBounds(608130738, (-138693843));
        java.lang.String str5 = scriptNode1.getEncodedSource();
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope7.setSymbolTable(strMap10);
        scope7.removeChildren();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scope7.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            double double14 = scope7.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(scopeList13);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getEndLineno();
        java.lang.Object obj10 = astRoot8.getCompilerData();
        astRoot1.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot8);
        astRoot8.setPosition(25);
        astRoot8.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope17.setTop(scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        scriptNode19.setCompilerData((java.lang.Object) scope22);
        scriptNode19.setEncodedSourceEnd(0);
        int int27 = scriptNode19.getType();
        astRoot8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        com.google.javascript.rhino.head.Node node29 = astRoot8.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.Object obj31 = scriptNode30.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList35 = scope34.getChildScopes();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((-443001414), (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope34);
        scriptNode30.setEncodedSourceStart(24);
        com.google.javascript.rhino.head.ast.Comment comment39 = null;
        scriptNode30.setJsDocNode(comment39);
        java.lang.String str41 = scriptNode30.getJsDoc();
        java.lang.String str42 = scriptNode30.getJsDoc();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 136 + "'", int27 == 136);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(scopeList35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        int int3 = scope0.getIntProp(968742650, 6);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 6 + "'", int3 == 6);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        boolean boolean15 = compilerEnvirons11.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons11.getErrorReporter();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons11.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setWarnTrailingComma(true);
        boolean boolean26 = compilerEnvirons23.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons20, errorReporter27);
        boolean boolean29 = compilerEnvirons20.recoverFromErrors();
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons11, errorReporter30);
        compilerEnvirons0.setErrorReporter(errorReporter30);
        compilerEnvirons0.setXmlAvailable(false);
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(errorReporter30);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        int int15 = scriptNode11.getEncodedSourceEnd();
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        scriptNode3.setBaseLineno(6);
        java.lang.String str19 = scriptNode3.getEncodedSource();
        java.lang.String str20 = scriptNode3.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        int int24 = scriptNode22.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = astRoot25.getAstRoot();
        java.lang.String str27 = astRoot26.shortName();
        java.lang.String str29 = astRoot26.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = astRoot26.getFunctions();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) astRoot26, 6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = scriptNode22.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode34.toSource(0);
        scriptNode34.clearParentScope();
        boolean boolean38 = scriptNode34.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode34.setSymbolTable(strMap39);
        int int41 = scriptNode34.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList42 = scriptNode34.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode43.toSource(0);
        scriptNode43.clearParentScope();
        boolean boolean47 = scriptNode43.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = scope51.spliterator();
        astRoot49.addChildScope(scope51);
        java.lang.String str55 = astRoot49.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        java.lang.String str58 = astRoot56.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode59.getSymbols();
        java.lang.String str61 = astRoot56.toStringTree(scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope63.setTop(scriptNode65);
        java.lang.String str68 = scope63.toSource(12);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope63);
        astRoot49.setBaseLineno(19);
        scriptNode43.addChildToBack((com.google.javascript.rhino.head.Node) astRoot49);
        astRoot49.removeChildren();
        int int74 = astRoot49.getEncodedSourceEnd();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot76.getParent();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        scope79.addChild((com.google.javascript.rhino.head.ast.AstNode) scope80);
        com.google.javascript.rhino.head.Node node82 = scope80.getFirstChild();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope80);
        astRoot76.target = node83;
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = astRoot76.getAstRoot();
        boolean boolean86 = astRoot85.hasSideEffects();
        astRoot49.addChildToBack((com.google.javascript.rhino.head.Node) astRoot85);
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        scriptNode3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = scriptNode3.getTop();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator91 = scriptNode3.spliterator();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AstRoot" + "'", str27, "AstRoot");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{\n}\n" + "'", str36, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astNodeList42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{\n}\n" + "'", str45, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "136" + "'", str58, "136");
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                        {\n                        }\n" + "'", str68, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNotNull(astRoot85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(scriptNode90);
        org.junit.Assert.assertNotNull(nodeSpliterator91);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory3 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(strSet5);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.IRFactory iRFactory7 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getEndLineno();
        java.lang.Object obj10 = astRoot8.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol12 = astRoot8.getSymbol("java.io.IOException: ");
        astRoot8.setSourceName("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node15 = iRFactory7.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot8);
        astRoot8.setEncodedSource("-1");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral18 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot8.addRegExp(regExpLiteral18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(symbol12);
        org.junit.Assert.assertNotNull(node15);
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1074101998));
        com.google.javascript.rhino.head.Node node2 = scope1.getLastChild();
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        boolean boolean13 = compilerEnvirons10.recoverFromErrors();
        compilerEnvirons10.setRecordingComments(true);
        boolean boolean16 = compilerEnvirons10.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        compilerEnvirons17.setErrorReporter(errorReporter23);
        com.google.javascript.rhino.head.IRFactory iRFactory25 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons10, errorReporter23);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter23.runtimeError("java.io.IOException:   {\n  }\n", "-1\tSCRIPT -1 1\n", 25, "0", 1051569336);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter23);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertNotNull(evaluatorException31);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        java.lang.String str9 = astRoot3.shortName();
        astRoot3.setInStrictMode(true);
        astRoot3.setBaseLineno(0);
        java.lang.String str15 = astRoot3.toSource((-1668176296));
        java.lang.String str17 = astRoot3.toSource((-1660235791));
        astRoot3.setEncodedSourceBounds(1171068332, (-139315390));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AstRoot" + "'", str9, "AstRoot");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        astRoot0.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.Scope scope6 = astRoot0.getParentScope();
        astRoot0.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot((-1291599107));
        java.lang.String str10 = astRoot9.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor11 = null;
        astRoot9.visitComments(nodeVisitor11);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.removeChild((com.google.javascript.rhino.head.Node) astRoot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1291599107\tSCRIPT -1291599107 1\n" + "'", str10, "-1291599107\tSCRIPT -1291599107 1\n");
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = scriptNode0.getAstRoot();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = scriptNode0.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(astRoot11);
        org.junit.Assert.assertNull(functionNode12);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.removeProp(8);
        com.google.javascript.rhino.head.ast.Scope scope31 = astRoot1.getParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor32 = null;
        astRoot1.visitComments(nodeVisitor32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode34.getFunctions();
        int int38 = scriptNode34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        int int43 = scriptNode39.getEncodedSourceEnd();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int54 = astRoot46.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot46, scope55);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = astRoot46.getSymbolTable();
        scriptNode34.setSymbolTable(strMap58);
        astRoot1.setSymbolTable(strMap58);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setWarnTrailingComma(true);
        boolean boolean65 = compilerEnvirons62.getWarnTrailingComma();
        astRoot1.putProp(7, (java.lang.Object) boolean65);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int69 = astRoot68.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray73 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet74 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet74, commentArray73);
        astRoot70.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet74);
        astRoot70.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str79 = scriptNode78.getNextTempName();
        com.google.javascript.rhino.head.Node node80 = scriptNode78.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode78.getFunctions();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot68, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) scriptNode78);
        int int83 = astRoot68.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope85 = new com.google.javascript.rhino.head.ast.Scope();
        scope84.addChild((com.google.javascript.rhino.head.ast.AstNode) scope85);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope85.setTop(scriptNode87);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor89 = scope85.iterator();
        astRoot68.setParentScope(scope85);
        java.lang.String str91 = scope85.toString();
        int int92 = scope85.getPosition();
        astRoot1.setCompilerData((java.lang.Object) scope85);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor94 = scope85.iterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(commentArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "$0" + "'", str79, "$0");
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(nodeItor89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "129" + "'", str91, "129");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(nodeItor94);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException16 = errorReporter10.runtimeError("0", "java.io.IOException: 8\tSCRIPT 8 1\n", 9876721, "3\tSCRIPT 3 3\n", 23890841);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertNotNull(evaluatorException16);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        int int10 = astRoot0.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = astRoot0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        boolean boolean23 = compilerEnvirons0.recoverFromErrors();
        boolean boolean24 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setWarnTrailingComma(true);
        boolean boolean28 = compilerEnvirons25.getWarnTrailingComma();
        compilerEnvirons25.setGeneratingSource(true);
        compilerEnvirons25.setIdeMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory33 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons25);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons34.setWarnTrailingComma(true);
        boolean boolean37 = compilerEnvirons34.getWarnTrailingComma();
        compilerEnvirons34.setGeneratingSource(true);
        compilerEnvirons34.setOptimizationLevel(4);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons42.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet45 = compilerEnvirons42.getActivationNames();
        boolean boolean46 = compilerEnvirons42.recoverFromErrors();
        boolean boolean47 = compilerEnvirons42.getWarnTrailingComma();
        boolean boolean48 = compilerEnvirons42.isIdeMode();
        boolean boolean49 = compilerEnvirons42.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons50.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons53 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons53.setWarnTrailingComma(true);
        boolean boolean56 = compilerEnvirons53.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter57 = compilerEnvirons53.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser58 = new com.google.javascript.rhino.head.Parser(compilerEnvirons50, errorReporter57);
        com.google.javascript.rhino.head.Parser parser59 = new com.google.javascript.rhino.head.Parser(compilerEnvirons42, errorReporter57);
        boolean boolean60 = compilerEnvirons42.isStrictMode();
        compilerEnvirons42.setStrictMode(false);
        boolean boolean63 = compilerEnvirons42.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons64 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean65 = compilerEnvirons64.recoverFromErrors();
        int int66 = compilerEnvirons64.getLanguageVersion();
        compilerEnvirons64.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons69 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons69.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter72 = compilerEnvirons69.getErrorReporter();
        boolean boolean73 = compilerEnvirons69.isGenerateObserverCount();
        boolean boolean74 = compilerEnvirons69.recoverFromErrors();
        java.util.Set<java.lang.String> strSet75 = compilerEnvirons69.getActivationNames();
        boolean boolean76 = compilerEnvirons69.reportWarningAsError();
        compilerEnvirons69.setWarnTrailingComma(false);
        boolean boolean79 = compilerEnvirons69.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory80 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons69);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons81 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons81.setStrictMode(true);
        int int84 = compilerEnvirons81.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons85 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons85.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons88 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons88.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter91 = compilerEnvirons88.getErrorReporter();
        compilerEnvirons85.setErrorReporter(errorReporter91);
        compilerEnvirons81.setErrorReporter(errorReporter91);
        com.google.javascript.rhino.head.Parser parser94 = new com.google.javascript.rhino.head.Parser(compilerEnvirons69, errorReporter91);
        compilerEnvirons64.setErrorReporter(errorReporter91);
        com.google.javascript.rhino.head.Parser parser96 = new com.google.javascript.rhino.head.Parser(compilerEnvirons42, errorReporter91);
        com.google.javascript.rhino.head.Parser parser97 = new com.google.javascript.rhino.head.Parser(compilerEnvirons34, errorReporter91);
        com.google.javascript.rhino.head.IRFactory iRFactory98 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons25, errorReporter91);
        com.google.javascript.rhino.head.IRFactory iRFactory99 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter91);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(errorReporter57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(errorReporter72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(errorReporter91);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.lang.String str7 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.Node node8 = astRoot1.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = astRoot9.getAstRoot();
        java.lang.String str11 = astRoot10.shortName();
        java.lang.String str12 = astRoot10.getSourceName();
        int int13 = astRoot10.getAbsolutePosition();
        int int14 = astRoot10.getPosition();
        astRoot1.addChildToFront((com.google.javascript.rhino.head.Node) astRoot10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = astRoot10.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        int int20 = scriptNode17.getBaseLineno();
        int int21 = scriptNode17.getParamCount();
        com.google.javascript.rhino.head.Node node22 = scriptNode17.getFirstChild();
        int int23 = scriptNode17.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.setFinally((com.google.javascript.rhino.head.Node) scriptNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AstRoot" + "'", str11, "AstRoot");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getNextTempName();
        java.lang.String str9 = scriptNode7.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = scriptNode7.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node11 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node12 = node11.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode7, node12, (com.google.javascript.rhino.head.Node) astRoot14);
        int int16 = astRoot14.getEncodedSourceEnd();
        int int17 = astRoot14.getFunctionCount();
        astRoot14.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getEndLineno();
        java.lang.Object obj25 = astRoot23.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray26 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet27, commentArray26);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        astRoot23.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getNextTempName();
        com.google.javascript.rhino.head.Node node33 = scriptNode31.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode31.getFunctions();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode31);
        astRoot21.setEncodedSourceBounds(21, (int) (short) 10);
        astRoot21.setInStrictMode(true);
        astRoot14.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot21);
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) astRoot21);
        java.lang.String str44 = astRoot21.toSource((-1568335506));
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = astRoot21.getComments();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(commentArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(commentSet45);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.removeProp((int) (short) 1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = scriptNode0.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope6 = scriptNode0.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = scriptNode0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertNull(scopeList5);
        org.junit.Assert.assertNull(scope6);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray19 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList20, symbolArray19);
        astRoot17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        astRoot17.addChildScope(scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        astRoot30.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        com.google.javascript.rhino.head.Node node40 = scriptNode38.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode38.getFunctions();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int43 = astRoot28.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot28);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode52.toSource(0);
        scriptNode52.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) '#', node48, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode52, 2);
        com.google.javascript.rhino.head.Node node60 = scope51.getLastChild();
        com.google.javascript.rhino.head.Node node61 = astRoot17.getChildBefore(node60);
        java.lang.String str63 = astRoot17.toSource(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = scriptNode64.getTop();
        int int66 = scriptNode64.getBaseLineno();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{\n}\n" + "'", str54, "{\n}\n");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(2);
        java.lang.String str2 = astRoot1.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray11 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList12, symbolArray11);
        astRoot9.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        astRoot9.addChildScope(scope16);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = astRoot9.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = astRoot9.getSymbols();
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = astRoot22.getAstRoot();
        java.lang.String str24 = astRoot23.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = astRoot23.getTop();
        com.google.javascript.rhino.head.Node node26 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node27 = node26.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        node26.addChildToFront((com.google.javascript.rhino.head.Node) scope28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = scope28.getAstRoot();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(437731425, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scope28, (int) (short) 100);
        int int33 = astRoot23.getEncodedSourceStart();
        scriptNode4.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        astRoot1.setCompilerData((java.lang.Object) astRoot23);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet39 = compilerEnvirons36.getActivationNames();
        boolean boolean40 = compilerEnvirons36.recoverFromErrors();
        boolean boolean41 = compilerEnvirons36.getWarnTrailingComma();
        boolean boolean42 = compilerEnvirons36.isIdeMode();
        boolean boolean43 = compilerEnvirons36.isRecordingLocalJsDocComments();
        compilerEnvirons36.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = astRoot47.getAstRoot();
        java.lang.String str49 = astRoot48.shortName();
        java.lang.String str50 = astRoot48.getSourceName();
        astRoot48.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap52 = astRoot48.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = iRFactory46.transformTree(astRoot48);
        java.lang.String str55 = astRoot48.toSource(1034001328);
        astRoot48.checkParentLinks();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot23, (com.google.javascript.rhino.head.ast.Scope) astRoot48);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(symbolArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AstRoot" + "'", str24, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNull(astRoot30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(astRoot48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AstRoot" + "'", str49, "AstRoot");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getRegexpCount();
        com.google.javascript.rhino.head.Node node17 = astRoot3.getNext();
        astRoot3.setBaseLineno(10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = astRoot3.getComments();
        astRoot3.setLength((-12));
        astRoot3.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = astRoot3.getFunctions();
        java.lang.String str26 = astRoot3.getEncodedSource();
        boolean boolean27 = astRoot3.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(commentSet20);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot1, 4);
        boolean boolean5 = node4.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Comment comment6 = node4.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope7 = comment6.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(comment6);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons1.getErrorReporter();
        boolean boolean5 = compilerEnvirons1.isGenerateObserverCount();
        compilerEnvirons1.setRecordingComments(true);
        boolean boolean8 = compilerEnvirons1.isGenerateObserverCount();
        boolean boolean9 = compilerEnvirons1.isGenerateDebugInfo();
        compilerEnvirons1.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory16 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1, errorReporter15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode21 = astRoot20.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int26 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot18, scope27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory16.transformTree(astRoot18);
        com.google.javascript.rhino.head.ast.Scope scope31 = scriptNode30.getEnclosingScope();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scriptNode30);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(astNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(scope31);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingComments(true);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setIdeMode(true);
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons12.getErrorReporter();
        boolean boolean16 = compilerEnvirons12.isGenerateObserverCount();
        boolean boolean17 = compilerEnvirons12.recoverFromErrors();
        java.util.Set<java.lang.String> strSet18 = compilerEnvirons12.getActivationNames();
        boolean boolean19 = compilerEnvirons12.reportWarningAsError();
        compilerEnvirons12.setIdeMode(false);
        boolean boolean22 = compilerEnvirons12.recoverFromErrors();
        boolean boolean23 = compilerEnvirons12.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setWarnTrailingComma(true);
        java.lang.String[] strArray36 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        compilerEnvirons24.setActivationNames((java.util.Set<java.lang.String>) strSet37);
        boolean boolean40 = compilerEnvirons24.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons24);
        compilerEnvirons24.setAllowSharpComments(true);
        compilerEnvirons24.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons46 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons46.setWarnTrailingComma(true);
        boolean boolean49 = compilerEnvirons46.isRecordingLocalJsDocComments();
        compilerEnvirons46.setWarnTrailingComma(false);
        compilerEnvirons46.setAllowSharpComments(false);
        boolean boolean54 = compilerEnvirons46.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons55 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons55.setWarnTrailingComma(true);
        java.lang.String[] strArray67 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        compilerEnvirons55.setActivationNames((java.util.Set<java.lang.String>) strSet68);
        compilerEnvirons46.setActivationNames((java.util.Set<java.lang.String>) strSet68);
        compilerEnvirons24.setActivationNames((java.util.Set<java.lang.String>) strSet68);
        boolean boolean73 = compilerEnvirons24.isXmlAvailable();
        boolean boolean74 = compilerEnvirons24.isGeneratingSource();
        boolean boolean75 = compilerEnvirons24.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter76 = compilerEnvirons24.getErrorReporter();
        compilerEnvirons12.setErrorReporter(errorReporter76);
        compilerEnvirons0.setErrorReporter(errorReporter76);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(errorReporter76);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setGeneratingSource(false);
        boolean boolean10 = compilerEnvirons0.isRecordingComments();
        boolean boolean11 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator35 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        java.lang.String str38 = astRoot36.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode39.getSymbols();
        java.lang.String str41 = astRoot36.toStringTree(scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        int int45 = positionComparator35.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode39, (com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator49 = scope48.spliterator();
        astRoot46.addChildScope(scope48);
        java.lang.String str52 = astRoot46.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = astRoot46.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode58 = astRoot57.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode59.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) astRoot57, (com.google.javascript.rhino.head.Node) scriptNode59);
        int int63 = positionComparator35.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot46, (com.google.javascript.rhino.head.ast.AstNode) astRoot55);
        com.google.javascript.rhino.head.ast.Comment[] commentArray64 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet65, commentArray64);
        astRoot55.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        astRoot33.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        com.google.javascript.rhino.head.ast.Symbol symbol70 = astRoot33.getSymbol("{\n}\n");
        // The following exception was thrown during execution in test generation
        try {
            astRoot33.setDouble((double) 441866554);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$1" + "'", str34, "$1");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "136" + "'", str38, "136");
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(commentArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(symbol70);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.setTop(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        scriptNode4.setCompilerData((java.lang.Object) scope7);
        scriptNode4.setEncodedSourceEnd(0);
        int int12 = scriptNode4.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = scope15.spliterator();
        astRoot13.addChildScope(scope15);
        java.lang.String str19 = astRoot13.toSource(9);
        scriptNode4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot13);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(910648842, (com.google.javascript.rhino.head.Node) scriptNode4, (-846380080));
        scriptNode4.setLineno((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = scriptNode4.getClass();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.Node node5 = scope3.getFirstChild();
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope3);
        scope3.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode9 = scope3.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol14 = astRoot10.getSymbol("java.io.IOException: ");
        astRoot10.setEncodedSourceStart(0);
        java.lang.String str18 = astRoot10.toSource(14);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode9, (com.google.javascript.rhino.head.Node) astRoot10);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot10.addRegExp(regExpLiteral20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(astNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode1.getParent();
        java.lang.String str14 = scriptNode1.toSource((-112076812));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{\n}\n" + "'", str14, "{\n}\n");
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        java.io.IOException iOException2 = new java.io.IOException("$0");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("                        ", (java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        astRoot2.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray14 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet15, commentArray14);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot2.target = astRoot9;
        int int20 = astRoot9.getType();
        java.lang.String str21 = astRoot9.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList22 = astRoot9.getFunctions();
        int int23 = astRoot9.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        astRoot24.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = astRoot24.getAstRoot();
        java.lang.String str29 = astRoot28.shortName();
        astRoot28.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        astRoot28.visitComments(nodeVisitor31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot36.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor42 = null;
        astRoot34.visitComments(nodeVisitor42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = astRoot44.getChildScopes();
        java.lang.String str50 = astRoot44.toString();
        astRoot34.addChildToBack((com.google.javascript.rhino.head.Node) astRoot44);
        astRoot44.setEncodedSourceBounds(6, (-1438167940));
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((-78159348), (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getEndLineno();
        boolean boolean58 = astRoot56.hasChildren();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot56, (-475744774));
        boolean boolean61 = node60.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(commentArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str21, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(functionNodeList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(astRoot28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AstRoot" + "'", str29, "AstRoot");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertNotNull(scopeList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "136" + "'", str50, "136");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        java.lang.String str12 = scriptNode1.shortName();
        java.lang.Object obj13 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = scriptNode1.compareTo(astNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ScriptNode" + "'", str12, "ScriptNode");
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        astRoot7.flattenSymbolTable(true);
        int int29 = astRoot7.getEndLineno();
        astRoot7.setPosition(5);
        boolean boolean32 = astRoot7.isInStrictMode();
        int int33 = astRoot7.getEncodedSourceStart();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = scope10.spliterator();
        astRoot8.addChildScope(scope10);
        java.lang.String str14 = astRoot8.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment15 = null;
        astRoot8.setJsDocNode(comment15);
        astRoot8.setEncodedSourceStart(4);
        astRoot8.removeChildren();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot8);
        astRoot1.setBounds(365262889, (-1106041107));
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = astRoot1.getComments();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(commentSet24);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.debugPrint();
        com.google.javascript.rhino.head.Node node5 = astRoot2.getFirstChild();
        boolean boolean6 = astRoot2.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        astRoot7.checkParentLinks();
        int int16 = astRoot7.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getEndLineno();
        java.lang.Object obj20 = astRoot18.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot18.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        com.google.javascript.rhino.head.Node node25 = astRoot18.getLastSibling();
        int int26 = node25.getType();
        astRoot7.putProp((int) ' ', (java.lang.Object) node25);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot7, 26);
        astRoot7.setEncodedSourceStart((-52));
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot33);
        astRoot33.flattenSymbolTable(false);
        astRoot33.setEncodedSource("-1\tLE -1 1\n");
        astRoot7.setCompilerData((java.lang.Object) astRoot33);
        // The following exception was thrown during execution in test generation
        try {
            astRoot33.labelId((-139315390));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        int int6 = astRoot1.getFunctionCount();
        int int7 = astRoot1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot8.getAstRoot();
        java.lang.String str10 = astRoot9.shortName();
        java.lang.String str11 = astRoot9.getSourceName();
        astRoot9.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap13 = astRoot9.getSymbolTable();
        java.lang.String str14 = astRoot9.getNextTempName();
        astRoot9.setEncodedSourceEnd((-645466284));
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AstRoot" + "'", str10, "AstRoot");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = astRoot6.getAstRoot();
        astRoot6.removeProp(761599885);
        int int19 = astRoot6.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = astRoot6.getSymbols();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral21 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot6.addRegExp(regExpLiteral21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertNotNull(astRoot16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(symbolList20);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot1.getSymbols();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = astRoot1.spliterator();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.Node node26 = astRoot1.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        java.lang.String str30 = scriptNode28.debugPrint();
        scriptNode28.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        java.lang.String str39 = astRoot34.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getEndLineno();
        java.lang.Object obj45 = astRoot43.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray46 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet47, commentArray46);
        astRoot43.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet47);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet47);
        int int51 = astRoot41.getRegexpCount();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot41, 550287075);
        java.lang.String str54 = scriptNode28.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = scriptNode28.getTop();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setFinally((com.google.javascript.rhino.head.Node) scriptNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(commentArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str54, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode55);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot1.setRelative((int) (byte) -1);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot1);
        int int14 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.lang.String str35 = scope30.toSource(12);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope30);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = astRoot16.getSymbols();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = astRoot16.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        java.lang.String str42 = scriptNode40.debugPrint();
        scriptNode40.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        java.lang.String str48 = astRoot46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = scriptNode49.getSymbols();
        java.lang.String str51 = astRoot46.toStringTree(scriptNode49);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int56 = astRoot55.getEndLineno();
        java.lang.Object obj57 = astRoot55.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray58 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet59 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet59, commentArray58);
        astRoot55.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet59);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet59);
        int int63 = astRoot53.getRegexpCount();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot53, 550287075);
        com.google.javascript.rhino.head.Node node66 = astRoot46.target;
        java.lang.String str67 = astRoot46.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor68 = null;
        astRoot46.visitComments(nodeVisitor68);
        astRoot16.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot46);
        java.lang.String str71 = astRoot1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot16);
        int int72 = astRoot1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator75 = scope74.spliterator();
        scope74.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scope74);
        int int79 = astRoot1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope74);
        com.google.javascript.rhino.head.ast.AstRoot astRoot82 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str83 = astRoot82.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode85 = astRoot84.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode86.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot82, (com.google.javascript.rhino.head.Node) astRoot84, (com.google.javascript.rhino.head.Node) scriptNode86);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList90 = scriptNode86.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList91 = scriptNode86.getFunctions();
        scriptNode86.setEndLineno(1159083728);
        scope74.putProp(100, (java.lang.Object) scriptNode86);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node95 = scope74.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                        {\n                        }\n" + "'", str35, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str42, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNotNull(symbolList50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(commentArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str67, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "$0" + "'", str83, "$0");
        org.junit.Assert.assertNull(astNode85);
        org.junit.Assert.assertNull(scopeList90);
        org.junit.Assert.assertNotNull(functionNodeList91);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean2 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getParentScope();
        int int4 = scope1.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump5 = scope1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 24 + "'", int4 == 24);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        int int8 = astRoot1.getLineno();
        int int11 = astRoot1.getIntProp((-236001159), 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor12 = null;
        astRoot1.visitComments(nodeVisitor12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getNextTempName();
        com.google.javascript.rhino.head.Node node16 = scriptNode14.target;
        boolean boolean17 = scriptNode14.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode14.getSymbols();
        astRoot1.setSymbols(symbolList18);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = astRoot1.new NodeIterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(symbolList18);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Parser parser29 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = parser29.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator37 = scope35.new NodeIterator();
        scope35.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        java.lang.String str42 = astRoot40.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode43.getSymbols();
        java.lang.String str45 = astRoot40.toStringTree(scriptNode43);
        java.lang.String str47 = astRoot40.toSource(0);
        java.lang.String str49 = astRoot40.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getNextTempName();
        com.google.javascript.rhino.head.Node node52 = scriptNode50.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode50.getFunctions();
        int int54 = scriptNode50.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        int int59 = scriptNode55.getEncodedSourceEnd();
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str63 = astRoot62.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode65 = astRoot64.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode66.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) scriptNode66);
        int int70 = astRoot62.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        scope71.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot62, scope71);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap74 = astRoot62.getSymbolTable();
        scriptNode50.setSymbolTable(strMap74);
        astRoot40.setSymbolTable(strMap74);
        scope35.setSymbolTable(strMap74);
        astRoot33.setSymbolTable(strMap74);
        astRoot23.setSymbolTable(strMap74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode(20);
        astRoot23.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode81);
        astRoot23.checkParentLinks();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "136" + "'", str42, "136");
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(astNode65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        boolean boolean33 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean35 = compilerEnvirons34.recoverFromErrors();
        int int36 = compilerEnvirons34.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons34.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter37);
        boolean boolean39 = compilerEnvirons0.isIdeMode();
        boolean boolean40 = compilerEnvirons0.recoverFromErrors();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isIdeMode();
        boolean boolean17 = compilerEnvirons0.isIdeMode();
        boolean boolean18 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean21 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons22.getErrorReporter();
        boolean boolean26 = compilerEnvirons22.isGenerateObserverCount();
        boolean boolean27 = compilerEnvirons22.recoverFromErrors();
        java.util.Set<java.lang.String> strSet28 = compilerEnvirons22.getActivationNames();
        compilerEnvirons22.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setWarnTrailingComma(true);
        boolean boolean34 = compilerEnvirons31.isRecordingLocalJsDocComments();
        compilerEnvirons31.setWarnTrailingComma(false);
        compilerEnvirons31.setAllowSharpComments(false);
        boolean boolean39 = compilerEnvirons31.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons40.setWarnTrailingComma(true);
        java.lang.String[] strArray52 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        compilerEnvirons40.setActivationNames((java.util.Set<java.lang.String>) strSet53);
        compilerEnvirons31.setActivationNames((java.util.Set<java.lang.String>) strSet53);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons57 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons57.setWarnTrailingComma(true);
        boolean boolean60 = compilerEnvirons57.isRecordingLocalJsDocComments();
        compilerEnvirons57.setWarnTrailingComma(false);
        compilerEnvirons57.setAllowSharpComments(false);
        boolean boolean65 = compilerEnvirons57.isGenerateDebugInfo();
        compilerEnvirons57.setIdeMode(false);
        compilerEnvirons57.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons70 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons70.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter73 = compilerEnvirons70.getErrorReporter();
        boolean boolean74 = compilerEnvirons70.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter75 = compilerEnvirons70.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser76 = new com.google.javascript.rhino.head.Parser(compilerEnvirons57, errorReporter75);
        com.google.javascript.rhino.head.IRFactory iRFactory77 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons31, errorReporter75);
        compilerEnvirons22.setErrorReporter(errorReporter75);
        compilerEnvirons0.setErrorReporter(errorReporter75);
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(errorReporter73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(errorReporter75);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        scriptNode5.setEncodedSourceStart(17);
        java.lang.Object obj11 = scriptNode5.getCompilerData();
        scriptNode5.setBaseLineno(531785163);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.visit(nodeVisitor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        scriptNode4.flattenSymbolTable(false);
        int int12 = scriptNode4.getType();
        java.lang.String str13 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator17 = scope16.spliterator();
        astRoot14.addChildScope(scope16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = astRoot14.getChildScopes();
        scriptNode4.setCompilerData((java.lang.Object) scopeList19);
        com.google.javascript.rhino.head.ast.Comment comment21 = null;
        scriptNode4.setJsDocNode(comment21);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "136" + "'", str13, "136");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator17);
        org.junit.Assert.assertNotNull(scopeList19);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.Comment comment10 = astRoot0.getJsDocNode();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(comment10);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-329971307), 79606921);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node3 = scope2.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.setSourceName("                ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        java.lang.String str39 = astRoot37.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = scriptNode40.getSymbols();
        java.lang.String str42 = astRoot37.toStringTree(scriptNode40);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope44.setTop(scriptNode46);
        java.lang.String str49 = scope44.toSource(12);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope44);
        int int51 = astRoot30.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        java.lang.String str54 = astRoot52.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode55.getSymbols();
        java.lang.String str57 = astRoot52.toStringTree(scriptNode55);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList58 = scriptNode55.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = astRoot59.getAstRoot();
        java.lang.String str61 = astRoot60.shortName();
        java.lang.String str62 = astRoot60.getSourceName();
        astRoot60.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = astRoot60.getSymbolTable();
        java.lang.String str66 = astRoot60.makeIndent(32);
        astRoot30.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) astRoot60);
        astRoot15.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot60);
        int int69 = astRoot60.getPosition();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "136" + "'", str39, "136");
        org.junit.Assert.assertNotNull(symbolList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "                        {\n                        }\n" + "'", str49, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "136" + "'", str54, "136");
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(astNodeList58);
        org.junit.Assert.assertNotNull(astRoot60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AstRoot" + "'", str61, "AstRoot");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                                                " + "'", str66, "                                                                ");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser5 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons8.getErrorReporter();
        boolean boolean12 = compilerEnvirons8.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons8.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException19 = errorReporter13.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        com.google.javascript.rhino.head.Parser parser20 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter13);
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertNotNull(evaluatorException19);
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        java.io.IOException iOException3 = new java.io.IOException("$0");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        java.lang.String[] strArray29 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        compilerEnvirons17.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        compilerEnvirons8.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        compilerEnvirons8.setAllowMemberExprAsFunctionName(true);
        int int36 = compilerEnvirons8.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons37.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter40 = compilerEnvirons37.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException46 = errorReporter40.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        errorReporter40.warning("                  ", "$1", 100, "AstRoot", 1);
        compilerEnvirons8.setErrorReporter(errorReporter40);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException59 = errorReporter40.runtimeError("2\tBLOCK 2 -1\n", "                        {\n                        }\n", 15, "                                            ", 9);
        iOException6.addSuppressed((java.lang.Throwable) evaluatorException59);
        java.io.IOException iOException61 = new java.io.IOException("35\tBLOCK 35 -236001159\n", (java.lang.Throwable) iOException6);
        java.io.IOException iOException62 = new java.io.IOException("                                                                ", (java.lang.Throwable) iOException6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(errorReporter40);
        org.junit.Assert.assertNotNull(evaluatorException46);
        org.junit.Assert.assertNotNull(evaluatorException59);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.removeProp((int) (short) 1);
        int int5 = scriptNode0.getEncodedSourceStart();
        scriptNode0.setSourceName("java.io.IOException: java.io.IOException");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node8 = scriptNode0.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setGenerateObserverCount(false);
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean15 = compilerEnvirons12.isRecordingLocalJsDocComments();
        compilerEnvirons12.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException24 = errorReporter18.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException30 = errorReporter18.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException36 = errorReporter18.runtimeError("java.io.IOException: java.io.IOException: ", "{\n}\n", 520361644, "java.io.IOException: java.io.IOException", (int) (short) 10);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException42 = errorReporter18.runtimeError("java.io.IOException: java.io.IOException: hi!", "-1\t  BLOCK 0 1\n", (int) (byte) 0, "                  ", 6);
        com.google.javascript.rhino.head.IRFactory iRFactory43 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        boolean boolean44 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean45 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertNotNull(evaluatorException24);
        org.junit.Assert.assertNotNull(evaluatorException30);
        org.junit.Assert.assertNotNull(evaluatorException36);
        org.junit.Assert.assertNotNull(evaluatorException42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = scope0.getParent();
        org.junit.Assert.assertNull(astNode1);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        int int2 = astRoot0.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = astRoot0.getFunctions();
        boolean boolean4 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = astRoot0.getTop();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(scriptNode5);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int30 = astRoot15.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = astRoot15.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot15.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        astRoot34.addChildScope(scope36);
        java.lang.String str40 = astRoot34.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment41 = null;
        astRoot34.setJsDocNode(comment41);
        int int43 = astRoot34.getType();
        java.lang.String str44 = astRoot34.getEncodedSource();
        astRoot34.setInStrictMode(false);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(703513808, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot34, (int) (byte) 1);
        java.lang.String str50 = astRoot15.makeIndent((-818134700));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 136 + "'", int43 == 136);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = scriptNode2.target;
        int int5 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastChild();
        scriptNode2.setRelative((-1));
        com.google.javascript.rhino.head.Node node10 = scriptNode2.setType((int) (byte) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode16 = astRoot15.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode17);
        int int21 = astRoot13.getParamCount();
        java.lang.String str22 = astRoot13.debugPrint();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot13);
        astRoot13.flattenSymbolTable(false);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = astRoot13.getSymbols();
        com.google.javascript.rhino.head.ast.Comment comment27 = null;
        astRoot13.setJsDocNode(comment27);
        astRoot13.setInStrictMode(false);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot13, (-1471166994));
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = scriptNode2.getRegexpFlags((-532772747));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str22, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(symbolList26);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGeneratingSource();
        boolean boolean22 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean23 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setIdeMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        int int11 = astRoot3.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope12 = astRoot3.getParentScope();
        int int13 = astRoot3.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.setDouble((double) (-645466284));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        astRoot53.addChildScope(scope55);
        java.lang.String str59 = astRoot53.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        java.lang.String str62 = astRoot60.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode63.getSymbols();
        java.lang.String str65 = astRoot60.toStringTree(scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope67.setTop(scriptNode69);
        java.lang.String str72 = scope67.toSource(12);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope67);
        astRoot50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray77 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList78, symbolArray77);
        astRoot75.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList78);
        astRoot75.clearParentScope();
        astRoot50.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = astRoot84.getAstRoot();
        java.lang.String str86 = astRoot85.shortName();
        java.lang.String str87 = astRoot85.getSourceName();
        int int88 = astRoot85.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) astRoot85);
        astRoot75.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot85);
        com.google.javascript.rhino.head.Node node92 = astRoot85.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot94 = new com.google.javascript.rhino.head.ast.AstRoot((-1285574509));
        node92.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot94);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode96 = astRoot94.getEnclosingFunction();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-465551262) + "'", int51 == (-465551262));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                        {\n                        }\n" + "'", str72, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(symbolArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(astRoot85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "AstRoot" + "'", str86, "AstRoot");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertNull(functionNode96);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode0.setEncodedSourceBounds((int) (short) 100, 10);
        java.lang.String str6 = scriptNode0.getJsDoc();
        java.lang.String str8 = scriptNode0.toSource(2);
        java.lang.String str10 = scriptNode0.toSource(129);
        int int11 = scriptNode0.getLineno();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "    {\n    }\n" + "'", str8, "    {\n    }\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = astRoot14.getAstRoot();
        int int30 = astRoot14.getIntProp(1236319614, 9);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot14.visit(nodeVisitor31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 9 + "'", int30 == 9);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator5 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator6 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator7 = positionComparator5.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int20 = positionComparator5.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) scope19);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = astNodeComparator4.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator5);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = positionComparator0.thenComparing(astNodeComparator21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = astRoot25.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        boolean boolean34 = scope31.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope31, scope35);
        astRoot25.replaceWith(scope31);
        int int40 = astRoot25.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getEndLineno();
        astRoot25.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot41);
        java.lang.String str45 = astRoot25.toSource(8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator50 = scope49.spliterator();
        astRoot47.addChildScope(scope49);
        java.lang.String str53 = astRoot47.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        java.lang.String str56 = astRoot54.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode57.getSymbols();
        java.lang.String str59 = astRoot54.toStringTree(scriptNode57);
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        scope60.addChild((com.google.javascript.rhino.head.ast.AstNode) scope61);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope61.setTop(scriptNode63);
        java.lang.String str66 = scope61.toSource(12);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scope61);
        int int68 = astRoot47.getEncodedSourceEnd();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator69 = astRoot47.spliterator();
        int int70 = astRoot47.depth();
        int int71 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot25, (com.google.javascript.rhino.head.ast.AstNode) astRoot47);
        boolean boolean72 = astRoot47.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        scope73.addChild((com.google.javascript.rhino.head.ast.AstNode) scope74);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator76 = scope74.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node78 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node79 = node78.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        node78.addChildToFront((com.google.javascript.rhino.head.Node) scope80);
        scope74.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode77, node78);
        scriptNode77.flattenSymbolTable(false);
        int int85 = scriptNode77.getType();
        java.lang.String str86 = scriptNode77.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot87 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str88 = astRoot87.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope89 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator90 = scope89.spliterator();
        astRoot87.addChildScope(scope89);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList92 = astRoot87.getChildScopes();
        scriptNode77.setCompilerData((java.lang.Object) scopeList92);
        int int94 = scriptNode77.getLineno();
        scriptNode77.setBounds((-264384405), 653625563);
        // The following exception was thrown during execution in test generation
        try {
            astRoot47.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(astNodeComparator7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertNotNull(scopeList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "136" + "'", str56, "136");
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                        {\n                        }\n" + "'", str66, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 136 + "'", int85 == 136);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "136" + "'", str86, "136");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "$0" + "'", str88, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator90);
        org.junit.Assert.assertNotNull(scopeList92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scope7.spliterator();
        astRoot5.addChildScope(scope7);
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot5);
        com.google.javascript.rhino.head.ast.Symbol symbol12 = astRoot5.getSymbol("                  ");
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = scope14.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node18 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node19 = node18.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        node18.addChildToFront((com.google.javascript.rhino.head.Node) scope20);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode17, node18);
        int int23 = scriptNode17.getEncodedSourceEnd();
        astRoot5.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        int int35 = astRoot25.getRegexpCount();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = astRoot25.getSymbolTable();
        com.google.javascript.rhino.head.ast.Comment comment37 = astRoot25.getJsDocNode();
        astRoot25.setLineno((-1115328205));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = astRoot25.getTop();
        java.lang.String str41 = scriptNode40.getSourceName();
        scriptNode17.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNull(symbol12);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(comment37);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        boolean boolean4 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory5 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.Comment comment13 = null;
        scriptNode11.setJsDocNode(comment13);
        int int15 = scriptNode11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scope17.getChildScopes();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope17, (int) (short) 10);
        java.lang.Object obj22 = scope17.getProp((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        astRoot25.addChildScope(scope32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getEndLineno();
        java.lang.Object obj40 = astRoot38.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        astRoot38.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getNextTempName();
        com.google.javascript.rhino.head.Node node48 = scriptNode46.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = scriptNode46.getFunctions();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode46);
        int int51 = astRoot36.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot36);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot36);
        com.google.javascript.rhino.head.Node node54 = astRoot36.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = astRoot55.getAstRoot();
        java.lang.String str57 = astRoot56.shortName();
        java.lang.String str59 = astRoot56.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList60 = astRoot56.getFunctions();
        astRoot56.checkParentLinks();
        boolean boolean62 = astRoot56.hasChildren();
        int int63 = astRoot56.getLineno();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot56, (int) ' ');
        int int66 = astRoot36.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = iRFactory5.transformTree(astRoot36);
        com.google.javascript.rhino.head.Node node68 = astRoot36.getLastChild();
        com.google.javascript.rhino.head.Node node69 = astRoot36.target;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AstRoot" + "'", str57, "AstRoot");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(functionNodeList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(node69);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int6 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.IRFactory iRFactory7 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        scope8.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.Node node12 = scope8.target;
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray16 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList17, symbolArray16);
        astRoot14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = astRoot21.getParamCount();
        java.lang.String str30 = astRoot21.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray34 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList35, symbolArray34);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList35);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        astRoot32.addChildScope(scope39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getEndLineno();
        java.lang.Object obj47 = astRoot45.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot45.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        astRoot45.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getNextTempName();
        com.google.javascript.rhino.head.Node node55 = scriptNode53.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = scriptNode53.getFunctions();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode53);
        int int58 = astRoot43.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot43);
        astRoot43.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int65 = astRoot64.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int67 = astRoot66.getEndLineno();
        java.lang.Object obj68 = astRoot66.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray69 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet70, commentArray69);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        astRoot66.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getNextTempName();
        com.google.javascript.rhino.head.Node node76 = scriptNode74.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode74.getFunctions();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) scriptNode74);
        astRoot43.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot66);
        astRoot66.setEncodedSourceBounds((int) (short) -1, 13);
        scope8.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot66);
        com.google.javascript.rhino.head.Node node85 = iRFactory7.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(symbolArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(symbolArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(commentArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertNotNull(node85);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException("", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("", (java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = iOException6.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = astRoot2.getTop();
        astRoot2.clearParentScope();
        astRoot2.setSourceName("");
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray11 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList12, symbolArray11);
        astRoot9.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        astRoot9.addChildScope(scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getEndLineno();
        java.lang.Object obj24 = astRoot22.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray25 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet26, commentArray25);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        astRoot22.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getNextTempName();
        com.google.javascript.rhino.head.Node node32 = scriptNode30.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode30.getFunctions();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int35 = astRoot20.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList37 = astRoot20.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.clearParentScope();
        boolean boolean42 = scriptNode38.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        java.lang.String str53 = astRoot51.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode54.getSymbols();
        java.lang.String str56 = astRoot51.toStringTree(scriptNode54);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope57.addChild((com.google.javascript.rhino.head.ast.AstNode) scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope58.setTop(scriptNode60);
        java.lang.String str63 = scope58.toSource(12);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) scope58);
        astRoot44.setBaseLineno(19);
        scriptNode38.addChildToBack((com.google.javascript.rhino.head.Node) astRoot44);
        astRoot44.removeChildren();
        astRoot44.setLength(1115693949);
        java.lang.String str71 = astRoot20.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot44);
        boolean boolean72 = astRoot20.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int74 = astRoot73.getEndLineno();
        java.lang.Object obj75 = astRoot73.getCompilerData();
        astRoot73.setBaseLineno(14);
        astRoot73.setEncodedSourceStart((-1568335506));
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(482118943, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot73, (-414560696));
        com.google.javascript.rhino.head.Node node82 = node81.getLastSibling();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(symbolArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(commentArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "136" + "'", str53, "136");
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        {\n                        }\n" + "'", str63, "                        {\n                        }\n");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(node82);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope6.setTop(scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        scriptNode8.setCompilerData((java.lang.Object) scope11);
        scriptNode8.setEncodedSourceEnd(0);
        int int16 = scriptNode8.getType();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode22.toSource(0);
        scriptNode22.setEncodedSourceBounds(12, 10);
        scriptNode20.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode22);
        java.lang.String str29 = scriptNode20.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str34 = astRoot31.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot31.getFunctions();
        astRoot31.checkParentLinks();
        boolean boolean37 = astRoot31.hasConsistentReturnUsage();
        int int38 = astRoot31.getRegexpCount();
        scriptNode20.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = astRoot43.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray49 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList50, symbolArray49);
        scriptNode45.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = scriptNode45.getTop();
        scriptNode45.setSourceName("{\n}\n");
        int int56 = scriptNode45.getBaseLineno();
        java.lang.String str57 = scriptNode20.toStringTree(scriptNode45);
        scriptNode8.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str60 = astRoot59.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator62 = scope61.spliterator();
        astRoot59.addChildScope(scope61);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = astRoot59.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        java.lang.String str67 = astRoot65.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode68.getSymbols();
        java.lang.String str70 = astRoot65.toStringTree(scriptNode68);
        astRoot65.checkParentLinks();
        int int74 = astRoot65.getIntProp(11, 32);
        int int75 = astRoot65.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode76.toSource(0);
        scriptNode76.clearParentScope();
        boolean boolean80 = scriptNode76.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap81 = null;
        scriptNode76.setSymbolTable(strMap81);
        int int83 = scriptNode76.getRegexpCount();
        int int84 = scriptNode76.getRegexpCount();
        astRoot65.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode76);
        astRoot59.setTop(scriptNode76);
        com.google.javascript.rhino.head.ast.AstNode astNode87 = scriptNode76.getParent();
        int int88 = scriptNode76.getLineno();
        java.lang.String str89 = scriptNode45.toStringTree(scriptNode76);
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode45);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 136 + "'", int16 == 136);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{\n}\n" + "'", str24, "{\n}\n");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertNotNull(symbolArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "$0" + "'", str60, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator62);
        org.junit.Assert.assertNull(commentSet64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "136" + "'", str67, "136");
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32 + "'", int74 == 32);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{\n}\n" + "'", str78, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(astNode87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser12 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter11);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons13.getErrorReporter();
        boolean boolean17 = compilerEnvirons13.isGenerateObserverCount();
        boolean boolean18 = compilerEnvirons13.recoverFromErrors();
        java.util.Set<java.lang.String> strSet19 = compilerEnvirons13.getActivationNames();
        boolean boolean20 = compilerEnvirons13.reportWarningAsError();
        compilerEnvirons13.setWarnTrailingComma(false);
        boolean boolean23 = compilerEnvirons13.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons13);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setWarnTrailingComma(true);
        java.lang.String[] strArray37 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        compilerEnvirons25.setActivationNames((java.util.Set<java.lang.String>) strSet38);
        boolean boolean41 = compilerEnvirons25.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons25);
        compilerEnvirons25.setAllowSharpComments(true);
        compilerEnvirons25.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons47 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons47.setWarnTrailingComma(true);
        boolean boolean50 = compilerEnvirons47.isRecordingLocalJsDocComments();
        compilerEnvirons47.setWarnTrailingComma(false);
        compilerEnvirons47.setAllowSharpComments(false);
        boolean boolean55 = compilerEnvirons47.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons56 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons56.setWarnTrailingComma(true);
        java.lang.String[] strArray68 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet69 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet69, strArray68);
        compilerEnvirons56.setActivationNames((java.util.Set<java.lang.String>) strSet69);
        compilerEnvirons47.setActivationNames((java.util.Set<java.lang.String>) strSet69);
        compilerEnvirons25.setActivationNames((java.util.Set<java.lang.String>) strSet69);
        compilerEnvirons13.setActivationNames((java.util.Set<java.lang.String>) strSet69);
        boolean boolean75 = compilerEnvirons13.recoverFromErrors();
        com.google.javascript.rhino.head.ErrorReporter errorReporter76 = compilerEnvirons13.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory77 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter76);
        errorReporter76.warning("41", "-1291599107\tSCRIPT -1291599107 1\n", 975051644, "21", (-139315390));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(errorReporter76);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        astRoot0.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean13 = astRoot12.hasSideEffects();
        int int14 = astRoot12.getParamCount();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray19 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList20, symbolArray19);
        astRoot17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList20);
        boolean boolean23 = astRoot17.hasConsistentReturnUsage();
        astRoot17.setLineno((-3));
        astRoot17.setLength(13);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((-134670566), (com.google.javascript.rhino.head.Node) astRoot17, 6);
        com.google.javascript.rhino.head.Node node30 = astRoot17.getNext();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap31 = astRoot17.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = astRoot17.getAstRoot();
        astRoot12.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot17);
        int int34 = astRoot17.getEncodedSourceStart();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(11);
        com.google.javascript.rhino.head.Node node2 = scope1.target;
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode10.toSource(0);
        scriptNode10.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '#', node6, (com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode10, 2);
        com.google.javascript.rhino.head.Node node18 = scope9.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getEndLineno();
        java.lang.Object obj24 = astRoot22.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray25 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet26, commentArray25);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        astRoot22.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getNextTempName();
        com.google.javascript.rhino.head.Node node32 = scriptNode30.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode30.getFunctions();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int35 = astRoot20.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope37.setTop(scriptNode39);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor41 = scope37.iterator();
        astRoot20.setParentScope(scope37);
        scope9.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot20);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = scope45.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node49 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node50 = node49.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        node49.addChildToFront((com.google.javascript.rhino.head.Node) scope51);
        scope45.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode48, node49);
        astRoot20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        java.lang.String str55 = scriptNode48.toSource();
        // The following exception was thrown during execution in test generation
        try {
            scope1.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{\n}\n" + "'", str12, "{\n}\n");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(commentArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(nodeItor41);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet32 = astRoot30.getComments();
        int int35 = astRoot30.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = astRoot38.getAstRoot();
        java.lang.String str40 = astRoot39.shortName();
        java.lang.String str42 = astRoot39.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = astRoot39.getFunctions();
        astRoot39.checkParentLinks();
        boolean boolean45 = astRoot39.hasChildren();
        int int46 = astRoot39.getLineno();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot39, 2);
        astRoot30.target = astRoot39;
        boolean boolean50 = astRoot39.isInStrictMode();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(commentSet32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(astRoot39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AstRoot" + "'", str40, "AstRoot");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean19 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        astRoot1.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        int int15 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node16 = scriptNode12.getLastChild();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        java.lang.String str23 = astRoot19.makeIndent(18);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot19, 526823265);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = astRoot19.getTop();
        scriptNode12.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode26);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                                    " + "'", str23, "                                    ");
        org.junit.Assert.assertNotNull(scriptNode26);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        astRoot1.setInStrictMode(true);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = astRoot1.getFunctions();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = astRoot1.getComments();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertNull(commentSet9);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-255300984));
        scriptNode1.removeChildren();
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setLanguageVersion(0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons12.getActivationNames();
        boolean boolean16 = compilerEnvirons12.recoverFromErrors();
        boolean boolean17 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons12.isXmlAvailable();
        compilerEnvirons12.setGenerateDebugInfo(true);
        boolean boolean23 = compilerEnvirons12.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12);
        boolean boolean25 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setIdeMode(false);
        compilerEnvirons12.setReservedKeywordAsIdentifier(false);
        compilerEnvirons12.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean33 = compilerEnvirons32.recoverFromErrors();
        compilerEnvirons32.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setWarnTrailingComma(true);
        boolean boolean39 = compilerEnvirons36.isRecordingLocalJsDocComments();
        compilerEnvirons36.setWarnTrailingComma(false);
        compilerEnvirons36.setAllowSharpComments(false);
        boolean boolean44 = compilerEnvirons36.isGenerateDebugInfo();
        compilerEnvirons36.setIdeMode(false);
        compilerEnvirons36.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons49.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter52 = compilerEnvirons49.getErrorReporter();
        boolean boolean53 = compilerEnvirons49.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter54 = compilerEnvirons49.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser55 = new com.google.javascript.rhino.head.Parser(compilerEnvirons36, errorReporter54);
        com.google.javascript.rhino.head.IRFactory iRFactory56 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons32, errorReporter54);
        com.google.javascript.rhino.head.Parser parser57 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12, errorReporter54);
        com.google.javascript.rhino.head.Parser parser58 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(errorReporter52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(errorReporter54);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope9.spliterator();
        astRoot7.addChildScope(scope9);
        java.lang.String str13 = astRoot7.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        astRoot7.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot14);
        astRoot14.setPosition(25);
        java.lang.String str21 = astRoot14.toSource(17);
        astRoot14.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        boolean boolean24 = scope23.hasSideEffects();
        astRoot0.addChildAfter((com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scope23);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = scope27.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node31 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node32 = node31.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        node31.addChildToFront((com.google.javascript.rhino.head.Node) scope33);
        scope27.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode30, node31);
        int int36 = scriptNode30.getEncodedSourceEnd();
        java.lang.String str37 = scriptNode30.shortName();
        scriptNode30.setEncodedSourceStart(1796887248);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons40.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet43 = compilerEnvirons40.getActivationNames();
        boolean boolean44 = compilerEnvirons40.recoverFromErrors();
        boolean boolean45 = compilerEnvirons40.getWarnTrailingComma();
        boolean boolean46 = compilerEnvirons40.isIdeMode();
        boolean boolean47 = compilerEnvirons40.isRecordingLocalJsDocComments();
        compilerEnvirons40.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory50 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = astRoot51.getAstRoot();
        java.lang.String str53 = astRoot52.shortName();
        java.lang.String str54 = astRoot52.getSourceName();
        astRoot52.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = astRoot52.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = iRFactory50.transformTree(astRoot52);
        java.lang.String str58 = scriptNode30.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot52);
        java.lang.String str60 = astRoot52.toSource((int) (byte) -1);
        scope23.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot52);
        boolean boolean62 = scope23.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ScriptNode" + "'", str37, "ScriptNode");
        org.junit.Assert.assertNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(astRoot52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AstRoot" + "'", str53, "AstRoot");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode1.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, (com.google.javascript.rhino.head.ast.Scope) scriptNode1);
        java.lang.String str15 = scriptNode1.getJsDoc();
        int int16 = scriptNode1.getEncodedSourceEnd();
        scriptNode1.setSourceName("%");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        java.lang.Object obj18 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        astRoot23.setInStrictMode(true);
        int int31 = astRoot23.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        java.lang.String str34 = astRoot32.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        java.lang.String str37 = astRoot32.toStringTree(scriptNode35);
        astRoot32.checkParentLinks();
        int int41 = astRoot32.getIntProp(11, 32);
        int int42 = astRoot32.getPosition();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((-738182430), (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot32, 2);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope(23);
        scope46.removeProp(22);
        astRoot12.addChildAfter((com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scope46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getEndLineno();
        java.lang.Object obj52 = astRoot50.getCompilerData();
        int int53 = astRoot50.getLineno();
        astRoot50.setLineno((-94939013));
        int int56 = astRoot50.getAbsolutePosition();
        astRoot32.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "136" + "'", str34, "136");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isIdeMode();
        boolean boolean17 = compilerEnvirons0.isIdeMode();
        boolean boolean18 = compilerEnvirons0.reportWarningAsError();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        boolean boolean22 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean25 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean26 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setIdeMode(false);
        compilerEnvirons9.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons22.getErrorReporter();
        boolean boolean26 = compilerEnvirons22.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter27);
        com.google.javascript.rhino.head.Parser parser29 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = parser29.parse("                ", "-1", 100);
        java.lang.String str35 = astRoot33.toSource(3);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.setPosition(0);
        java.lang.String str22 = astRoot1.toSource(32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = astRoot1.getParamOrVarName(953557037);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        boolean boolean19 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean20 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        int int21 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons0.getErrorReporter();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(errorReporter22);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        com.google.javascript.rhino.head.Node node9 = astRoot1.setType(973854177);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(node9);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        scriptNode0.setJsDocNode(comment5);
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode15);
        int int19 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot11, scope20);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.lang.String str31 = astRoot25.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        java.lang.String str34 = astRoot32.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        java.lang.String str37 = astRoot32.toStringTree(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope39.setTop(scriptNode41);
        java.lang.String str44 = scope39.toSource(12);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope39);
        astRoot25.setBaseLineno(19);
        astRoot25.checkParentLinks();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(14, 26);
        scope20.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot25, node51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getNextTempName();
        com.google.javascript.rhino.head.Node node55 = scriptNode53.target;
        int int56 = scriptNode53.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node57 = scriptNode53.getLastChild();
        int int58 = scriptNode53.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap59 = scriptNode53.getSymbolTable();
        astRoot25.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        java.lang.String str62 = scriptNode53.toSource(9);
        scriptNode0.putProp(17, (java.lang.Object) 9);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "136" + "'", str34, "136");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                        {\n                        }\n" + "'", str44, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                  {\n                  }\n" + "'", str62, "                  {\n                  }\n");
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        boolean boolean14 = astRoot10.hasSideEffects();
        java.lang.String str16 = astRoot10.toSource(100);
        int int17 = astRoot10.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.Node node23 = scope21.getFirstChild();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope21);
        scope21.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode27 = scope21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getEndLineno();
        java.lang.Object obj30 = astRoot28.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol32 = astRoot28.getSymbol("java.io.IOException: ");
        astRoot28.setEncodedSourceStart(0);
        java.lang.String str36 = astRoot28.toSource(14);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode27, (com.google.javascript.rhino.head.Node) astRoot28);
        astRoot10.target = astRoot28;
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str41 = astRoot40.debugPrint();
        astRoot40.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment44 = null;
        astRoot40.setJsDocNode(comment44);
        java.lang.String str46 = astRoot40.getSourceName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor47 = null;
        astRoot40.visitComments(nodeVisitor47);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = astRoot40.getComments();
        astRoot28.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = astRoot40.getEnclosingFunction();
        int int52 = astRoot40.getFunctionCount();
        java.lang.String str53 = astRoot40.toString();
        com.google.javascript.rhino.head.Node node55 = astRoot40.setType(0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList56 = astRoot40.getChildScopes();
        int int57 = astRoot40.getLineno();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(astNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(symbol32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str41, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(commentSet49);
        org.junit.Assert.assertNull(functionNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "136" + "'", str53, "136");
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNull(scopeList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getParamCount();
        int int17 = astRoot3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope18 = astRoot3.getEnclosingScope();
        boolean boolean19 = astRoot3.isInStrictMode();
        int int20 = astRoot3.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope22 = astRoot3.getDefiningScope("java.io.IOException: -1\t  BLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope22);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getEndLineno();
        java.lang.Object obj7 = astRoot5.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray8 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet9, commentArray8);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet9);
        astRoot5.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode13.getFunctions();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode13);
        int int18 = astRoot5.getRegexpCount();
        com.google.javascript.rhino.head.Node node19 = astRoot5.getNext();
        astRoot5.setEncodedSourceBounds((-8), (-264283662));
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-280309866), (com.google.javascript.rhino.head.Node) astRoot5, 16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode30.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        scriptNode30.setEndLineno(1159083728);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode30, 32);
        scriptNode30.setPosition((-557946458));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(commentArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertNotNull(functionNodeList35);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = astRoot1.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setRecordingLocalJsDocComments(false);
        boolean boolean8 = compilerEnvirons5.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        compilerEnvirons9.setRecordingComments(true);
        boolean boolean16 = compilerEnvirons9.isGenerateObserverCount();
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter23);
        boolean boolean25 = compilerEnvirons9.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setRecordingLocalJsDocComments(false);
        boolean boolean30 = compilerEnvirons27.isGeneratingSource();
        compilerEnvirons27.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter36 = compilerEnvirons33.getErrorReporter();
        boolean boolean37 = compilerEnvirons33.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter38 = compilerEnvirons33.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException44 = errorReporter38.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter38.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons27, errorReporter38);
        compilerEnvirons9.setErrorReporter(errorReporter38);
        com.google.javascript.rhino.head.Parser parser53 = new com.google.javascript.rhino.head.Parser(compilerEnvirons5, errorReporter38);
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter38);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons55 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons55.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter58 = compilerEnvirons55.getErrorReporter();
        compilerEnvirons55.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons61 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons61.setStrictMode(true);
        boolean boolean64 = compilerEnvirons61.recoverFromErrors();
        compilerEnvirons61.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.Parser parser67 = new com.google.javascript.rhino.head.Parser(compilerEnvirons61);
        boolean boolean68 = compilerEnvirons61.isXmlAvailable();
        compilerEnvirons61.setOptimizationLevel(5);
        boolean boolean71 = compilerEnvirons61.reportWarningAsError();
        compilerEnvirons61.setXmlAvailable(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons74 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons74.setWarnTrailingComma(true);
        java.lang.String[] strArray86 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet87 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet87, strArray86);
        compilerEnvirons74.setActivationNames((java.util.Set<java.lang.String>) strSet87);
        compilerEnvirons74.setGenerateDebugInfo(true);
        compilerEnvirons74.setStrictMode(false);
        java.util.Set<java.lang.String> strSet94 = compilerEnvirons74.getActivationNames();
        compilerEnvirons61.setActivationNames(strSet94);
        compilerEnvirons55.setActivationNames(strSet94);
        compilerEnvirons0.setActivationNames(strSet94);
        boolean boolean98 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(errorReporter36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(errorReporter38);
        org.junit.Assert.assertNotNull(evaluatorException44);
        org.junit.Assert.assertNotNull(errorReporter58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strSet94);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) '#', node13, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode17, 2);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        java.lang.String str26 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = astRoot27.getComments();
        astRoot27.setEncodedSourceEnd(11);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        boolean boolean43 = astRoot27.isInStrictMode();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(commentSet39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-3));
        int int2 = node1.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        com.google.javascript.rhino.head.Node node10 = astRoot3.getLastSibling();
        astRoot3.setEncodedSourceBounds((int) (byte) -1, 20);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = astRoot3.getFunctions();
        java.lang.String str15 = astRoot3.toSource();
        java.lang.Object obj16 = astRoot3.getCompilerData();
        node1.addChildToFront((com.google.javascript.rhino.head.Node) astRoot3);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        astRoot22.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getNextTempName();
        com.google.javascript.rhino.head.Node node32 = scriptNode30.target;
        int int33 = scriptNode30.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node34 = scriptNode30.getLastChild();
        int int35 = scriptNode30.getEndLineno();
        astRoot22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        java.lang.String str37 = scriptNode30.getSourceName();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode30, 6);
        com.google.javascript.rhino.head.ast.Scope scope41 = scriptNode30.getDefiningScope("8\tSCRIPT 8 1\n");
        com.google.javascript.rhino.head.Node node42 = scriptNode30.getNext();
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.addChildrenToBack(node42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-3) + "'", int2 == (-3));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(node42);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getParamCount();
        int int17 = astRoot3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope18 = astRoot3.getEnclosingScope();
        boolean boolean19 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) '#', (-236001159));
        astRoot3.replaceWith(scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        java.lang.String str26 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean28 = compilerEnvirons27.recoverFromErrors();
        int int29 = compilerEnvirons27.getLanguageVersion();
        boolean boolean30 = compilerEnvirons27.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons31.getErrorReporter();
        boolean boolean35 = compilerEnvirons31.isGenerateObserverCount();
        compilerEnvirons31.setRecordingComments(true);
        boolean boolean38 = compilerEnvirons31.isGenerateObserverCount();
        boolean boolean39 = compilerEnvirons31.isGenerateDebugInfo();
        compilerEnvirons31.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons42.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons42.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons31, errorReporter45);
        boolean boolean47 = compilerEnvirons31.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons31.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory49 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons27, errorReporter48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot(23890841);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = iRFactory49.transformTree(astRoot51);
        astRoot3.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) astRoot51);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = astRoot3.getExistingIntProp(482118943);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(errorReporter45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertNotNull(scriptNode52);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = scriptNode26.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str33 = astRoot31.getSourceName();
        astRoot31.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot31.getSymbolTable();
        java.lang.String str37 = astRoot31.makeIndent(32);
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.Comment comment39 = astRoot31.getJsDocNode();
        java.lang.String str40 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode41.toSource(0);
        scriptNode41.clearParentScope();
        boolean boolean45 = scriptNode41.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap46 = null;
        scriptNode41.setSymbolTable(strMap46);
        int int48 = scriptNode41.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList49 = scriptNode41.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode50.toSource(0);
        scriptNode50.clearParentScope();
        boolean boolean54 = scriptNode50.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = scope58.spliterator();
        astRoot56.addChildScope(scope58);
        java.lang.String str62 = astRoot56.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str64 = astRoot63.getNextTempName();
        java.lang.String str65 = astRoot63.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode66.getSymbols();
        java.lang.String str68 = astRoot63.toStringTree(scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        scope69.addChild((com.google.javascript.rhino.head.ast.AstNode) scope70);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope70.setTop(scriptNode72);
        java.lang.String str75 = scope70.toSource(12);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode66, (com.google.javascript.rhino.head.Node) scope70);
        astRoot56.setBaseLineno(19);
        scriptNode50.addChildToBack((com.google.javascript.rhino.head.Node) astRoot56);
        astRoot56.removeChildren();
        int int81 = astRoot56.getEncodedSourceEnd();
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot56);
        astRoot56.setBounds(191686611, (-1361087235));
        astRoot31.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        astRoot31.setEncodedSource("-2\t    SCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                " + "'", str37, "                                                                ");
        org.junit.Assert.assertNull(comment39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(astNodeList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "136" + "'", str65, "136");
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                        {\n                        }\n" + "'", str75, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setRecordingComments(true);
        org.junit.Assert.assertNull(strSet3);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        java.io.IOException iOException1 = new java.io.IOException("$1");
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        astRoot0.setSourceName("java.io.IOException: ");
        java.lang.String str8 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.Node node9 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        node11.putProp(0, (java.lang.Object) scriptNode16);
        com.google.javascript.rhino.head.Node node20 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        node20.putProp(0, (java.lang.Object) scriptNode25);
        int int28 = scriptNode25.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = scriptNode25.getSymbols();
        scriptNode16.setSymbols(symbolList29);
        astRoot0.setSymbols(symbolList29);
        int int32 = astRoot0.getParamCount();
        java.lang.String str34 = astRoot0.toSource(468863303);
        java.lang.String str35 = astRoot0.debugPrint();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(symbolList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str35, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        java.lang.String str5 = astRoot0.toSource((int) (short) 0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = astRoot6.getComments();
        int int11 = astRoot6.getIntProp(0, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode12.toSource(0);
        scriptNode12.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node19 = scriptNode12.setType(0);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope21.setTop(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        scriptNode23.setCompilerData((java.lang.Object) scope26);
        scriptNode23.setEncodedSourceEnd(0);
        int int31 = scriptNode23.getType();
        int int32 = scriptNode23.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node33 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode23.getSymbols();
        scriptNode12.setSymbols(symbolList34);
        astRoot6.setSymbols(symbolList34);
        astRoot0.setSymbols(symbolList34);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(commentSet8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{\n}\n" + "'", str14, "{\n}\n");
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(symbolList34);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        int int5 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser14 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter13);
        boolean boolean15 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        boolean boolean16 = compilerEnvirons6.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        compilerEnvirons17.setWarnTrailingComma(false);
        compilerEnvirons17.setAllowSharpComments(false);
        boolean boolean25 = compilerEnvirons17.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        java.lang.String[] strArray38 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        compilerEnvirons26.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons17.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        boolean boolean45 = compilerEnvirons0.isRecordingComments();
        boolean boolean46 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean47 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int29 = astRoot14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = astRoot31.getComments();
        int int36 = astRoot31.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        java.lang.String str40 = astRoot38.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode41.getSymbols();
        java.lang.String str43 = astRoot38.toStringTree(scriptNode41);
        astRoot38.checkParentLinks();
        int int47 = astRoot38.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getEndLineno();
        java.lang.Object obj51 = astRoot49.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray52 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet53, commentArray52);
        astRoot49.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        com.google.javascript.rhino.head.Node node56 = astRoot49.getLastSibling();
        int int57 = node56.getType();
        astRoot38.putProp((int) ' ', (java.lang.Object) node56);
        int int59 = astRoot14.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        boolean boolean60 = astRoot14.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((-211756926), (com.google.javascript.rhino.head.Node) astRoot14, (-484812922));
        astRoot14.setEncodedSourceBounds(0, (-10));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(commentSet33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "136" + "'", str40, "136");
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(commentArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 136 + "'", int57 == 136);
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 429074911 + "'", int59 == 429074911);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        int int5 = astRoot4.getLineno();
        java.lang.String str6 = astRoot4.debugPrint();
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 35 + "'", int5 == 35);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0\tSCRIPT 0 2\n0\t  EXPR_RESULT 0 2\n0\t    NAME 0 2 $0\n" + "'", str6, "0\tSCRIPT 0 2\n0\t  EXPR_RESULT 0 2\n0\t    NAME 0 2 $0\n");
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int7 = scriptNode3.getIntProp((int) 'a', 19);
        int int8 = scriptNode3.getFunctionCount();
        scriptNode3.setEncodedSourceEnd(22);
        com.google.javascript.rhino.head.Node node11 = scriptNode3.getLastChild();
        scriptNode3.setEncodedSource("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
        boolean boolean14 = scriptNode3.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 19 + "'", int7 == 19);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.removeProp((int) (short) 1);
        int int10 = scriptNode5.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray14 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet15, commentArray14);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot11.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot11);
        com.google.javascript.rhino.head.Node node20 = scriptNode5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        int int22 = astRoot0.depth();
        astRoot0.setInStrictMode(true);
        java.lang.String str25 = astRoot0.getSourceName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(commentArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        astRoot7.removeProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = astRoot7.getTop();
        java.lang.String str31 = scriptNode30.debugPrint();
        java.lang.String str32 = scriptNode30.getEncodedSource();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "25\tSCRIPT 25 -25\n-1\t  SCRIPT -26 1\n" + "'", str31, "25\tSCRIPT 25 -25\n-1\t  SCRIPT -26 1\n");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(122705610, 3);
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(541550340, (com.google.javascript.rhino.head.Node) scope3, (int) (short) -1);
        com.google.javascript.rhino.head.ast.Comment comment6 = null;
        node5.setJsDocNode(comment6);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        java.lang.Object obj18 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = scope20.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        scope20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode23, node24);
        scriptNode23.flattenSymbolTable(false);
        int int31 = scriptNode23.getType();
        java.lang.String str32 = scriptNode23.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        astRoot33.addChildScope(scope35);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = astRoot33.getChildScopes();
        scriptNode23.setCompilerData((java.lang.Object) scopeList38);
        int int40 = scriptNode23.getPosition();
        java.lang.String[] strArray41 = scriptNode23.getParamAndVarNames();
        astRoot12.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        int int43 = astRoot12.getLineno();
        astRoot12.setLength((-853063820));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor46 = null;
        astRoot12.visitComments(nodeVisitor46);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertNotNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj4 = node2.getProp((-52));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        int int7 = scriptNode5.depth();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.lang.String str43 = scope38.toSource(12);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot46, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot46.getComments();
        node44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.Node node52 = astRoot46.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node57 = node56.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        node56.addChildToFront((com.google.javascript.rhino.head.Node) scope58);
        int int60 = scope58.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol62 = scope58.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int65 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scope58, (com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        node52.addChildToFront((com.google.javascript.rhino.head.Node) astRoot64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(22, node2, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot12);
        int int78 = scriptNode5.getFunctionCount();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator79 = scriptNode5.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node80 = nodeIterator79.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                        {\n                        }\n" + "'", str43, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(commentSet50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(symbol62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-12) + "'", int65 == (-12));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setStrictMode(false);
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons0.getActivationNames();
        boolean boolean21 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean24 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = astRoot0.getStatements();
        int int11 = astRoot0.getBaseLineno();
        astRoot0.checkParentLinks();
        java.lang.String str13 = astRoot0.getJsDoc();
        astRoot0.setSourceName("!");
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = astRoot0.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot((-1382980901));
        astRoot18.removeChildren();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.Comment comment25 = null;
        scriptNode23.setJsDocNode(comment25);
        int int27 = scriptNode23.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(astNodeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(astNodeList16);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        int int6 = astRoot1.getFunctionCount();
        astRoot1.setInStrictMode(false);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = null;
        astRoot1.setComments(commentSet9);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet14 = compilerEnvirons11.getActivationNames();
        boolean boolean15 = compilerEnvirons11.recoverFromErrors();
        boolean boolean16 = compilerEnvirons11.getWarnTrailingComma();
        boolean boolean17 = compilerEnvirons11.isIdeMode();
        boolean boolean18 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setWarnTrailingComma(true);
        boolean boolean25 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons19, errorReporter26);
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons11, errorReporter26);
        boolean boolean29 = compilerEnvirons11.isStrictMode();
        compilerEnvirons11.setStrictMode(false);
        compilerEnvirons11.setLanguageVersion((int) (byte) 100);
        astRoot1.setCompilerData((java.lang.Object) (byte) 100);
        int int35 = astRoot1.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope39 = astRoot37.getDefiningScope("AstRoot");
        astRoot37.setEncodedSourceStart((int) (byte) -1);
        int int42 = astRoot37.getEncodedSourceEnd();
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot37);
        java.lang.String str45 = astRoot1.toSource(0);
        java.lang.Object obj47 = astRoot1.getProp((-931416822));
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 136 + "'", int35 == 136);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = scriptNode26.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str33 = astRoot31.getSourceName();
        astRoot31.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot31.getSymbolTable();
        java.lang.String str37 = astRoot31.makeIndent(32);
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) astRoot31);
        astRoot1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode45 = astRoot44.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) scriptNode46);
        int int50 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot42, scope51);
        java.lang.String str54 = astRoot42.getEncodedSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons55 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons55.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter58 = compilerEnvirons55.getErrorReporter();
        boolean boolean59 = compilerEnvirons55.isGenerateObserverCount();
        boolean boolean60 = compilerEnvirons55.recoverFromErrors();
        java.util.Set<java.lang.String> strSet61 = compilerEnvirons55.getActivationNames();
        compilerEnvirons55.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.IRFactory iRFactory64 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons55);
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str67 = astRoot66.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = iRFactory64.transformTree(astRoot66);
        astRoot42.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot42);
        astRoot42.setLineno((-1115328205));
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = astRoot42.getComments();
        java.lang.String str74 = astRoot42.getNextTempName();
        astRoot42.setEndLineno(852076584);
        com.google.javascript.rhino.head.Node node77 = astRoot42.getLastChild();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                " + "'", str37, "                                                                ");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(astNode45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(errorReporter58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(strSet61);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str67, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertNull(commentSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$1" + "'", str74, "$1");
        org.junit.Assert.assertNotNull(node77);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot0.getAstRoot();
        java.lang.String str10 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.debugPrint();
        astRoot12.clearParentScope();
        java.lang.Object obj16 = astRoot12.getCompilerData();
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        int int18 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator19 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = positionComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator20);
        com.google.javascript.rhino.head.Node node22 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node23 = node22.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        node22.addChildToFront((com.google.javascript.rhino.head.Node) scope24);
        int int26 = scope24.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol28 = scope24.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int31 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scope24, (com.google.javascript.rhino.head.ast.AstNode) astRoot30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        boolean boolean41 = astRoot33.isInStrictMode();
        astRoot33.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int45 = astRoot44.getEndLineno();
        java.lang.Object obj46 = astRoot44.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray47 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet48 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet48, commentArray47);
        astRoot44.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        astRoot44.checkParentLinks();
        int int52 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot33, (com.google.javascript.rhino.head.ast.AstNode) astRoot44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        astRoot53.addChildScope(scope55);
        java.lang.String str59 = astRoot53.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment60 = null;
        astRoot53.setJsDocNode(comment60);
        int int62 = astRoot53.getType();
        astRoot33.target = astRoot53;
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        scope65.addChild((com.google.javascript.rhino.head.ast.AstNode) scope66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.Comment comment70 = null;
        scriptNode68.setJsDocNode(comment70);
        int int72 = scriptNode68.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = scope74.getChildScopes();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scope74, (int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = scriptNode68.getChildScopes();
        astRoot33.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode68);
        astRoot33.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) astRoot33);
        java.lang.String str83 = astRoot0.getNextTempName();
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(symbol28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-12) + "'", int31 == (-12));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(commentArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-52) + "'", int52 == (-52));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 136 + "'", int62 == 136);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(scopeList75);
        org.junit.Assert.assertNull(scopeList78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "$0" + "'", str83, "$0");
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot12.getChildScopes();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = astRoot12.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator35 = scope34.spliterator();
        astRoot32.addChildScope(scope34);
        java.lang.String str38 = astRoot32.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int40 = astRoot39.getEndLineno();
        java.lang.Object obj41 = astRoot39.getCompilerData();
        astRoot32.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot39);
        astRoot39.setPosition(25);
        java.lang.String str46 = astRoot39.toSource(17);
        astRoot39.clearParentScope();
        int int48 = astRoot39.getAbsolutePosition();
        int int49 = astRoot39.getLineno();
        boolean boolean50 = astRoot39.hasConsistentReturnUsage();
        astRoot12.putProp(1330917185, (java.lang.Object) boolean50);
        com.google.javascript.rhino.head.Node node52 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getNextTempName();
        java.lang.String str55 = scriptNode53.debugPrint();
        scriptNode53.setLineno((int) (byte) -1);
        int int58 = scriptNode53.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList59 = scriptNode53.getChildScopes();
        int int60 = scriptNode53.getEndLineno();
        scriptNode53.setEncodedSourceEnd((-443001414));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList63 = scriptNode53.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        java.lang.String str69 = astRoot67.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode70.getSymbols();
        java.lang.String str72 = astRoot67.toStringTree(scriptNode70);
        astRoot67.checkParentLinks();
        int int76 = astRoot67.getIntProp(11, 32);
        int int77 = astRoot67.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str80 = scriptNode78.toSource(0);
        scriptNode78.clearParentScope();
        boolean boolean82 = scriptNode78.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap83 = null;
        scriptNode78.setSymbolTable(strMap83);
        int int85 = scriptNode78.getRegexpCount();
        int int86 = scriptNode78.getRegexpCount();
        astRoot67.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) astRoot67, (-280309866));
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList90 = astRoot67.getSymbols();
        scriptNode53.setSymbols(symbolList90);
        // The following exception was thrown during execution in test generation
        try {
            astRoot12.replaceChild(node52, (com.google.javascript.rhino.head.Node) scriptNode53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 25 + "'", int48 == 25);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str55, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(scopeList59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(astNodeList63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "136" + "'", str69, "136");
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 32 + "'", int76 == 32);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{\n}\n" + "'", str80, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(symbolList90);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        int int45 = astRoot31.getEncodedSourceEnd();
        int int46 = astRoot31.getLineno();
        java.lang.Object obj47 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor48 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot31.visitAll(nodeVisitor48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(3, 130343202);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setIdeMode(false);
        compilerEnvirons9.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons22.getErrorReporter();
        boolean boolean26 = compilerEnvirons22.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter27);
        com.google.javascript.rhino.head.Parser parser29 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter27);
        boolean boolean30 = compilerEnvirons0.recoverFromErrors();
        boolean boolean31 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setRecordingLocalJsDocComments(false);
        boolean boolean39 = compilerEnvirons36.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons40.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = compilerEnvirons40.getErrorReporter();
        boolean boolean44 = compilerEnvirons40.isGenerateObserverCount();
        compilerEnvirons40.setRecordingComments(true);
        boolean boolean47 = compilerEnvirons40.isGenerateObserverCount();
        boolean boolean48 = compilerEnvirons40.isGenerateDebugInfo();
        compilerEnvirons40.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons51 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons51.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter54 = compilerEnvirons51.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons40, errorReporter54);
        boolean boolean56 = compilerEnvirons40.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter57 = compilerEnvirons40.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons58 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons58.setRecordingLocalJsDocComments(false);
        boolean boolean61 = compilerEnvirons58.isGeneratingSource();
        compilerEnvirons58.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons64 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons64.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter67 = compilerEnvirons64.getErrorReporter();
        boolean boolean68 = compilerEnvirons64.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter69 = compilerEnvirons64.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException75 = errorReporter69.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter69.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser82 = new com.google.javascript.rhino.head.Parser(compilerEnvirons58, errorReporter69);
        compilerEnvirons40.setErrorReporter(errorReporter69);
        com.google.javascript.rhino.head.Parser parser84 = new com.google.javascript.rhino.head.Parser(compilerEnvirons36, errorReporter69);
        errorReporter69.warning("$2", "26\tSCRIPT 26 1\n", (int) (byte) 10, "    {\n    }\n", 488584366);
        errorReporter69.warning("0\tSCRIPT 0 0\n", "-11\tBLOCK -11 1\n", 1171068332, "-1\tSCRIPT -1 1\n", 703513808);
        com.google.javascript.rhino.head.Parser parser97 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter69);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(errorReporter43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(errorReporter54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(errorReporter57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(errorReporter67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(errorReporter69);
        org.junit.Assert.assertNotNull(evaluatorException75);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int16 = astRoot8.getParamCount();
        java.lang.String str17 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot30.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        astRoot53.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode61);
        astRoot30.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        java.lang.Object obj69 = astRoot8.getProp(23);
        int int70 = astRoot8.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList71 = astRoot8.getChildScopes();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap72 = astRoot8.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(scopeList71);
        org.junit.Assert.assertNull(strMap72);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = scriptNode0.getSymbol("java.io.IOException:                   {\n                  }\n");
        boolean boolean6 = scriptNode0.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = astRoot1.spliterator();
        java.lang.String str24 = astRoot1.debugPrint();
        boolean boolean25 = astRoot1.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        java.lang.String str5 = astRoot2.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getEndLineno();
        java.lang.Object obj15 = astRoot13.getCompilerData();
        astRoot6.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((-53), (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13, (-1610320791));
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int21 = astRoot20.getType();
        com.google.javascript.rhino.head.Node node22 = astRoot20.getFirstChild();
        astRoot20.putIntProp((int) (short) 100, 953557037);
        int int26 = astRoot20.getEndLineno();
        int int27 = astRoot20.getLineno();
        int int30 = astRoot20.getIntProp((-236001159), 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        astRoot20.visitComments(nodeVisitor31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        boolean boolean36 = scriptNode33.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode33.getSymbols();
        astRoot20.setSymbols(symbolList37);
        astRoot13.setSymbols(symbolList37);
        astRoot13.setRelative((-1593445669));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = astRoot13.getParamOrVarName(975051644);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 136 + "'", int21 == 136);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(symbolList37);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        java.lang.String str6 = astRoot4.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = scriptNode7.getSymbols();
        java.lang.String str9 = astRoot4.toStringTree(scriptNode7);
        astRoot4.checkParentLinks();
        int int13 = astRoot4.getIntProp(11, 32);
        int int14 = astRoot4.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(0);
        scriptNode15.clearParentScope();
        boolean boolean19 = scriptNode15.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap20 = null;
        scriptNode15.setSymbolTable(strMap20);
        int int22 = scriptNode15.getRegexpCount();
        int int23 = scriptNode15.getRegexpCount();
        astRoot4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot4, (-280309866));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor27 = null;
        astRoot4.visitComments(nodeVisitor27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot29.getAstRoot();
        java.lang.String str31 = astRoot30.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = astRoot30.getTop();
        astRoot30.setEncodedSourceEnd(0);
        int int35 = astRoot30.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator39 = scope38.spliterator();
        astRoot36.addChildScope(scope38);
        java.lang.String str42 = astRoot36.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment43 = null;
        astRoot36.setJsDocNode(comment43);
        astRoot36.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean49 = astRoot48.hasSideEffects();
        int int50 = astRoot48.getParamCount();
        astRoot36.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode52.toSource(0);
        scriptNode52.setEncodedSourceBounds(12, 10);
        scriptNode52.setSourceName("");
        astRoot36.setTop(scriptNode52);
        astRoot30.setTop(scriptNode52);
        int int62 = scriptNode52.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = astRoot63.getAstRoot();
        java.lang.String str65 = astRoot64.shortName();
        java.lang.String str66 = astRoot64.getSourceName();
        astRoot64.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = astRoot64.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str71 = astRoot70.getNextTempName();
        java.lang.String str72 = astRoot70.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode73.getSymbols();
        java.lang.String str75 = astRoot70.toStringTree(scriptNode73);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot70);
        int int77 = astRoot70.depth();
        int int78 = astRoot64.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot70);
        java.lang.String str79 = scriptNode52.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot70);
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope(0, (int) ' ');
        scope82.setLineno(396629525);
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) scope82);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNotNull(symbolList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AstRoot" + "'", str31, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{\n}\n" + "'", str54, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(astRoot64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AstRoot" + "'", str65, "AstRoot");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "136" + "'", str72, "136");
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1290716320 + "'", int78 == 1290716320);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-236001159));
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = astRoot1.getSymbols();
        astRoot1.setBounds((-1076304790), (-38688210));
        org.junit.Assert.assertNotNull(symbolList2);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-1396439634), 374803108);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = scope4.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node8 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node9 = node8.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        node8.addChildToFront((com.google.javascript.rhino.head.Node) scope10);
        scope4.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, node8);
        com.google.javascript.rhino.head.Node node13 = scriptNode7.target;
        java.lang.String str14 = scriptNode7.shortName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = astRoot15.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = astRoot26.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        scriptNode32.setBounds((int) (byte) -1, 23);
        int int38 = astRoot26.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator42 = scope40.new NodeIterator();
        scope40.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        java.lang.String str47 = astRoot45.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode48.getSymbols();
        java.lang.String str50 = astRoot45.toStringTree(scriptNode48);
        java.lang.String str52 = astRoot45.toSource(0);
        java.lang.String str54 = astRoot45.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        int int59 = scriptNode55.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getNextTempName();
        com.google.javascript.rhino.head.Node node62 = scriptNode60.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = scriptNode60.getFunctions();
        int int64 = scriptNode60.getEncodedSourceEnd();
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode70 = astRoot69.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode71.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot67, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) scriptNode71);
        int int75 = astRoot67.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope();
        scope76.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot67, scope76);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap79 = astRoot67.getSymbolTable();
        scriptNode55.setSymbolTable(strMap79);
        astRoot45.setSymbolTable(strMap79);
        scope40.setSymbolTable(strMap79);
        astRoot26.setSymbolTable(strMap79);
        astRoot15.setSymbolTable(strMap79);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap85 = astRoot15.getSymbolTable();
        scriptNode7.setSymbolTable(strMap85);
        scope2.setSymbolTable(strMap85);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = scope2.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ScriptNode" + "'", str14, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(astNode27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertNull(astNode70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scriptNode2.spliterator();
        int int4 = scriptNode2.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = scriptNode2.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot6.getAstRoot();
        java.lang.String str8 = astRoot7.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = astRoot7.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = astRoot7.getSymbolTable();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(688626213, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot7, 238554494);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int15 = astRoot14.getType();
        com.google.javascript.rhino.head.Node node16 = astRoot14.getFirstChild();
        astRoot14.putIntProp((int) (short) 100, 953557037);
        int int20 = astRoot14.getEndLineno();
        int int21 = astRoot14.getLineno();
        int int24 = astRoot14.getIntProp((-236001159), 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor25 = null;
        astRoot14.visitComments(nodeVisitor25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        boolean boolean30 = scriptNode27.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode27.getSymbols();
        astRoot14.setSymbols(symbolList31);
        astRoot7.setSymbols(symbolList31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getNextTempName();
        com.google.javascript.rhino.head.Node node37 = scriptNode35.target;
        int int38 = scriptNode35.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node39 = scriptNode35.getLastChild();
        scriptNode35.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap42 = null;
        scriptNode35.setSymbolTable(strMap42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int45 = astRoot44.getEndLineno();
        java.lang.Object obj46 = astRoot44.getCompilerData();
        astRoot44.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) astRoot44);
        java.lang.String str50 = astRoot44.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = astRoot51.getComments();
        int int54 = astRoot51.getRegexpCount();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor55 = null;
        astRoot51.visitComments(nodeVisitor55);
        astRoot44.target = astRoot51;
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.setFinally((com.google.javascript.rhino.head.Node) astRoot44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AstRoot" + "'", str8, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 136 + "'", int15 == 136);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(symbolList31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(commentSet53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        int int9 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope7.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int14 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scope7, (com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        boolean boolean24 = astRoot16.isInStrictMode();
        astRoot16.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        astRoot27.checkParentLinks();
        int int35 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot16, (com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator38 = positionComparator37.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        java.lang.String str42 = scriptNode40.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node46 = scope45.getNext();
        com.google.javascript.rhino.head.Node node47 = scriptNode40.getChildBefore(node46);
        java.lang.String str49 = scriptNode40.toSource(12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = scriptNode40.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator54 = scope53.spliterator();
        astRoot51.addChildScope(scope53);
        java.lang.String str57 = astRoot51.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment58 = null;
        astRoot51.setJsDocNode(comment58);
        int int60 = astRoot51.getType();
        java.lang.String str61 = astRoot51.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = null;
        astRoot51.setSymbolTable(strMap62);
        astRoot51.clearParentScope();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons65 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons65.setWarnTrailingComma(true);
        boolean boolean68 = compilerEnvirons65.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter69 = compilerEnvirons65.getErrorReporter();
        compilerEnvirons65.setGeneratingSource(false);
        compilerEnvirons65.setReservedKeywordAsIdentifier(false);
        compilerEnvirons65.setGenerateDebugInfo(true);
        int int76 = compilerEnvirons65.getOptimizationLevel();
        astRoot51.setCompilerData((java.lang.Object) compilerEnvirons65);
        astRoot51.removeProp(26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot80 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = astRoot80.getAstRoot();
        java.lang.String str82 = astRoot81.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = astRoot81.getTop();
        astRoot81.setEncodedSourceEnd(0);
        java.lang.String str86 = astRoot51.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot81);
        int int87 = astRoot51.getBaseLineno();
        int int88 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode40, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-12) + "'", int14 == (-12));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-52) + "'", int35 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertNotNull(astNodeComparator38);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str42, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "                        {\n                        }\n" + "'", str49, "                        {\n                        }\n");
        org.junit.Assert.assertNull(astRoot50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 136 + "'", int60 == 136);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(errorReporter69);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(astRoot81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "AstRoot" + "'", str82, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        astRoot7.removeProp((int) (short) -1);
        java.lang.String str31 = astRoot7.toSource((-605534234));
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray35 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList36, symbolArray35);
        astRoot33.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        astRoot33.addChildScope(scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int45 = astRoot44.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getEndLineno();
        java.lang.Object obj48 = astRoot46.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot46.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        astRoot46.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getNextTempName();
        com.google.javascript.rhino.head.Node node56 = scriptNode54.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList57 = scriptNode54.getFunctions();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int59 = astRoot44.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot44);
        astRoot44.removeChildren();
        astRoot7.addChildToFront((com.google.javascript.rhino.head.Node) astRoot44);
        com.google.javascript.rhino.head.Node node64 = astRoot44.setType(688626213);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n}\n" + "'", str31, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(symbolArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNotNull(functionNodeList57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node64);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node1 = node0.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        node0.addChildToFront((com.google.javascript.rhino.head.Node) scope2);
        int int4 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol6 = scope2.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node7 = scope2.getFirstChild();
        scope2.setLineno((-207329058));
        int int10 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str17 = scriptNode14.toSource(5);
        scriptNode14.putIntProp(0, 1);
        com.google.javascript.rhino.head.Node node21 = scriptNode14.target;
        java.lang.String str22 = scriptNode14.shortName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = scriptNode14.new NodeIterator();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(symbol6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-207329058) + "'", int10 == (-207329058));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "          {\n          }\n" + "'", str17, "          {\n          }\n");
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ScriptNode" + "'", str22, "ScriptNode");
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1277086374));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.setEndLineno(25);
        boolean boolean4 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = scriptNode1.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        int int8 = astRoot1.getLineno();
        int int11 = astRoot1.getIntProp((-236001159), 0);
        int int12 = astRoot1.getPosition();
        java.lang.String str14 = astRoot1.toSource(488584366);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = astRoot1.spliterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                    {\n                                    }\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        int int6 = astRoot1.getIntProp(12, (int) ' ');
        int int7 = astRoot1.getLength();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-72803501), (-646030097));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope3 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        astRoot0.checkParentLinks();
        astRoot0.setEndLineno((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(0);
        scriptNode15.setEncodedSourceBounds(12, 10);
        scriptNode13.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        java.lang.String str22 = scriptNode13.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = astRoot23.getAstRoot();
        java.lang.String str25 = astRoot24.shortName();
        java.lang.String str27 = astRoot24.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = astRoot24.getFunctions();
        astRoot24.checkParentLinks();
        boolean boolean30 = astRoot24.hasConsistentReturnUsage();
        int int31 = astRoot24.getRegexpCount();
        scriptNode13.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot24);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.Node node34 = scriptNode13.getNext();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(26, (-3));
        com.google.javascript.rhino.head.Node node39 = node37.setType(550287075);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray43 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList44, symbolArray43);
        astRoot41.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList44);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        astRoot41.addChildScope(scope48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot54.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = scriptNode62.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = scriptNode62.getFunctions();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode62);
        int int67 = astRoot52.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = astRoot69.getAstRoot();
        java.lang.String str71 = astRoot70.shortName();
        java.lang.String str72 = astRoot70.debugPrint();
        int int73 = astRoot41.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot70);
        int int74 = astRoot41.depth();
        astRoot41.setPosition((-329971307));
        scriptNode13.addChildAfter(node37, (com.google.javascript.rhino.head.Node) astRoot41);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AstRoot" + "'", str25, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(symbolArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(astRoot70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AstRoot" + "'", str71, "AstRoot");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str72, "-1\tSCRIPT -1 1\n");
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-275341566) + "'", int73 == (-275341566));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getEndLineno();
        java.lang.Object obj10 = astRoot8.getCompilerData();
        astRoot1.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot8);
        astRoot8.setPosition(25);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-297370766), (com.google.javascript.rhino.head.Node) astRoot8);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = astRoot8.getComments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(commentSet15);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        astRoot53.addChildScope(scope55);
        java.lang.String str59 = astRoot53.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        java.lang.String str62 = astRoot60.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode63.getSymbols();
        java.lang.String str65 = astRoot60.toStringTree(scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope67.setTop(scriptNode69);
        java.lang.String str72 = scope67.toSource(12);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope67);
        astRoot50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        java.lang.String str75 = scriptNode63.shortName();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-258947636) + "'", int51 == (-258947636));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                        {\n                        }\n" + "'", str72, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ScriptNode" + "'", str75, "ScriptNode");
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator24 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator25 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator24);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = parser26.parse("", "-1\tSCRIPT -1 1\n", 19);
        com.google.javascript.rhino.head.ast.Comment comment31 = astRoot30.getJsDocNode();
        int int32 = astRoot30.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        scriptNode36.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator48 = scope47.spliterator();
        astRoot45.addChildScope(scope47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = astRoot45.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.addChild((com.google.javascript.rhino.head.ast.AstNode) scope52);
        boolean boolean54 = scope51.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope51, scope55);
        astRoot45.replaceWith(scope51);
        int int60 = astRoot45.getEncodedSourceEnd();
        scriptNode38.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot45);
        int int62 = positionComparator24.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot30, (com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons63 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons63.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter66 = compilerEnvirons63.getErrorReporter();
        boolean boolean67 = compilerEnvirons63.isGenerateObserverCount();
        boolean boolean68 = compilerEnvirons63.recoverFromErrors();
        java.util.Set<java.lang.String> strSet69 = compilerEnvirons63.getActivationNames();
        boolean boolean70 = compilerEnvirons63.reportWarningAsError();
        compilerEnvirons63.setWarnTrailingComma(false);
        boolean boolean73 = compilerEnvirons63.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory74 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons63);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons75 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons75.setStrictMode(true);
        int int78 = compilerEnvirons75.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons79 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons79.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons82 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons82.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter85 = compilerEnvirons82.getErrorReporter();
        compilerEnvirons79.setErrorReporter(errorReporter85);
        compilerEnvirons75.setErrorReporter(errorReporter85);
        com.google.javascript.rhino.head.Parser parser88 = new com.google.javascript.rhino.head.Parser(compilerEnvirons63, errorReporter85);
        errorReporter85.warning("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", "14", 5, "0\tSCRIPT 0 0\n", (-207329058));
        astRoot30.setCompilerData((java.lang.Object) 5);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator25);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 19 + "'", int32 == 19);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator48);
        org.junit.Assert.assertNotNull(scopeList50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(errorReporter66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(errorReporter85);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-738182430), "                                    ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = astRoot3.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = astRoot3.getChildScopes();
        node2.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot3);
        com.google.javascript.rhino.head.Node node9 = astRoot3.getFirstChild();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray19 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList20, symbolArray19);
        astRoot17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        astRoot17.addChildScope(scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        astRoot30.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        com.google.javascript.rhino.head.Node node40 = scriptNode38.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode38.getFunctions();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int43 = astRoot28.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot28);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode52.toSource(0);
        scriptNode52.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) '#', node48, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode52, 2);
        com.google.javascript.rhino.head.Node node60 = scope51.getLastChild();
        com.google.javascript.rhino.head.Node node61 = astRoot17.getChildBefore(node60);
        java.lang.String str63 = astRoot17.toSource(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = scriptNode64.getTop();
        com.google.javascript.rhino.head.Node node66 = scriptNode65.target;
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str69 = astRoot68.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode71 = astRoot70.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode72.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot68, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) scriptNode72);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor76 = null;
        astRoot68.visitComments(nodeVisitor76);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str79 = astRoot78.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator81 = scope80.spliterator();
        astRoot78.addChildScope(scope80);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList83 = astRoot78.getChildScopes();
        java.lang.String str84 = astRoot78.toString();
        astRoot68.addChildToBack((com.google.javascript.rhino.head.Node) astRoot78);
        int int86 = astRoot78.getFunctionCount();
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot78);
        int int88 = astRoot78.getLineno();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{\n}\n" + "'", str54, "{\n}\n");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "$0" + "'", str69, "$0");
        org.junit.Assert.assertNull(astNode71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "$0" + "'", str79, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator81);
        org.junit.Assert.assertNotNull(scopeList83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "136" + "'", str84, "136");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(23890841, (-52));
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        int int5 = astRoot0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = astRoot6.target;
        int int9 = astRoot6.getFunctionCount();
        java.lang.String str10 = astRoot6.toString();
        astRoot0.target = astRoot6;
        java.lang.String str12 = astRoot0.debugPrint();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str12, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = astRoot79.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap89 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope90 = astRoot79.getEnclosingScope();
        java.lang.String str91 = astRoot79.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str93 = scriptNode92.getNextTempName();
        java.lang.String str94 = scriptNode92.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            astRoot79.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-611112443) + "'", int67 == (-611112443));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "$0" + "'", str93, "$0");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str94, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        compilerEnvirons0.setStrictMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.isRecordingLocalJsDocComments();
        compilerEnvirons18.setWarnTrailingComma(false);
        compilerEnvirons18.setAllowSharpComments(false);
        boolean boolean26 = compilerEnvirons18.isGenerateDebugInfo();
        compilerEnvirons18.setIdeMode(false);
        compilerEnvirons18.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons31.getErrorReporter();
        boolean boolean35 = compilerEnvirons31.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter36 = compilerEnvirons31.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser37 = new com.google.javascript.rhino.head.Parser(compilerEnvirons18, errorReporter36);
        errorReporter36.warning("-1\t  BLOCK 0 1\n", "java.io.IOException: java.io.IOException: ", 11, "  {\n  }\n", (int) '4');
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter36);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean49 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorReporter36);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = astRoot0.iterator();
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scope8.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node13 = node12.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        node12.addChildToFront((com.google.javascript.rhino.head.Node) scope14);
        scope8.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode11, node12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        java.lang.String str19 = node12.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot17);
        java.lang.String str20 = astRoot17.getNextTempName();
        boolean boolean21 = astRoot17.hasSideEffects();
        java.lang.String str23 = astRoot17.toSource(100);
        int int24 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node node30 = scope28.getFirstChild();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope28);
        scope28.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode34 = scope28.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = astRoot35.getSymbol("java.io.IOException: ");
        astRoot35.setEncodedSourceStart(0);
        java.lang.String str43 = astRoot35.toSource(14);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode34, (com.google.javascript.rhino.head.Node) astRoot35);
        astRoot17.target = astRoot35;
        astRoot0.addChildToFront((com.google.javascript.rhino.head.Node) astRoot35);
        com.google.javascript.rhino.head.Node node47 = astRoot0.getLastSibling();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(astNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(node47);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = scriptNode7.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str21 = scriptNode18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope24, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = astRoot27.getAstRoot();
        java.lang.String str29 = astRoot28.shortName();
        java.lang.String str30 = astRoot28.getSourceName();
        astRoot28.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap32 = astRoot28.getSymbolTable();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) astRoot28);
        java.lang.Object obj34 = astRoot28.getCompilerData();
        scriptNode7.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot28);
        com.google.javascript.rhino.head.Node node36 = astRoot28.getNext();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        int int44 = scriptNode40.getIntProp((int) 'a', 19);
        int int45 = scriptNode40.getFunctionCount();
        astRoot28.target = scriptNode40;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(functionNode15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNotNull(astRoot28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AstRoot" + "'", str29, "AstRoot");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 19 + "'", int44 == 19);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str12 = astRoot11.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = iRFactory9.transformTree(astRoot11);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        boolean boolean17 = compilerEnvirons14.isRecordingLocalJsDocComments();
        compilerEnvirons14.setWarnTrailingComma(false);
        compilerEnvirons14.setGenerateDebugInfo(false);
        boolean boolean22 = compilerEnvirons14.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean24 = compilerEnvirons23.recoverFromErrors();
        int int25 = compilerEnvirons23.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = iRFactory27.parse("        {\n        }\n", "-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n", 852409088);
        astRoot31.setEncodedSourceEnd(26);
        scriptNode13.target = astRoot31;
        astRoot31.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node38 = astRoot31.setType(1403594947);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str12, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertNotNull(node38);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        astRoot0.setEncodedSourceBounds((int) 'a', (int) (short) 1);
        int int15 = astRoot0.getLineno();
        int int16 = astRoot0.getEndLineno();
        java.lang.String str17 = astRoot0.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setEndLineno((-1536851783));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        java.lang.String[] strArray19 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        compilerEnvirons7.setActivationNames((java.util.Set<java.lang.String>) strSet20);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet20);
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.IRFactory iRFactory25 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot29 = iRFactory25.parse("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n", "com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)", (-116461350));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        int int11 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean12 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean13 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        int int12 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node13 = scriptNode3.target;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode3.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = scriptNode3.getAstRoot();
        java.lang.String str16 = scriptNode3.debugPrint();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNull(astRoot15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str16, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int16 = astRoot8.getParamCount();
        java.lang.String str17 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot30.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        astRoot53.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode61);
        astRoot30.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        astRoot53.setEncodedSourceBounds((int) (short) -1, 13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor71 = null;
        astRoot53.visitComments(nodeVisitor71);
        astRoot53.setBounds(1115693949, 653625563);
        java.lang.String str76 = astRoot53.debugPrint();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot53.getParent();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1115693949\tSCRIPT 1115693949 -462068386\n" + "'", str76, "1115693949\tSCRIPT 1115693949 -462068386\n");
        org.junit.Assert.assertNull(astNode77);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot0.getAstRoot();
        astRoot5.clearParentScope();
        java.lang.String str7 = astRoot5.getEncodedSource();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.Node node3 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot6, 4);
        astRoot6.removeChildren();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(26, (-3));
        astRoot6.addChildToBack(node13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(170, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getNextTempName();
        scriptNode18.setLineno((int) (short) 10);
        java.lang.Object obj22 = scriptNode18.getCompilerData();
        scriptNode18.putIntProp((-297370766), 437731425);
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.lang.String str33 = astRoot27.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment34 = null;
        astRoot27.setJsDocNode(comment34);
        int int36 = astRoot27.getType();
        int int37 = astRoot27.getPosition();
        astRoot27.setInStrictMode(false);
        scriptNode18.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot27);
        com.google.javascript.rhino.head.Node node41 = scriptNode18.getLastChild();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(663275392, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode18, (-1471166994));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node44 = astRoot0.getChildBefore((com.google.javascript.rhino.head.Node) astRoot6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 136 + "'", int36 == 136);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(node41);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        int int5 = astRoot1.getIntProp((int) (short) 1, (-1));
        int int6 = astRoot1.getEncodedSourceStart();
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator3 = positionComparator1.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator2);
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol10 = scope6.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int13 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) scope6, (com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = astRoot14.getAstRoot();
        java.lang.String str16 = astRoot15.shortName();
        java.lang.String str18 = astRoot15.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot15.getFunctions();
        astRoot15.checkParentLinks();
        boolean boolean21 = astRoot15.hasChildren();
        int int22 = astRoot15.getLineno();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot15, 4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        boolean boolean31 = astRoot25.hasChildren();
        int int32 = astRoot25.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        int int35 = scriptNode33.depth();
        com.google.javascript.rhino.head.ast.Comment comment36 = null;
        scriptNode33.setJsDocNode(comment36);
        com.google.javascript.rhino.head.Node node38 = scriptNode33.getLastSibling();
        astRoot25.target = scriptNode33;
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope(13, (-12));
        scriptNode33.replaceWith(scope42);
        astRoot15.target = scriptNode33;
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int47 = astRoot46.getType();
        com.google.javascript.rhino.head.Node node48 = astRoot46.getFirstChild();
        astRoot46.putIntProp((int) (short) 100, 953557037);
        int int52 = astRoot46.getEndLineno();
        int int53 = astRoot46.getLineno();
        int int56 = astRoot46.getIntProp((-236001159), 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor57 = null;
        astRoot46.visitComments(nodeVisitor57);
        int int59 = astRoot46.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstNode astNode60 = astRoot46.getParent();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode33.setDefault((com.google.javascript.rhino.head.Node) astRoot46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(symbol10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-12) + "'", int13 == (-12));
        org.junit.Assert.assertNotNull(astRoot15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AstRoot" + "'", str16, "AstRoot");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 136 + "'", int47 == 136);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(astNode60);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setLanguageVersion((int) (byte) 0);
        boolean boolean13 = compilerEnvirons0.recoverFromErrors();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        boolean boolean4 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope6.setTop(scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        scriptNode8.setCompilerData((java.lang.Object) scope11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = scope15.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node19 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node20 = node19.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        node19.addChildToFront((com.google.javascript.rhino.head.Node) scope21);
        scope15.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode18, node19);
        scriptNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope1, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode18);
        scriptNode18.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot31.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int44 = astRoot31.getRegexpCount();
        com.google.javascript.rhino.head.Node node45 = astRoot31.getNext();
        astRoot31.setBaseLineno(10);
        astRoot31.setEncodedSourceBounds(136, 3);
        scriptNode18.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot31);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = astRoot31.spliterator();
        astRoot31.checkParentLinks();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(nodeSpliterator52);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = astRoot3.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = astRoot3.getSymbols();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot3);
        java.lang.String str16 = astRoot3.toSource();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(1471166993);
        int int2 = astRoot1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        astRoot5.checkParentLinks();
        boolean boolean11 = astRoot5.hasChildren();
        int int12 = astRoot5.getLineno();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot5, 2);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1471166993 + "'", int2 == 1471166993);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setWarnTrailingComma(true);
        boolean boolean4 = compilerEnvirons1.isRecordingLocalJsDocComments();
        compilerEnvirons1.setWarnTrailingComma(false);
        compilerEnvirons1.setAllowSharpComments(false);
        boolean boolean9 = compilerEnvirons1.isGenerateDebugInfo();
        compilerEnvirons1.setIdeMode(false);
        compilerEnvirons1.setWarnTrailingComma(false);
        compilerEnvirons1.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory16 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray20 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList21, symbolArray20);
        astRoot18.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        astRoot18.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot31.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int44 = astRoot29.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode53.toSource(0);
        scriptNode53.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) '#', node49, (com.google.javascript.rhino.head.Node) scope52, (com.google.javascript.rhino.head.Node) scriptNode53, 2);
        com.google.javascript.rhino.head.Node node61 = scope52.getLastChild();
        com.google.javascript.rhino.head.Node node62 = astRoot18.getChildBefore(node61);
        java.lang.String str64 = astRoot18.toSource(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = iRFactory16.transformTree(astRoot18);
        java.lang.String str66 = scriptNode65.getJsDoc();
        scriptNode65.setBounds(18, (-1668176296));
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(639708273, (com.google.javascript.rhino.head.Node) scriptNode65);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode65.setBaseLineno((-2110645446));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(symbolArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope4 = astRoot2.getDefiningScope("AstRoot");
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray7 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList8, symbolArray7);
        astRoot5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList8);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList8);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((-280309866), (com.google.javascript.rhino.head.Node) astRoot2, 65536);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = astRoot14.getSymbol("java.io.IOException: ");
        astRoot14.setSourceName("java.io.IOException: ");
        boolean boolean21 = astRoot14.isInStrictMode();
        boolean boolean22 = astRoot14.isInStrictMode();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor23 = null;
        astRoot14.visitComments(nodeVisitor23);
        node13.addChildToBack((com.google.javascript.rhino.head.Node) astRoot14);
        int int28 = astRoot14.getIntProp(968742650, (-1364659253));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(symbolArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1364659253) + "'", int28 == (-1364659253));
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        astRoot0.setSourceName("java.io.IOException: ");
        boolean boolean7 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = astRoot9.getAstRoot();
        java.lang.String str11 = astRoot10.shortName();
        java.lang.String str12 = astRoot10.getSourceName();
        astRoot10.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons24.getErrorReporter();
        boolean boolean28 = compilerEnvirons24.isGenerateObserverCount();
        compilerEnvirons24.setRecordingComments(true);
        boolean boolean31 = compilerEnvirons24.isGenerateObserverCount();
        boolean boolean32 = compilerEnvirons24.isGenerateDebugInfo();
        compilerEnvirons24.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter38 = compilerEnvirons35.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory39 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons24, errorReporter38);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        java.lang.String str44 = astRoot42.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        java.lang.String str47 = astRoot42.toStringTree(scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        int int51 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode45, (com.google.javascript.rhino.head.ast.AstNode) scope48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator55 = scope54.spliterator();
        astRoot52.addChildScope(scope54);
        java.lang.String str58 = astRoot52.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = astRoot52.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode64 = astRoot63.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot61, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) scriptNode65);
        int int69 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot52, (com.google.javascript.rhino.head.ast.AstNode) astRoot61);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot61, 24);
        astRoot61.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = iRFactory39.transformTree(astRoot61);
        int int74 = astRoot61.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot61);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = astRoot16.getAstRoot();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot16, 7);
        boolean boolean79 = astRoot10.isInStrictMode();
        astRoot0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot10);
        astRoot0.setBounds(1051569336, 171557313);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AstRoot" + "'", str11, "AstRoot");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(errorReporter38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(astNode64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(scriptNode73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(astRoot76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser12 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean13 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        boolean boolean18 = compilerEnvirons0.recoverFromErrors();
        boolean boolean19 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        int int3 = astRoot0.getLineno();
        boolean boolean4 = astRoot0.hasSideEffects();
        java.lang.String str5 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot(2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = astRoot7.getAstRoot();
        astRoot0.target = astRoot8;
        java.lang.String str11 = astRoot0.toSource(296531913);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = astRoot0.getParent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(astRoot8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(astNode13);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-3), "                                                                                                                                                                                                                                                                  ");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        astRoot4.setEncodedSourceEnd(6);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = astRoot4.getComments();
        int int15 = astRoot4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment23 = null;
        astRoot16.setJsDocNode(comment23);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor25 = null;
        astRoot16.visitComments(nodeVisitor25);
        astRoot16.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope30 = astRoot16.getDefiningScope("{\n  {\n  }\n}\n");
        int int31 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot16);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor32 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot4.visitAll(nodeVisitor32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(commentSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 6 + "'", int15 == 6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(scope30);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1031082802) + "'", int31 == (-1031082802));
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str10 = scope9.toString();
        astRoot1.addChildrenToBack((com.google.javascript.rhino.head.Node) scope9);
        boolean boolean12 = scope9.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope14.setTop(scriptNode16);
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope14.getSymbol("java.io.IOException: ");
        scope9.replaceWith(scope14);
        com.google.javascript.rhino.head.Node node21 = scope9.getLastChild();
        scope9.setPosition((-211756926));
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-748707594), (com.google.javascript.rhino.head.Node) scope9);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "129" + "'", str10, "129");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertNull(node21);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope25.setTop(scriptNode27);
        java.lang.String str30 = scope25.toSource(12);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot33, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot33.getComments();
        node31.addChildToBack((com.google.javascript.rhino.head.Node) astRoot33);
        com.google.javascript.rhino.head.Node node39 = astRoot33.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator40.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator41);
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node44 = node43.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        node43.addChildToFront((com.google.javascript.rhino.head.Node) scope45);
        int int47 = scope45.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scope45.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int52 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) scope45, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        node39.addChildToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setSourceName("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor67 = null;
        astRoot66.visitComments(nodeVisitor67);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot66);
        astRoot0.setBounds((-1593445669), (-139315390));
        com.google.javascript.rhino.head.ast.Comment comment73 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addComment(comment73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                        {\n                        }\n" + "'", str30, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-12) + "'", int52 == (-12));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.Parser parser7 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode29.getEnclosingScope();
        int int31 = scriptNode29.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean34 = scope33.hasChildren();
        scope33.putIntProp((-484812922), 550287075);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        java.lang.String str41 = scriptNode39.debugPrint();
        scriptNode39.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        java.lang.String str47 = astRoot45.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode48.getSymbols();
        java.lang.String str50 = astRoot45.toStringTree(scriptNode48);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        int int62 = astRoot52.getRegexpCount();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot52, 550287075);
        com.google.javascript.rhino.head.Node node65 = astRoot45.target;
        java.lang.String str66 = astRoot45.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = astRoot45.getTop();
        java.lang.String str68 = astRoot45.toSource();
        astRoot45.setBounds((-1610320791), 526823265);
        int int72 = astRoot45.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int74 = astRoot73.getParamCount();
        java.lang.String str75 = astRoot73.debugPrint();
        astRoot73.setInStrictMode(true);
        scope33.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot73);
        scriptNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot73);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor80 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot73.visitAll(nodeVisitor80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str66, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str75, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        astRoot7.removeProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = astRoot7.getTop();
        astRoot7.setLineno(574124565);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = astRoot7.getExistingIntProp((-61111));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNotNull(scriptNode30);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        int int5 = astRoot2.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) astRoot2);
        astRoot2.clearParentScope();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot1, 4);
        astRoot1.removeChildren();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator6 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        int int16 = positionComparator6.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode10, (com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = astRoot17.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int34 = positionComparator6.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot17, (com.google.javascript.rhino.head.ast.AstNode) astRoot26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode42.toSource(0);
        scriptNode42.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) '#', node38, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode42, 2);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope51.setTop(scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        scriptNode53.setCompilerData((java.lang.Object) scope56);
        scriptNode53.setEncodedSourceEnd(0);
        int int61 = positionComparator6.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode42, (com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        scriptNode42.setLength((-78159348));
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = astRoot1.getExistingIntProp(663275392);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(functionNodeList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{\n}\n" + "'", str44, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode7.getParent();
        scriptNode7.setEncodedSourceEnd(10);
        java.lang.Object obj18 = scriptNode7.getCompilerData();
        scriptNode7.putIntProp(0, 342139785);
        scriptNode7.setEncodedSourceBounds((-408128072), 171557313);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = iRFactory8.parse("21", "-1\t  BLOCK 0 1\n", 9);
        astRoot12.setSourceName("                                ");
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(astRoot12);
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        astRoot21.setEncodedSource("                          ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getNextTempName();
        com.google.javascript.rhino.head.Node node47 = scriptNode45.target;
        scriptNode45.setBounds((int) (byte) -1, 23);
        int int51 = astRoot39.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode52.setEncodedSourceBounds((int) (short) 100, 10);
        int int60 = scriptNode52.getIntProp(0, 9);
        astRoot39.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str63 = astRoot62.getNextTempName();
        java.lang.String str64 = astRoot62.toSource();
        scriptNode52.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot62);
        java.lang.String str66 = astRoot62.getSourceName();
        com.google.javascript.rhino.head.Node node67 = astRoot62.getLastSibling();
        int int68 = astRoot21.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot62);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 9 + "'", int60 == 9);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(node67);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-839479794) + "'", int68 == (-839479794));
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("ScriptNode");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = astRoot4.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = astRoot4.getSymbols();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope18.setTop(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        scriptNode20.setCompilerData((java.lang.Object) scope23);
        scriptNode20.setEncodedSourceEnd(0);
        int int28 = scriptNode20.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        scriptNode20.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode37.toSource(0);
        scriptNode37.setPosition((int) 'a');
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int43 = astRoot4.getEncodedSourceStart();
        int int44 = astRoot4.getRegexpCount();
        int int45 = astRoot4.getLineno();
        int int46 = astRoot4.getEncodedSourceStart();
        astRoot4.checkParentLinks();
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 136 + "'", int28 == 136);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{\n}\n" + "'", str39, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int14 = astRoot4.getLength();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.Node node22 = astRoot15.getNext();
        java.lang.Object obj23 = astRoot15.getCompilerData();
        astRoot15.setEncodedSourceBounds(0, 548641306);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = parser27.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray37 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet38 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet38, commentArray37);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        astRoot43.addChildScope(scope45);
        java.lang.String str49 = astRoot43.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode53.getSymbols();
        java.lang.String str55 = astRoot50.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope57.setTop(scriptNode59);
        java.lang.String str62 = scope57.toSource(12);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scope57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot65, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet69 = astRoot65.getComments();
        node63.addChildToBack((com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.Node node71 = astRoot65.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator72 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator73 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator74 = positionComparator72.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator73);
        com.google.javascript.rhino.head.Node node75 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node76 = node75.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        node75.addChildToFront((com.google.javascript.rhino.head.Node) scope77);
        int int79 = scope77.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol81 = scope77.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int84 = positionComparator73.compare((com.google.javascript.rhino.head.ast.AstNode) scope77, (com.google.javascript.rhino.head.ast.AstNode) astRoot83);
        node71.addChildToFront((com.google.javascript.rhino.head.Node) astRoot83);
        com.google.javascript.rhino.head.ast.AstRoot astRoot86 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int87 = astRoot86.getEndLineno();
        java.lang.Object obj88 = astRoot86.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray89 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet90 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet90, commentArray89);
        astRoot86.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot83.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot4.target = astRoot15;
        int int98 = astRoot4.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope99 = astRoot4.getParentScope();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(commentArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                        {\n                        }\n" + "'", str62, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(commentSet69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(astNodeComparator74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(symbol81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-12) + "'", int84 == (-12));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(commentArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
        org.junit.Assert.assertNull(scope99);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons10.getErrorReporter();
        compilerEnvirons7.setErrorReporter(errorReporter13);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = iRFactory15.parse("                          ", "/", 1796887248);
        int int20 = astRoot19.getType();
        int int21 = astRoot19.getFunctionCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = astRoot23.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = astRoot23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope33 = astRoot23.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertNotNull(astRoot19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scope28.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node33 = node32.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        node32.addChildToFront((com.google.javascript.rhino.head.Node) scope34);
        scope28.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, node32);
        scriptNode31.flattenSymbolTable(false);
        int int39 = scriptNode31.getType();
        scriptNode31.setBaseLineno(5);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = astRoot0.getFunctions();
        int int44 = astRoot0.getEncodedSourceEnd();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getParamCount();
        astRoot46.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot46.getAstRoot();
        java.lang.String str51 = astRoot50.shortName();
        astRoot50.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        astRoot50.visitComments(nodeVisitor53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = astRoot55.getAstRoot();
        java.lang.String str57 = astRoot56.shortName();
        java.lang.String str58 = astRoot56.getSourceName();
        astRoot56.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap60 = astRoot56.getSymbolTable();
        java.lang.String str62 = astRoot56.makeIndent(32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str65 = astRoot64.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode67 = astRoot66.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode68.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) scriptNode68);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor72 = null;
        astRoot64.visitComments(nodeVisitor72);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator77 = scope76.spliterator();
        astRoot74.addChildScope(scope76);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = astRoot74.getChildScopes();
        java.lang.String str80 = astRoot74.toString();
        astRoot64.addChildToBack((com.google.javascript.rhino.head.Node) astRoot74);
        int int82 = astRoot74.getFunctionCount();
        astRoot56.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot74);
        int int84 = astRoot50.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot56);
        java.lang.String str86 = astRoot56.toSource((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node87 = astRoot0.getChildBefore((com.google.javascript.rhino.head.Node) astRoot56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100516861 + "'", int42 == 100516861);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(commentSet45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AstRoot" + "'", str51, "AstRoot");
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AstRoot" + "'", str57, "AstRoot");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                                                                " + "'", str62, "                                                                ");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertNull(astNode67);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator77);
        org.junit.Assert.assertNotNull(scopeList79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "136" + "'", str80, "136");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1926752956 + "'", int84 == 1926752956);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.lang.String str5 = astRoot1.getEncodedSource();
        java.lang.String str7 = astRoot1.toSource((-359275769));
        java.lang.String str8 = astRoot1.getEncodedSource();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet10 = compilerEnvirons7.getActivationNames();
        boolean boolean11 = compilerEnvirons7.recoverFromErrors();
        boolean boolean12 = compilerEnvirons7.getWarnTrailingComma();
        boolean boolean13 = compilerEnvirons7.isIdeMode();
        boolean boolean14 = compilerEnvirons7.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons15, errorReporter22);
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter22);
        boolean boolean25 = compilerEnvirons7.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException38 = errorReporter32.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser39 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter32);
        com.google.javascript.rhino.head.IRFactory iRFactory40 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode45 = astRoot44.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) scriptNode46);
        boolean boolean50 = astRoot42.isInStrictMode();
        astRoot42.setRelative((int) '4');
        int int53 = astRoot42.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node54 = iRFactory40.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        java.io.Reader reader55 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot58 = iRFactory40.parse(reader55, "java.io.IOException: {\n}\n", (-239565131));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertNotNull(evaluatorException38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(astNode45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(node54);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode0.getSymbols();
        int int3 = scriptNode0.getAbsolutePosition();
        int int4 = scriptNode0.getFunctionCount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot14 = parser10.parse("java.io.IOException: {\n}\n", "2\tBLOCK 2 -1\n", 1);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: missing ; before statement (2?BLOCK 2 -1?#1)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode2.getSymbols();
        com.google.javascript.rhino.head.Node node4 = scriptNode2.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode2.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.Node node12 = scope10.getFirstChild();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope10);
        astRoot6.target = node13;
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        int int16 = astRoot6.getLineno();
        astRoot6.setBounds((-557946458), 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(171557313, node1, (com.google.javascript.rhino.head.Node) astRoot6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = astRoot2.getAstRoot();
        java.lang.String str4 = astRoot3.shortName();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.Node node6 = astRoot3.getFirstChild();
        boolean boolean7 = astRoot3.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        astRoot8.checkParentLinks();
        int int17 = astRoot8.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        com.google.javascript.rhino.head.Node node26 = astRoot19.getLastSibling();
        int int27 = node26.getType();
        astRoot8.putProp((int) ' ', (java.lang.Object) node26);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot8, 26);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope32.setTop(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        scriptNode34.setCompilerData((java.lang.Object) scope37);
        scriptNode34.setEncodedSourceEnd(0);
        int int42 = scriptNode34.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        astRoot43.addChildScope(scope45);
        java.lang.String str49 = astRoot43.toSource(9);
        scriptNode34.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot54.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = scriptNode62.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = scriptNode62.getFunctions();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode62);
        int int67 = astRoot54.getParamCount();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((-297370766), node30, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) astRoot54, 444385247);
        scriptNode34.flattenSymbolTable(true);
        org.junit.Assert.assertNotNull(astRoot3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AstRoot" + "'", str4, "AstRoot");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 136 + "'", int27 == 136);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 136 + "'", int42 == 136);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        java.lang.Object obj5 = scriptNode0.getProp((-1115328205));
        scriptNode0.flattenSymbolTable(false);
        java.lang.Object obj8 = scriptNode0.getCompilerData();
        scriptNode0.setEncodedSource("java.io.IOException: !");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        int int6 = astRoot1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope9.spliterator();
        astRoot7.addChildScope(scope9);
        java.lang.String str13 = astRoot7.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment14 = null;
        astRoot7.setJsDocNode(comment14);
        astRoot7.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean20 = astRoot19.hasSideEffects();
        int int21 = astRoot19.getParamCount();
        astRoot7.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode23.toSource(0);
        scriptNode23.setEncodedSourceBounds(12, 10);
        scriptNode23.setSourceName("");
        astRoot7.setTop(scriptNode23);
        astRoot1.setTop(scriptNode23);
        int int33 = scriptNode23.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot34.getAstRoot();
        java.lang.String str36 = astRoot35.shortName();
        java.lang.String str37 = astRoot35.getSourceName();
        astRoot35.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = astRoot35.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot41);
        int int48 = astRoot41.depth();
        int int49 = astRoot35.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        java.lang.String str50 = scriptNode23.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot41);
        com.google.javascript.rhino.head.ast.Scope scope51 = astRoot41.getEnclosingScope();
        astRoot41.checkParentLinks();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AstRoot" + "'", str36, "AstRoot");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 609960484 + "'", int49 == 609960484);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(scope51);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node5 = null;
        astRoot0.target = node5;
        java.lang.Object obj7 = astRoot0.getCompilerData();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor8 = astRoot0.iterator();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        int int17 = astRoot2.depth();
        int int18 = astRoot2.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.setDouble((double) (-932305774));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(966287688, "14\tSCRIPT 14 1\n");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        java.lang.String str7 = astRoot5.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode8.getSymbols();
        java.lang.String str10 = astRoot5.toStringTree(scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        int int14 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode8, (com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList22 = astRoot15.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = astRoot26.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot15, (com.google.javascript.rhino.head.ast.AstNode) astRoot24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.Node node37 = astRoot34.getFirstChild();
        astRoot24.putProp(2, (java.lang.Object) astRoot34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot40, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = astRoot40.getComments();
        com.google.javascript.rhino.head.Node node45 = astRoot40.getFirstChild();
        java.lang.String str46 = astRoot24.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot40);
        node2.putProp((-1693746091), (java.lang.Object) str46);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "136" + "'", str7, "136");
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(functionNodeList22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(astNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(commentSet44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        scriptNode5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        boolean boolean13 = scriptNode5.hasConsistentReturnUsage();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor14 = scriptNode5.iterator();
        scriptNode5.setEncodedSourceStart(6);
        int int17 = scriptNode5.getParamCount();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeItor14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        int int15 = scriptNode11.getEncodedSourceEnd();
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        int int19 = scriptNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot17);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode11.labelId(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(astRoot18);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 476288887 + "'", int19 == 476288887);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException("", (java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.lang.String str5 = iOException3.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str5, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException5);
        iOException2.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException("                                                                ");
        java.lang.Throwable[] throwableArray15 = iOException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException("-1\tSCRIPT -1 1\n", (java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException: |", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray20 = iOException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot21.getAstRoot();
        astRoot35.setBounds(21, (int) (short) 0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        java.lang.String str41 = astRoot39.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode42.getSymbols();
        java.lang.String str44 = astRoot39.toStringTree(scriptNode42);
        astRoot39.checkParentLinks();
        int int48 = astRoot39.getIntProp(11, 32);
        int int49 = astRoot39.getPosition();
        astRoot35.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot39);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = astRoot39.getSymbols();
        int int52 = astRoot39.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode57 = astRoot56.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode58);
        boolean boolean62 = astRoot54.isInStrictMode();
        astRoot54.setRelative((int) '4');
        astRoot54.setRelative(0);
        java.lang.String str67 = astRoot54.getJsDoc();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor68 = null;
        astRoot54.visitComments(nodeVisitor68);
        astRoot39.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot54);
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot((-1285574509));
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = scope74.getChildScopes();
        scope74.removeProp(640372901);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot72, scope74);
        java.lang.String str80 = astRoot72.toSource(653625563);
        // The following exception was thrown during execution in test generation
        try {
            astRoot39.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) astRoot72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "136" + "'", str41, "136");
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(astNode57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(scopeList75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray17 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList18, symbolArray17);
        astRoot15.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList18);
        boolean boolean21 = astRoot15.hasChildren();
        int int22 = astRoot15.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        int int25 = scriptNode23.depth();
        com.google.javascript.rhino.head.ast.Comment comment26 = null;
        scriptNode23.setJsDocNode(comment26);
        com.google.javascript.rhino.head.Node node28 = scriptNode23.getLastSibling();
        astRoot15.target = scriptNode23;
        scriptNode7.target = scriptNode23;
        int int31 = scriptNode23.getFunctionCount();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(symbolArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getNextTempName();
        com.google.javascript.rhino.head.Node node12 = scriptNode10.target;
        scriptNode10.setBounds((int) (byte) -1, 23);
        int int16 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode17.setEncodedSourceBounds((int) (short) 100, 10);
        int int25 = scriptNode17.getIntProp(0, 9);
        astRoot4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol34 = astRoot30.getSymbol("java.io.IOException: ");
        astRoot30.setEncodedSourceStart(0);
        java.lang.String str38 = astRoot30.toSource(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray48 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList49, symbolArray48);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scriptNode44.getTop();
        int int53 = scriptNode52.getEncodedSourceEnd();
        astRoot30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Node node55 = astRoot30.getLastChild();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator57 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator58 = positionComparator56.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode63 = astRoot62.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode64.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int71 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot62, (com.google.javascript.rhino.head.ast.AstNode) scope70);
        astRoot62.removeChildren();
        java.lang.String str74 = astRoot62.toSource(10);
        int int75 = astRoot62.getAbsolutePosition();
        java.lang.String str76 = node55.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = astRoot62.getAstRoot();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((-1291599107), (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot77, (int) '4');
        com.google.javascript.rhino.head.ast.Scope scope80 = astRoot4.getParentScope();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(symbol34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNotNull(symbolArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(astNodeComparator58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertNull(astNode63);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(astRoot77);
        org.junit.Assert.assertNull(scope80);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet3 = astRoot1.getComments();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = astRoot1.addFunction(functionNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(commentSet3);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot2, 4);
        astRoot2.removeChildren();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (-3));
        astRoot2.addChildToBack(node9);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope(170, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getNextTempName();
        scriptNode14.setLineno((int) (short) 10);
        java.lang.Object obj18 = scriptNode14.getCompilerData();
        scriptNode14.putIntProp((-297370766), 437731425);
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        java.lang.String str29 = astRoot23.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment30 = null;
        astRoot23.setJsDocNode(comment30);
        int int32 = astRoot23.getType();
        int int33 = astRoot23.getPosition();
        astRoot23.setInStrictMode(false);
        scriptNode14.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        com.google.javascript.rhino.head.Node node37 = scriptNode14.getLastChild();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(663275392, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode14, (-1471166994));
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = astRoot40.getAstRoot();
        java.lang.String str42 = astRoot41.shortName();
        java.lang.String str43 = astRoot41.getSourceName();
        int int46 = astRoot41.getIntProp(12, (int) ' ');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = astRoot41.spliterator();
        int int48 = astRoot41.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node49 = node39.getChildBefore((com.google.javascript.rhino.head.Node) astRoot41);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 136 + "'", int32 == 136);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AstRoot" + "'", str42, "AstRoot");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet22 = compilerEnvirons18.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setWarnTrailingComma(true);
        boolean boolean26 = compilerEnvirons23.isRecordingLocalJsDocComments();
        compilerEnvirons23.setWarnTrailingComma(false);
        compilerEnvirons23.setAllowSharpComments(false);
        boolean boolean31 = compilerEnvirons23.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        java.lang.String[] strArray44 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        compilerEnvirons32.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons23.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons53 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons53.setWarnTrailingComma(true);
        boolean boolean56 = compilerEnvirons53.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter57 = compilerEnvirons53.getErrorReporter();
        compilerEnvirons53.setGeneratingSource(false);
        int int60 = compilerEnvirons53.getOptimizationLevel();
        boolean boolean61 = compilerEnvirons53.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter65 = compilerEnvirons62.getErrorReporter();
        boolean boolean66 = compilerEnvirons62.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter67 = compilerEnvirons62.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException73 = errorReporter67.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter67.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser80 = new com.google.javascript.rhino.head.Parser(compilerEnvirons53, errorReporter67);
        com.google.javascript.rhino.head.IRFactory iRFactory81 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter67);
        errorReporter67.warning("-1\t  SCRIPT 0 1\n", "1115693949\tSCRIPT 1115693949 -462068386\n", (-100), "java.io.IOException: |", 97531394);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(errorReporter57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(errorReporter65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(errorReporter67);
        org.junit.Assert.assertNotNull(evaluatorException73);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.Comment comment6 = null;
        scriptNode4.setJsDocNode(comment6);
        int int8 = scriptNode4.getLineno();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getNextTempName();
        java.lang.String str12 = scriptNode10.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = scriptNode10.getEnclosingFunction();
        java.lang.String str14 = node9.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node16 = node9.setType((-443001414));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str12, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(node16);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGeneratingSource();
        boolean boolean5 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.Parser parser3 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = parser3.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot7.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getEndLineno();
        java.lang.Object obj26 = astRoot24.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        astRoot24.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int37 = astRoot22.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot22);
        astRoot22.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getEndLineno();
        java.lang.Object obj47 = astRoot45.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot45.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        astRoot45.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getNextTempName();
        com.google.javascript.rhino.head.Node node55 = scriptNode53.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = scriptNode53.getFunctions();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode53);
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot45);
        astRoot22.setBaseLineno(1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        int int65 = scriptNode61.getEncodedSourceEnd();
        scriptNode61.setBounds((int) (byte) 0, 3);
        astRoot22.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode61);
        java.lang.String str71 = astRoot22.makeIndent(8);
        astRoot7.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot22);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setContinue((com.google.javascript.rhino.head.Node) astRoot22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                " + "'", str71, "                ");
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        scriptNode0.setLineno((int) (byte) -1);
        int int5 = scriptNode0.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode0.getChildScopes();
        int int7 = scriptNode0.getEndLineno();
        java.lang.Object obj8 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        com.google.javascript.rhino.head.Node node10 = scriptNode0.getFirstChild();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        scriptNode0.removeProp(25);
        int int7 = scriptNode0.getLength();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("hi!", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException("", (java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("8\tSCRIPT 8 1\n", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: java.io.IOException");
        iOException10.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", (java.lang.Throwable) iOException13);
        iOException5.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.String str18 = iOException13.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException" + "'", str18, "java.io.IOException: java.io.IOException: java.io.IOException");
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-1291599107));
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = astRoot1.spliterator();
        java.lang.Object obj4 = astRoot1.getCompilerData();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        astRoot10.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot10);
        java.lang.String str16 = astRoot10.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode21 = astRoot20.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int26 = astRoot18.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = astRoot18.spliterator();
        com.google.javascript.rhino.head.Node node29 = astRoot18.setType(550287075);
        astRoot10.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        com.google.javascript.rhino.head.ast.Scope scope31 = astRoot10.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray34 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList35, symbolArray34);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList35);
        astRoot32.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int40 = astRoot39.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getEndLineno();
        java.lang.Object obj43 = astRoot41.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray44 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet45, commentArray44);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet45);
        astRoot39.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet45);
        astRoot32.target = astRoot39;
        com.google.javascript.rhino.head.Node node50 = astRoot39.getNext();
        astRoot39.removeProp((-61111));
        int int53 = astRoot39.getEncodedSourceEnd();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons54 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons54.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter57 = compilerEnvirons54.getErrorReporter();
        boolean boolean58 = compilerEnvirons54.isGenerateObserverCount();
        compilerEnvirons54.setRecordingComments(true);
        boolean boolean61 = compilerEnvirons54.isGenerateObserverCount();
        boolean boolean62 = compilerEnvirons54.isGenerateDebugInfo();
        compilerEnvirons54.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons65 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons65.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter68 = compilerEnvirons65.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory69 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons54, errorReporter68);
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str72 = astRoot71.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode74 = astRoot73.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode75.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot71, (com.google.javascript.rhino.head.Node) astRoot73, (com.google.javascript.rhino.head.Node) scriptNode75);
        int int79 = astRoot71.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        scope80.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot71, scope80);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = iRFactory69.transformTree(astRoot71);
        scriptNode83.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = scriptNode83.getAstRoot();
        java.lang.String str86 = astRoot39.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot85);
        // The following exception was thrown during execution in test generation
        try {
            scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(astNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(symbolArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(commentArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(errorReporter57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(errorReporter68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNull(astNode74);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNotNull(astRoot85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scope5);
        int int7 = scope5.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope5.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int12 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope5, (com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        boolean boolean22 = astRoot14.isInStrictMode();
        astRoot14.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        int int33 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot25);
        com.google.javascript.rhino.head.Parser parser34 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = parser34.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot38.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = astRoot45.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode47);
        int int51 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot43, scope52);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope52);
        java.lang.String str56 = scope52.shortName();
        int int57 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot38, (com.google.javascript.rhino.head.ast.AstNode) scope52);
        scope52.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope59 = scope52.getEnclosingScope();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-12) + "'", int12 == (-12));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-52) + "'", int33 == (-52));
        org.junit.Assert.assertNotNull(astRoot38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Scope" + "'", str56, "Scope");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNull(scope59);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-359275769));
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope7.setTop(scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        scriptNode9.setCompilerData((java.lang.Object) scope12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = astRoot15.getAstRoot();
        java.lang.String str17 = astRoot16.shortName();
        java.lang.String str18 = astRoot16.debugPrint();
        scope12.addChildToFront((com.google.javascript.rhino.head.Node) astRoot16);
        astRoot1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot16);
        int int21 = astRoot1.depth();
        int int22 = astRoot1.getEncodedSourceEnd();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(astRoot16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AstRoot" + "'", str17, "AstRoot");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        node1.putProp(0, (java.lang.Object) scriptNode6);
        com.google.javascript.rhino.head.Node node10 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        node10.putProp(0, (java.lang.Object) scriptNode15);
        int int18 = scriptNode15.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode15.getSymbols();
        scriptNode6.setSymbols(symbolList19);
        java.lang.Object obj22 = scriptNode6.getProp(22);
        com.google.javascript.rhino.head.ast.Scope scope23 = scriptNode6.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node node30 = scope28.getFirstChild();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope28);
        scope28.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode34 = scope28.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = astRoot35.getSymbol("java.io.IOException: ");
        astRoot35.setEncodedSourceStart(0);
        java.lang.String str43 = astRoot35.toSource(14);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode34, (com.google.javascript.rhino.head.Node) astRoot35);
        com.google.javascript.rhino.head.Node node46 = astNode34.setType(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = astRoot48.getAstRoot();
        java.lang.String str50 = astRoot49.shortName();
        com.google.javascript.rhino.head.Node node51 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node52 = node51.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        node51.addChildToFront((com.google.javascript.rhino.head.Node) scope53);
        int int55 = scope53.getLineno();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) scope53, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int59 = astRoot58.getEndLineno();
        java.lang.Object obj60 = astRoot58.getCompilerData();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot58);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor62 = astRoot58.iterator();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getNextTempName();
        com.google.javascript.rhino.head.Node node66 = scriptNode64.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode64.getFunctions();
        int int68 = scriptNode64.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getNextTempName();
        com.google.javascript.rhino.head.Node node71 = scriptNode69.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList72 = scriptNode69.getFunctions();
        int int73 = scriptNode69.getEncodedSourceEnd();
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        scriptNode64.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope63, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        java.lang.String str78 = scriptNode64.getJsDoc();
        int int79 = scriptNode64.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(471236572, (com.google.javascript.rhino.head.Node) astNode34, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet81 = astRoot58.getComments();
        scope23.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot58);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope89 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str92 = scriptNode90.toSource(0);
        scriptNode90.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node((int) '#', node86, (com.google.javascript.rhino.head.Node) scope89, (com.google.javascript.rhino.head.Node) scriptNode90, 2);
        com.google.javascript.rhino.head.Node node98 = node97.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            scope23.setFinally(node97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(scope23);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(astNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(astRoot49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AstRoot" + "'", str50, "AstRoot");
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(nodeItor62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "$0" + "'", str70, "$0");
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNotNull(functionNodeList72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(commentSet81);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{\n}\n" + "'", str92, "{\n}\n");
        org.junit.Assert.assertNotNull(node98);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        astRoot1.setInStrictMode(false);
        int int8 = astRoot1.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = astRoot12.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) scriptNode14);
        astRoot12.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getNextTempName();
        com.google.javascript.rhino.head.Node node22 = scriptNode20.target;
        int int23 = scriptNode20.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node24 = scriptNode20.getLastChild();
        int int25 = scriptNode20.getEndLineno();
        astRoot12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = astRoot12.getSymbolTable();
        boolean boolean28 = astRoot12.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot29.getAstRoot();
        java.lang.String str31 = astRoot30.shortName();
        java.lang.String str33 = astRoot30.toSource(1);
        java.lang.String str34 = astRoot30.getSourceName();
        astRoot12.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray38 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList39, symbolArray38);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList39);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        astRoot36.addChildScope(scope43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str50 = scriptNode47.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope53, 25);
        java.lang.Object obj57 = scriptNode47.getProp(0);
        scope43.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode47);
        astRoot12.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.Comment comment60 = null;
        scriptNode47.setJsDocNode(comment60);
        astRoot1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode47);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = astRoot1.getFunctionNode((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AstRoot" + "'", str31, "AstRoot");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(symbolArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.lang.String str17 = astRoot1.toSource(20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node18 = astRoot1.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(653625563);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = astRoot3.getAstRoot();
        java.lang.String str5 = astRoot4.shortName();
        com.google.javascript.rhino.head.Node node6 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node7 = node6.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        node6.addChildToFront((com.google.javascript.rhino.head.Node) scope8);
        int int10 = scope8.getLineno();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scope8, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getEndLineno();
        java.lang.Object obj15 = astRoot13.getCompilerData();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        java.lang.String str17 = node1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot13);
        com.google.javascript.rhino.head.Node node18 = node1.getLastChild();
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AstRoot" + "'", str5, "AstRoot");
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node18);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        boolean boolean32 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean33 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean34 = compilerEnvirons0.isGeneratingSource();
        boolean boolean35 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean36 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.setEncodedSourceBounds(12, 10);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setBaseLineno((-1840907413));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isStrictMode();
        boolean boolean26 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean27 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray13 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet14, commentArray13);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot10.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getNextTempName();
        com.google.javascript.rhino.head.Node node20 = scriptNode18.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode18.getFunctions();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int23 = astRoot8.getEncodedSourceStart();
        astRoot8.setRelative(100);
        boolean boolean26 = astRoot8.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) astRoot8);
        astRoot8.checkParentLinks();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = astRoot8.getSymbols();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor30 = astRoot8.iterator();
        com.google.javascript.rhino.head.Parser parser31 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = parser31.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator39 = scope38.spliterator();
        astRoot36.addChildScope(scope38);
        astRoot35.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        com.google.javascript.rhino.head.ast.Symbol symbol43 = astRoot36.getSymbol("                  ");
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = scope45.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node49 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node50 = node49.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        node49.addChildToFront((com.google.javascript.rhino.head.Node) scope51);
        scope45.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode48, node49);
        int int54 = scriptNode48.getEncodedSourceEnd();
        astRoot36.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        scriptNode48.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = astRoot57.getAstRoot();
        java.lang.String str59 = astRoot58.shortName();
        java.lang.String str60 = astRoot58.debugPrint();
        com.google.javascript.rhino.head.Node node61 = astRoot58.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList62 = astRoot58.getStatements();
        int int63 = astRoot58.getFunctionCount();
        int int64 = astRoot58.getEncodedSourceStart();
        astRoot58.checkParentLinks();
        java.lang.String str66 = astRoot58.getEncodedSource();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator67 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str69 = astRoot68.getNextTempName();
        java.lang.String str70 = astRoot68.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode71.getSymbols();
        java.lang.String str73 = astRoot68.toStringTree(scriptNode71);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope();
        scope74.addChild((com.google.javascript.rhino.head.ast.AstNode) scope75);
        int int77 = positionComparator67.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode71, (com.google.javascript.rhino.head.ast.AstNode) scope74);
        scriptNode48.addChildAfter((com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) scriptNode71);
        // The following exception was thrown during execution in test generation
        try {
            astRoot8.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(commentArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolList29);
        org.junit.Assert.assertNotNull(nodeItor30);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertNull(symbol43);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(astRoot58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AstRoot" + "'", str59, "AstRoot");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str60, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(astNodeList62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "$0" + "'", str69, "$0");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "136" + "'", str70, "136");
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        com.google.javascript.rhino.head.Node node11 = astRoot4.getLastSibling();
        int int12 = node11.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        java.lang.String str20 = astRoot13.toSource(0);
        java.lang.String str22 = astRoot13.toSource(25);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope3, node11, (com.google.javascript.rhino.head.Node) astRoot13);
        int int26 = astRoot13.getIntProp(4, (-1593445669));
        astRoot13.setBounds((-264283662), (-960096572));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = astRoot13.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1593445669) + "'", int26 == (-1593445669));
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString("-11\tBLOCK -11 1\n");
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((-892379193), node2, (-791970984));
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scriptNode0.setEncodedSource("$0");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str15 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope18, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = astRoot21.getAstRoot();
        java.lang.String str23 = astRoot22.shortName();
        java.lang.String str24 = astRoot22.getSourceName();
        astRoot22.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = astRoot22.getSymbolTable();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope18, (com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = astRoot28.getTop();
        int int32 = astRoot28.getParamCount();
        boolean boolean33 = astRoot28.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator34 = astRoot28.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol36 = astRoot28.getSymbol("                                    ");
        boolean boolean37 = astRoot28.isInStrictMode();
        astRoot22.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot28);
        com.google.javascript.rhino.head.Node node39 = astRoot28.getLastSibling();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot28);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot28.visit(nodeVisitor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNotNull(astRoot22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AstRoot" + "'", str23, "AstRoot");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(symbol36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException1);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException4);
        iOException1.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException11 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("hi!", (java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException("-1\t  BLOCK 0 1\n");
        iOException8.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException("", (java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        iOException8.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException29 = new java.io.IOException();
        java.io.IOException iOException30 = new java.io.IOException("", (java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException("", (java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray38 = iOException36.getSuppressed();
        iOException33.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException("", (java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException("8\tSCRIPT 8 1\n", (java.lang.Throwable) iOException43);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException54 = errorReporter48.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) evaluatorException54);
        iOException43.addSuppressed((java.lang.Throwable) iOException55);
        iOException33.addSuppressed((java.lang.Throwable) iOException43);
        iOException23.addSuppressed((java.lang.Throwable) iOException43);
        java.lang.String str59 = iOException23.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertNotNull(evaluatorException54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str59, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setWarnTrailingComma(true);
        boolean boolean25 = compilerEnvirons22.isRecordingLocalJsDocComments();
        compilerEnvirons22.setWarnTrailingComma(false);
        compilerEnvirons22.setAllowSharpComments(false);
        boolean boolean30 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setWarnTrailingComma(true);
        java.lang.String[] strArray43 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        compilerEnvirons31.setActivationNames((java.util.Set<java.lang.String>) strSet44);
        compilerEnvirons22.setActivationNames((java.util.Set<java.lang.String>) strSet44);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet44);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons49.setWarnTrailingComma(true);
        java.lang.String[] strArray61 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        compilerEnvirons49.setActivationNames((java.util.Set<java.lang.String>) strSet62);
        compilerEnvirons49.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons67 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons67.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter70 = compilerEnvirons67.getErrorReporter();
        boolean boolean71 = compilerEnvirons67.isGenerateObserverCount();
        compilerEnvirons67.setRecordingComments(true);
        boolean boolean74 = compilerEnvirons67.isGenerateObserverCount();
        boolean boolean75 = compilerEnvirons67.isGenerateDebugInfo();
        compilerEnvirons67.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons78 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons78.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter81 = compilerEnvirons78.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory82 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons67, errorReporter81);
        com.google.javascript.rhino.head.Parser parser83 = new com.google.javascript.rhino.head.Parser(compilerEnvirons49, errorReporter81);
        com.google.javascript.rhino.head.Parser parser84 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter81);
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(errorReporter70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(errorReporter81);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str14 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope17, 25);
        java.lang.Object obj21 = scriptNode11.getProp(0);
        scope7.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean23 = scope7.hasSideEffects();
        scope7.setBounds((int) (short) 0, (int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray29 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList30, symbolArray29);
        astRoot27.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList30);
        astRoot27.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getEndLineno();
        java.lang.Object obj38 = astRoot36.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray39 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet40 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet40, commentArray39);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet40);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet40);
        astRoot27.target = astRoot34;
        int int45 = astRoot27.getParamCount();
        java.lang.String str46 = astRoot27.shortName();
        java.lang.Object obj48 = astRoot27.getProp((int) (byte) 10);
        scope7.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot27);
        int int50 = scope7.depth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(symbolArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(commentArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AstRoot" + "'", str46, "AstRoot");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope(122705610, 3);
        scope11.setLineno(550287075);
        int int14 = scope11.getLineno();
        astRoot1.addChildrenToBack((com.google.javascript.rhino.head.Node) scope11);
        int int16 = astRoot1.getBaseLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 550287075 + "'", int14 == 550287075);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        boolean boolean8 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean10 = compilerEnvirons9.recoverFromErrors();
        int int11 = compilerEnvirons9.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser13 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter12);
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setWarnTrailingComma(true);
        boolean boolean25 = compilerEnvirons22.isRecordingLocalJsDocComments();
        boolean boolean26 = compilerEnvirons22.isRecordingComments();
        boolean boolean27 = compilerEnvirons22.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter28 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException40 = errorReporter34.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons22.setErrorReporter(errorReporter34);
        compilerEnvirons22.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons44.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet47 = compilerEnvirons44.getActivationNames();
        boolean boolean48 = compilerEnvirons44.recoverFromErrors();
        boolean boolean49 = compilerEnvirons44.getWarnTrailingComma();
        boolean boolean50 = compilerEnvirons44.isIdeMode();
        boolean boolean51 = compilerEnvirons44.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons52 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons52.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons55 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons55.setWarnTrailingComma(true);
        boolean boolean58 = compilerEnvirons55.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter59 = compilerEnvirons55.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser60 = new com.google.javascript.rhino.head.Parser(compilerEnvirons52, errorReporter59);
        com.google.javascript.rhino.head.Parser parser61 = new com.google.javascript.rhino.head.Parser(compilerEnvirons44, errorReporter59);
        compilerEnvirons22.setErrorReporter(errorReporter59);
        com.google.javascript.rhino.head.IRFactory iRFactory63 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons17, errorReporter59);
        com.google.javascript.rhino.head.Parser parser64 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter59);
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(errorReporter28);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertNotNull(evaluatorException40);
        org.junit.Assert.assertNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(errorReporter59);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot1.getSymbol("java.io.IOException: ");
        astRoot1.setEncodedSourceStart(0);
        java.lang.String str9 = astRoot1.makeIndent(13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray14 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList15, symbolArray14);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        astRoot12.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode33.getFunctions();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int38 = astRoot23.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node41 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scope53.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        scope53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode56, node57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        java.lang.String str64 = node57.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        java.lang.String str65 = astRoot62.getNextTempName();
        boolean boolean66 = astRoot62.hasSideEffects();
        java.lang.String str68 = astRoot62.toSource(100);
        node41.addChildAfter((com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot62);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot42);
        int int71 = astRoot42.getType();
        astRoot42.clearParentScope();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                          " + "'", str9, "                          ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(symbolArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 136 + "'", int71 == 136);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = astRoot9.getAstRoot();
        java.lang.String str11 = astRoot10.shortName();
        java.lang.String str12 = astRoot10.debugPrint();
        scope6.addChildToFront((com.google.javascript.rhino.head.Node) astRoot10);
        astRoot10.removeChildren();
        boolean boolean15 = astRoot10.isInStrictMode();
        int int16 = astRoot10.getBaseLineno();
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AstRoot" + "'", str11, "AstRoot");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str12, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setRecordingComments(false);
        compilerEnvirons0.setXmlAvailable(false);
        boolean boolean9 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        boolean boolean14 = compilerEnvirons10.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        boolean boolean18 = compilerEnvirons15.isRecordingLocalJsDocComments();
        compilerEnvirons15.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser22 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10, errorReporter21);
        compilerEnvirons0.setErrorReporter(errorReporter21);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter21);
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.removeProp(8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = astRoot31.getAstRoot();
        java.lang.String str33 = astRoot32.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = astRoot32.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray37 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList38, symbolArray37);
        astRoot35.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        scriptNode34.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        int int43 = scriptNode34.getPosition();
        int int44 = scriptNode34.getEndLineno();
        int int47 = scriptNode34.getIntProp((-384667093), (-197843976));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AstRoot" + "'", str33, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(symbolArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-197843976) + "'", int47 == (-197843976));
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node1 = node0.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        node0.addChildToFront((com.google.javascript.rhino.head.Node) scope2);
        int int4 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol6 = scope2.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node7 = scope2.getFirstChild();
        com.google.javascript.rhino.head.ast.Comment comment8 = scope2.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node9 = comment8.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(symbol6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(comment8);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean22 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel(26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 26");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setWarnTrailingComma(true);
        boolean boolean16 = compilerEnvirons13.isRecordingLocalJsDocComments();
        boolean boolean17 = compilerEnvirons13.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.isRecordingLocalJsDocComments();
        compilerEnvirons18.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons13, errorReporter24);
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons13.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter26);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter26.runtimeError("3\tSCRIPT 3 3\n", "                                                {\n                                                }\n", 2933643, "0\tSCRIPT 0 2\n0\t  EXPR_RESULT 0 2\n0\t    NAME 0 2 $0\n", (-207088395));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -207088395");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertNotNull(errorReporter26);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        int int14 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastChild();
        int int16 = scriptNode11.getEndLineno();
        astRoot3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = astRoot3.getSymbolTable();
        boolean boolean19 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.ast.Scope scope20 = astRoot3.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump21 = scope20.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scope20);
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        astRoot0.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = astRoot0.getSymbolTable();
        java.lang.Object obj4 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray8 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList9, symbolArray8);
        astRoot6.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList9);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        astRoot6.addChildScope(scope13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot19.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int32 = astRoot17.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot17);
        astRoot6.removeProp(8);
        int int36 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        astRoot6.checkParentLinks();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = astRoot6.getParamOrVarName(190277856);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(symbolArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-536318979) + "'", int36 == (-536318979));
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        int int11 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        int int23 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode17, (com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = astRoot24.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot33, 24);
        astRoot33.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot33.getAstRoot();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        int int49 = scriptNode0.getIntProp(1111059691, 1034001328);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1034001328 + "'", int49 == 1034001328);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1840907413));
        java.lang.Object obj3 = scope1.getProp(100);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = scope1.getExistingIntProp(88171227);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) '#', node34, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode38, 2);
        com.google.javascript.rhino.head.Node node46 = scope37.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getEndLineno();
        java.lang.Object obj52 = astRoot50.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        astRoot50.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode58.getFunctions();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int63 = astRoot48.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope65.setTop(scriptNode67);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = scope65.iterator();
        astRoot48.setParentScope(scope65);
        scope37.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot48);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        scope72.addChild((com.google.javascript.rhino.head.ast.AstNode) scope73);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = scope73.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node77 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node78 = node77.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        node77.addChildToFront((com.google.javascript.rhino.head.Node) scope79);
        scope73.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode76, node77);
        astRoot48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        scriptNode30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode76);
        int int84 = scriptNode30.getLength();
        int int85 = scriptNode30.getFunctionCount();
        int int86 = scriptNode30.getPosition();
        int int87 = scriptNode30.getRegexpCount();
        java.lang.String str88 = scriptNode30.getSourceName();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        boolean boolean34 = astRoot33.isInStrictMode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot33.getFunctions();
        java.lang.Object obj36 = astRoot33.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator38);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node41 = node40.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        node40.addChildToFront((com.google.javascript.rhino.head.Node) scope42);
        int int44 = scope42.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol46 = scope42.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int49 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) scope42, (com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot48.getComments();
        astRoot33.target = astRoot48;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(symbol46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-12) + "'", int49 == (-12));
        org.junit.Assert.assertNull(commentSet50);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.debugPrint();
        java.lang.String str3 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope5 = astRoot0.getDefiningScope("                    ");
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scope7.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node11 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node12 = node11.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        node11.addChildToFront((com.google.javascript.rhino.head.Node) scope13);
        scope7.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode10, node11);
        com.google.javascript.rhino.head.Node node16 = scriptNode10.target;
        java.lang.String str17 = scriptNode10.shortName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        java.lang.String str24 = astRoot18.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = astRoot18.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode30 = astRoot29.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getNextTempName();
        com.google.javascript.rhino.head.Node node37 = scriptNode35.target;
        scriptNode35.setBounds((int) (byte) -1, 23);
        int int41 = astRoot29.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scope43.new NodeIterator();
        scope43.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        java.lang.String str50 = astRoot48.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = scriptNode51.getSymbols();
        java.lang.String str53 = astRoot48.toStringTree(scriptNode51);
        java.lang.String str55 = astRoot48.toSource(0);
        java.lang.String str57 = astRoot48.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode58.getFunctions();
        int int62 = scriptNode58.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getNextTempName();
        com.google.javascript.rhino.head.Node node65 = scriptNode63.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList66 = scriptNode63.getFunctions();
        int int67 = scriptNode63.getEncodedSourceEnd();
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str71 = astRoot70.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode73 = astRoot72.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode74.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot72, (com.google.javascript.rhino.head.Node) scriptNode74);
        int int78 = astRoot70.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        scope79.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot70, scope79);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap82 = astRoot70.getSymbolTable();
        scriptNode58.setSymbolTable(strMap82);
        astRoot48.setSymbolTable(strMap82);
        scope43.setSymbolTable(strMap82);
        astRoot29.setSymbolTable(strMap82);
        astRoot18.setSymbolTable(strMap82);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap88 = astRoot18.getSymbolTable();
        scriptNode10.setSymbolTable(strMap88);
        // The following exception was thrown during execution in test generation
        try {
            scope5.setSymbolTable(strMap88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ScriptNode" + "'", str17, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(astNode30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "136" + "'", str50, "136");
        org.junit.Assert.assertNotNull(symbolList52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(functionNodeList66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertNull(astNode73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.lang.String str5 = astRoot1.getSourceName();
        java.lang.String str6 = astRoot1.getNextTempName();
        java.lang.String str7 = astRoot1.getSourceName();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean10 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setXmlAvailable(true);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        boolean boolean8 = astRoot2.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        astRoot2.setCompilerData((java.lang.Object) boolean17);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2);
        astRoot2.setPosition(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = astRoot22.getAstRoot();
        java.lang.String str24 = astRoot23.shortName();
        java.lang.String str26 = astRoot23.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = astRoot23.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray30 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList31, symbolArray30);
        astRoot28.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList31);
        boolean boolean34 = astRoot28.hasChildren();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot28);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList36 = astRoot2.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator40 = scope38.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node43 = node42.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        node42.addChildToFront((com.google.javascript.rhino.head.Node) scope44);
        scope38.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode41, node42);
        scriptNode41.flattenSymbolTable(false);
        int int49 = scriptNode41.getType();
        java.lang.String str50 = scriptNode41.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator54 = scope53.spliterator();
        astRoot51.addChildScope(scope53);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList56 = astRoot51.getChildScopes();
        scriptNode41.setCompilerData((java.lang.Object) scopeList56);
        int int58 = scriptNode41.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope60 = scriptNode41.getDefiningScope("{\n}\n");
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AstRoot" + "'", str24, "AstRoot");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(symbolArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(astNodeList36);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 136 + "'", int49 == 136);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "136" + "'", str50, "136");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator54);
        org.junit.Assert.assertNotNull(scopeList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(scope60);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        scriptNode3.setJsDocNode(comment5);
        int int7 = scriptNode3.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        boolean boolean17 = astRoot9.isInStrictMode();
        astRoot9.setRelative((int) '4');
        astRoot9.setRelative(0);
        java.lang.String str22 = astRoot9.getJsDoc();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot9);
        scriptNode3.flattenSymbolTable(true);
        scriptNode3.setSourceName("java.io.IOException:                     ");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scope5);
        int int7 = scope5.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope5.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int12 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope5, (com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        boolean boolean22 = astRoot14.isInStrictMode();
        astRoot14.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        int int33 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot25);
        java.lang.String str34 = astRoot14.getNextTempName();
        astRoot14.checkParentLinks();
        astRoot14.setEncodedSourceStart(665248667);
        com.google.javascript.rhino.head.ast.Symbol symbol38 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot14.putSymbol(symbol38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-12) + "'", int12 == (-12));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-52) + "'", int33 == (-52));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$1" + "'", str34, "$1");
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setIdeMode(true);
        boolean boolean28 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(550287075, (-543879055));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getNextTempName();
        com.google.javascript.rhino.head.Node node5 = scriptNode3.target;
        int int6 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node7 = scriptNode3.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = scriptNode3.getSymbols();
        scriptNode3.setBaseLineno(19);
        scope2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode3);
        boolean boolean12 = scope2.hasSideEffects();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = scope2.new NodeIterator();
        com.google.javascript.rhino.head.Node node14 = nodeIterator13.next();
        nodeIterator13.remove();
        boolean boolean16 = nodeIterator13.hasNext();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(symbolList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        int int10 = astRoot0.getRegexpCount();
        com.google.javascript.rhino.head.Node node11 = astRoot0.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = astRoot0.getSymbolTable();
        int int15 = astRoot0.getIntProp((int) (byte) 10, 973854177);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons16.getErrorReporter();
        boolean boolean20 = compilerEnvirons16.isGenerateObserverCount();
        boolean boolean21 = compilerEnvirons16.recoverFromErrors();
        java.util.Set<java.lang.String> strSet22 = compilerEnvirons16.getActivationNames();
        compilerEnvirons16.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = parser25.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot29.setEncodedSourceEnd(4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = astRoot29.getFunctions();
        java.lang.String str33 = astRoot29.getSourceName();
        int int34 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot29);
        com.google.javascript.rhino.head.Node node36 = com.google.javascript.rhino.head.Node.newNumber((double) 3);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setContinue(node36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 973854177 + "'", int15 == 973854177);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertNotNull(astRoot29);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str33, "java.io.IOException: java.io.IOException: ");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(node36);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        astRoot0.setEncodedSourceBounds((int) 'a', (int) (short) 1);
        int int15 = astRoot0.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot24.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        astRoot24.addChildScope(scope31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str38 = scriptNode35.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope41, 25);
        java.lang.Object obj45 = scriptNode35.getProp(0);
        scope31.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode35);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        int int48 = astRoot0.getEncodedSourceStart();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 97 + "'", int48 == 97);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        scriptNode0.setPosition(13);
        java.lang.String str13 = scriptNode0.toSource();
        java.lang.String str14 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode0.getParent();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = scriptNode0.spliterator();
        java.lang.String str17 = scriptNode0.getNextTempName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor18 = scriptNode0.iterator();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(astNode15);
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$1" + "'", str17, "$1");
        org.junit.Assert.assertNotNull(nodeItor18);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node3 = scope2.getNext();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope2.putSymbol(symbol4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode1.getSymbols();
        scriptNode1.setBaseLineno(19);
        boolean boolean9 = scriptNode1.hasSideEffects();
        java.lang.String str11 = scriptNode1.toSource(0);
        com.google.javascript.rhino.head.Node node12 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-264283662), (com.google.javascript.rhino.head.Node) scriptNode1, (int) 'a');
        scriptNode1.setEncodedSourceBounds(917048139, 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertNotNull(node12);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        astRoot7.flattenSymbolTable(true);
        int int29 = astRoot7.getEndLineno();
        astRoot7.setPosition(5);
        int int32 = astRoot7.getAbsolutePosition();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-55137080), 374803108);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(221756510);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 221756510");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = astRoot1.getTop();
        scriptNode5.setRelative(26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        scriptNode5.target = astRoot9;
        com.google.javascript.rhino.head.ast.Scope scope11 = scriptNode5.getParentScope();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNull(scope11);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.setTop(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        scriptNode4.setCompilerData((java.lang.Object) scope7);
        scriptNode4.setEncodedSourceEnd(0);
        int int12 = scriptNode4.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getNextTempName();
        java.lang.String str16 = scriptNode14.debugPrint();
        scriptNode14.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        java.lang.String str22 = astRoot20.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode23.getSymbols();
        java.lang.String str25 = astRoot20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        int int37 = astRoot27.getRegexpCount();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot27, 550287075);
        com.google.javascript.rhino.head.Node node40 = astRoot20.target;
        java.lang.String str41 = astRoot20.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor42 = null;
        astRoot20.visitComments(nodeVisitor42);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((-2110645446), (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) astRoot20);
        int int45 = astRoot20.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = astRoot46.getAstRoot();
        boolean boolean48 = astRoot47.hasSideEffects();
        astRoot47.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator54 = scope53.spliterator();
        astRoot51.addChildScope(scope53);
        java.lang.String str57 = astRoot51.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment58 = null;
        astRoot51.setJsDocNode(comment58);
        int int60 = astRoot51.getType();
        java.lang.String str62 = astRoot51.toSource((int) (short) 1);
        astRoot47.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        astRoot20.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.Node node65 = astRoot51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode66.toSource(0);
        scriptNode66.removeProp((int) (short) 1);
        int int71 = scriptNode66.getEncodedSourceStart();
        scriptNode66.setSourceName("java.io.IOException: java.io.IOException");
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope(23);
        com.google.javascript.rhino.head.ast.Scope scope77 = scope75.getDefiningScope("");
        scriptNode66.target = scope75;
        int int79 = astRoot51.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope75);
        astRoot51.setBounds(688626213, (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str16, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "136" + "'", str22, "136");
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(astRoot47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 136 + "'", int60 == 136);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{\n}\n" + "'", str68, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(scope77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        scope11.setBounds((int) (byte) 0, (-738182430));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node18 = scope11.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode3.toSource(0);
        scriptNode3.clearParentScope();
        boolean boolean7 = scriptNode3.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scope11.spliterator();
        astRoot9.addChildScope(scope11);
        java.lang.String str15 = astRoot9.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        java.lang.String str18 = astRoot16.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode19.getSymbols();
        java.lang.String str21 = astRoot16.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope23.setTop(scriptNode25);
        java.lang.String str28 = scope23.toSource(12);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scope23);
        astRoot9.setBaseLineno(19);
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) astRoot9);
        astRoot9.removeChildren();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) astRoot9);
        astRoot9.checkParentLinks();
        // The following exception was thrown during execution in test generation
        try {
            astRoot9.setEndLineno((-1277086374));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\n}\n" + "'", str5, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "136" + "'", str18, "136");
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                        {\n                        }\n" + "'", str28, "                        {\n                        }\n");
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        boolean boolean3 = scope0.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scope5);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, scope4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scope4.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = scope4.getAstRoot();
        int int10 = scope4.depth();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = scope4.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertNull(astRoot9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        java.lang.String str16 = astRoot7.shortName();
        astRoot7.checkParentLinks();
        int int20 = astRoot7.getIntProp(1205984638, 32);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.visit(nodeVisitor21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AstRoot" + "'", str16, "AstRoot");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot1.getFunctions();
        astRoot1.checkParentLinks();
        boolean boolean7 = astRoot1.hasChildren();
        java.lang.String str8 = astRoot1.getEncodedSource();
        astRoot1.setEncodedSource("52\tSCRIPT 52 -36\n");
        com.google.javascript.rhino.head.ast.Symbol symbol12 = astRoot1.getSymbol("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(functionNodeList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(symbol12);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        int int31 = astRoot13.getParamCount();
        astRoot13.removeProp(21);
        int int34 = astRoot13.getAbsolutePosition();
        astRoot13.setEncodedSource("                  ");
        astRoot13.setLength(681237292);
        java.lang.String str39 = astRoot13.toSource();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setIdeMode(true);
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setIdeMode(true);
        boolean boolean16 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("$1");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        com.google.javascript.rhino.head.Node node5 = scriptNode3.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode3, 520361644);
        scriptNode3.setEndLineno(688626213);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int17 = scriptNode13.getIntProp((int) 'a', 19);
        scriptNode13.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode19.getSymbols();
        scriptNode13.setSymbols(symbolList20);
        scriptNode13.setPosition(0);
        int int24 = scriptNode3.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        astRoot28.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getNextTempName();
        com.google.javascript.rhino.head.Node node38 = scriptNode36.target;
        int int39 = scriptNode36.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node40 = scriptNode36.getLastChild();
        int int41 = scriptNode36.getEndLineno();
        astRoot28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap43 = astRoot28.getSymbolTable();
        boolean boolean44 = astRoot28.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = astRoot45.getAstRoot();
        java.lang.String str47 = astRoot46.shortName();
        java.lang.String str49 = astRoot46.toSource(1);
        java.lang.String str50 = astRoot46.getSourceName();
        astRoot28.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray54 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList55, symbolArray54);
        astRoot52.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList55);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        astRoot52.addChildScope(scope59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str66 = scriptNode63.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope69, 25);
        java.lang.Object obj73 = scriptNode63.getProp(0);
        scope59.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode63);
        astRoot28.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.ast.Comment comment76 = null;
        scriptNode63.setJsDocNode(comment76);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode3, (com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        node1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        // The following exception was thrown during execution in test generation
        try {
            node1.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 19 + "'", int17 == 19);
        org.junit.Assert.assertNotNull(symbolList20);
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1031237062 + "'", int24 == 1031237062);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(astRoot46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AstRoot" + "'", str47, "AstRoot");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(symbolArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("hi!", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("                          ");
        iOException5.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException7);
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.isIdeMode();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setXmlAvailable(false);
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        int int14 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastChild();
        int int16 = scriptNode11.getEndLineno();
        astRoot3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = astRoot3.getSymbolTable();
        int int19 = astRoot3.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor20 = null;
        astRoot3.visitComments(nodeVisitor20);
        int int22 = astRoot3.getEndLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot13.getAstRoot();
        java.lang.String str15 = astRoot14.shortName();
        java.lang.String str17 = astRoot14.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot14.getFunctions();
        astRoot14.checkParentLinks();
        boolean boolean20 = astRoot14.hasConsistentReturnUsage();
        int int21 = astRoot14.getRegexpCount();
        scriptNode3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = astRoot26.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray32 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList33, symbolArray32);
        scriptNode28.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = scriptNode28.getTop();
        scriptNode28.setSourceName("{\n}\n");
        int int39 = scriptNode28.getBaseLineno();
        java.lang.String str40 = scriptNode3.toStringTree(scriptNode28);
        scriptNode3.removeChildren();
        scriptNode3.setEncodedSource("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AstRoot" + "'", str15, "AstRoot");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(astNode27);
        org.junit.Assert.assertNotNull(symbolArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-684240317));
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-508712079));
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.setTop(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        scriptNode5.setCompilerData((java.lang.Object) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.debugPrint();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) astRoot12);
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray17 = astRoot12.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getEndLineno();
        java.lang.Object obj7 = astRoot5.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray8 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet9, commentArray8);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet9);
        com.google.javascript.rhino.head.Node node12 = astRoot5.getLastSibling();
        int int13 = node12.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        java.lang.String str21 = astRoot14.toSource(0);
        java.lang.String str23 = astRoot14.toSource(25);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope4, node12, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(26, node24, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope27 = node26.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(commentArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 136 + "'", int13 == 136);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode3.toSource(0);
        scriptNode3.clearParentScope();
        boolean boolean7 = scriptNode3.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scope11.spliterator();
        astRoot9.addChildScope(scope11);
        java.lang.String str15 = astRoot9.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        java.lang.String str18 = astRoot16.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode19.getSymbols();
        java.lang.String str21 = astRoot16.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope23.setTop(scriptNode25);
        java.lang.String str28 = scope23.toSource(12);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scope23);
        astRoot9.setBaseLineno(19);
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) astRoot9);
        astRoot9.removeChildren();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) astRoot9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        com.google.javascript.rhino.head.Node node37 = scriptNode35.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode35.getSymbols();
        astRoot9.setSymbols(symbolList38);
        int int40 = astRoot9.getEndLineno();
        int int41 = astRoot9.getRegexpCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\n}\n" + "'", str5, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "136" + "'", str18, "136");
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                        {\n                        }\n" + "'", str28, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        compilerEnvirons4.setErrorReporter(errorReporter10);
        compilerEnvirons0.setErrorReporter(errorReporter10);
        int int13 = compilerEnvirons0.getLanguageVersion();
        boolean boolean14 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setStrictMode(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        boolean boolean32 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean33 = compilerEnvirons0.isStrictMode();
        int int34 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        java.io.Reader reader36 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot39 = iRFactory35.parse(reader36, "-2\t    SCRIPT -1 1\n", (-455429316));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean10 = compilerEnvirons9.recoverFromErrors();
        compilerEnvirons9.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setWarnTrailingComma(true);
        boolean boolean16 = compilerEnvirons13.isRecordingLocalJsDocComments();
        compilerEnvirons13.setWarnTrailingComma(false);
        compilerEnvirons13.setAllowSharpComments(false);
        boolean boolean21 = compilerEnvirons13.isGenerateDebugInfo();
        compilerEnvirons13.setIdeMode(false);
        compilerEnvirons13.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons26.getErrorReporter();
        boolean boolean30 = compilerEnvirons26.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons13, errorReporter31);
        com.google.javascript.rhino.head.IRFactory iRFactory33 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter31);
        errorReporter31.warning("{\n}\n", "136", (int) (byte) 100, "hi!", 10);
        com.google.javascript.rhino.head.Parser parser40 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter31);
        boolean boolean41 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean42 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setRecoverFromErrors(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        astRoot10.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor16 = scriptNode1.iterator();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = scope19.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node23 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node24 = node23.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        node23.addChildToFront((com.google.javascript.rhino.head.Node) scope25);
        scope19.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode22, node23);
        int int28 = scriptNode22.getEncodedSourceEnd();
        scriptNode22.setSourceName("java.io.IOException: !");
        scriptNode1.putProp(362700701, (java.lang.Object) "java.io.IOException: !");
        scriptNode1.setRelative((-819749953));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(nodeItor16);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (byte) 0);
        java.lang.Object obj3 = astRoot1.getProp(7);
        boolean boolean4 = astRoot1.hasSideEffects();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        compilerEnvirons0.setIdeMode(true);
        boolean boolean13 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean14 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot0.target = astRoot7;
        com.google.javascript.rhino.head.Node node18 = astRoot7.getNext();
        astRoot7.removeProp((-61111));
        // The following exception was thrown during execution in test generation
        try {
            double double21 = astRoot7.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(node18);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.Node node34 = astRoot31.getFirstChild();
        astRoot21.putProp(2, (java.lang.Object) astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        boolean boolean39 = scope36.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope36, scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getEndLineno();
        java.lang.Object obj49 = astRoot47.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray50 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet51, commentArray50);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet51);
        astRoot47.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode55);
        astRoot45.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = astRoot45.getComments();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str66 = scriptNode65.getNextTempName();
        com.google.javascript.rhino.head.Node node67 = scriptNode65.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode65.getFunctions();
        int int69 = scriptNode65.getEncodedSourceEnd();
        java.lang.String str70 = scope40.toStringTree(scriptNode65);
        boolean boolean71 = scriptNode65.hasConsistentReturnUsage();
        scriptNode65.setEncodedSourceEnd((-1396439634));
        java.lang.String str75 = scriptNode65.toSource((-684240317));
        com.google.javascript.rhino.head.ast.AstNode astNode76 = scriptNode65.getParent();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(commentArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertNull(commentSet63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{\n}\n" + "'", str75, "{\n}\n");
        org.junit.Assert.assertNull(astNode76);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        int int3 = astRoot1.getLineno();
        java.lang.String str4 = astRoot1.getJsDoc();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean16 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.Context context17 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(0, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = astRoot5.getAstRoot();
        java.lang.String str7 = astRoot6.shortName();
        com.google.javascript.rhino.head.Node node8 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node9 = node8.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        node8.addChildToFront((com.google.javascript.rhino.head.Node) scope10);
        int int12 = scope10.getLineno();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scope10, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        astRoot6.addChildrenToFront((com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = astRoot6.new NodeIterator();
        com.google.javascript.rhino.head.Node node20 = nodeIterator19.next();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope23.setTop(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        scriptNode25.setCompilerData((java.lang.Object) scope28);
        scriptNode25.setEncodedSourceEnd(0);
        int int33 = scriptNode25.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getNextTempName();
        java.lang.String str37 = scriptNode35.debugPrint();
        scriptNode35.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getEndLineno();
        java.lang.Object obj52 = astRoot50.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        astRoot48.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        int int58 = astRoot48.getRegexpCount();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot48, 550287075);
        com.google.javascript.rhino.head.Node node61 = astRoot41.target;
        java.lang.String str62 = astRoot41.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor63 = null;
        astRoot41.visitComments(nodeVisitor63);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((-2110645446), (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) astRoot41);
        node20.addChildToFront((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.Node node67 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node68 = node67.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        node67.addChildToFront((com.google.javascript.rhino.head.Node) scope69);
        int int71 = scope69.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol73 = scope69.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node74 = scope69.getFirstChild();
        scope69.setLineno((-207329058));
        int int77 = scope69.getLineno();
        com.google.javascript.rhino.head.Node node78 = scope69.target;
        java.lang.String str79 = scope69.getJsDoc();
        scope69.removeChildren();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(968742650, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scope69);
        scope2.addChildToFront(node81);
        org.junit.Assert.assertNotNull(astRoot6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AstRoot" + "'", str7, "AstRoot");
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str37, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str62, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(symbol73);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-207329058) + "'", int77 == (-207329058));
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        astRoot2.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons16.getErrorReporter();
        boolean boolean20 = compilerEnvirons16.isGenerateObserverCount();
        compilerEnvirons16.setRecordingComments(true);
        boolean boolean23 = compilerEnvirons16.isGenerateObserverCount();
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons27.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons16, errorReporter30);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        java.lang.String str39 = astRoot34.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        int int43 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode37, (com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = astRoot44.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int61 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) astRoot53);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, 24);
        astRoot53.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = iRFactory31.transformTree(astRoot53);
        int int66 = astRoot53.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot8, 7);
        java.lang.String str71 = astRoot8.getNextTempName();
        boolean boolean72 = astRoot8.hasChildren();
        astRoot8.setLineno(1022253418);
        com.google.javascript.rhino.head.Node node75 = astRoot8.getLastChild();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(astRoot68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$1" + "'", str71, "$1");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(node75);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean21 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean23 = compilerEnvirons22.recoverFromErrors();
        int int24 = compilerEnvirons22.getLanguageVersion();
        compilerEnvirons22.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons27.getErrorReporter();
        boolean boolean31 = compilerEnvirons27.isGenerateObserverCount();
        boolean boolean32 = compilerEnvirons27.recoverFromErrors();
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons27.getActivationNames();
        boolean boolean34 = compilerEnvirons27.reportWarningAsError();
        compilerEnvirons27.setWarnTrailingComma(false);
        boolean boolean37 = compilerEnvirons27.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons27);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        int int42 = compilerEnvirons39.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons43.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons46 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons46.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter49 = compilerEnvirons46.getErrorReporter();
        compilerEnvirons43.setErrorReporter(errorReporter49);
        compilerEnvirons39.setErrorReporter(errorReporter49);
        com.google.javascript.rhino.head.Parser parser52 = new com.google.javascript.rhino.head.Parser(compilerEnvirons27, errorReporter49);
        compilerEnvirons22.setErrorReporter(errorReporter49);
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter49);
        errorReporter49.warning("-1\t  SCRIPT 0 1\n", "", 12, "                  {\n                  }\n", (-738182430));
        com.google.javascript.rhino.head.EvaluatorException evaluatorException66 = errorReporter49.runtimeError("                                    ", "8\tSCRIPT 8 1\n", (-1), "|", 852076584);
        java.io.IOException iOException68 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray69 = iOException68.getSuppressed();
        java.io.IOException iOException71 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray72 = iOException71.getSuppressed();
        iOException68.addSuppressed((java.lang.Throwable) iOException71);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons74 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons74.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter77 = compilerEnvirons74.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException83 = errorReporter77.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException84 = new java.io.IOException((java.lang.Throwable) evaluatorException83);
        iOException68.addSuppressed((java.lang.Throwable) evaluatorException83);
        java.io.IOException iOException87 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray88 = iOException87.getSuppressed();
        evaluatorException83.addSuppressed((java.lang.Throwable) iOException87);
        evaluatorException66.addSuppressed((java.lang.Throwable) iOException87);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(errorReporter49);
        org.junit.Assert.assertNotNull(evaluatorException66);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(errorReporter77);
        org.junit.Assert.assertNotNull(evaluatorException83);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope1.getSymbol("-1\t  BLOCK 0 1\n");
        scope1.setLength(653625563);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = astRoot14.getTop();
        int int18 = astRoot14.getParamCount();
        boolean boolean19 = astRoot14.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = astRoot14.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol22 = astRoot14.getSymbol("                                    ");
        boolean boolean23 = astRoot14.isInStrictMode();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot14);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(symbol22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = scope10.spliterator();
        astRoot8.addChildScope(scope10);
        java.lang.String str14 = astRoot8.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment15 = null;
        astRoot8.setJsDocNode(comment15);
        astRoot8.setEncodedSourceStart(4);
        astRoot8.removeChildren();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot8);
        int int21 = astRoot8.depth();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor22 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot8.visitAll(nodeVisitor22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = astRoot12.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        boolean boolean21 = scope18.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope18, scope22);
        astRoot12.replaceWith(scope18);
        int int27 = astRoot12.getEncodedSourceEnd();
        scriptNode5.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        astRoot12.setEncodedSourceBounds(8, 1471166993);
        int int32 = astRoot12.getEndLineno();
        int int33 = astRoot12.getEndLineno();
        astRoot12.removeChildren();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scopeList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean2 = astRoot1.hasSideEffects();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor3 = astRoot1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setDouble((double) (-1041003650));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(nodeItor3);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        scope3.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.Node node7 = scope3.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope3.getSymbolTable();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scope3, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((-791970984), node1, node10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = astRoot35.getSymbol("14");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor38 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot35.visitAll(nodeVisitor38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertNull(symbol37);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = scriptNode4.getExistingIntProp(97531394);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot0.getAstRoot();
        java.lang.String str10 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.debugPrint();
        astRoot12.clearParentScope();
        java.lang.Object obj16 = astRoot12.getCompilerData();
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        int int18 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray10 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList11, symbolArray10);
        scriptNode6.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode6.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor17 = null;
        astRoot16.visitComments(nodeVisitor17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray22 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList23, symbolArray22);
        astRoot20.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList23);
        boolean boolean26 = astRoot20.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setWarnTrailingComma(true);
        boolean boolean30 = compilerEnvirons27.isRecordingLocalJsDocComments();
        compilerEnvirons27.setWarnTrailingComma(false);
        compilerEnvirons27.setAllowSharpComments(false);
        boolean boolean35 = compilerEnvirons27.isGenerateDebugInfo();
        astRoot20.setCompilerData((java.lang.Object) boolean35);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot20);
        astRoot16.addChildrenToBack(node37);
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getEndLineno();
        java.lang.Object obj42 = astRoot40.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol44 = astRoot40.getSymbol("java.io.IOException: ");
        astRoot40.setSourceName("java.io.IOException: ");
        boolean boolean47 = astRoot40.isInStrictMode();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot40);
        astRoot40.setPosition(19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int61 = astRoot53.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot53, scope62);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope62);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        boolean boolean69 = scope66.hasSideEffects();
        int int70 = scope62.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope66);
        java.lang.String str72 = scope62.toSource(19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int74 = astRoot73.getParamCount();
        astRoot73.setEndLineno((int) (byte) 100);
        java.lang.String str78 = astRoot73.toSource((int) (short) 0);
        astRoot73.setInStrictMode(false);
        scope62.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot73);
        astRoot40.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot73);
        astRoot40.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int86 = astRoot40.addFunction(functionNode85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNotNull(symbolArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(symbolArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1339753951 + "'", int70 == 1339753951);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                                      {\n                                      }\n" + "'", str72, "                                      {\n                                      }\n");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        int int6 = astRoot1.depth();
        astRoot1.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node9 = astRoot1.target;
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot35.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getNextTempName();
        com.google.javascript.rhino.head.Node node45 = scriptNode43.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode43.getFunctions();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode43);
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot35);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = astRoot12.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(functionNodeList46);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        int int34 = astRoot21.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = astRoot21.getStatements();
        int int44 = astRoot21.depth();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(astNodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        com.google.javascript.rhino.head.ast.Comment comment3 = null;
        scriptNode0.setJsDocNode(comment3);
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getLastSibling();
        scriptNode0.setRelative(1471166993);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray17 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList18, symbolArray17);
        scriptNode13.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList18);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode13.getSymbols();
        scriptNode13.setRelative(953557037);
        java.lang.String str24 = scriptNode13.getNextTempName();
        java.lang.String str25 = scriptNode13.getNextTempName();
        int int26 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump27 = scriptNode13.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertNotNull(symbolArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$1" + "'", str25, "$1");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator16 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        int int26 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode20, (com.google.javascript.rhino.head.ast.AstNode) scope23);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode31.getSymbols();
        java.lang.String str33 = astRoot28.toStringTree(scriptNode31);
        astRoot28.checkParentLinks();
        int int37 = astRoot28.getIntProp(11, 32);
        int int38 = astRoot28.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode39.toSource(0);
        scriptNode39.clearParentScope();
        boolean boolean43 = scriptNode39.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap44 = null;
        scriptNode39.setSymbolTable(strMap44);
        int int46 = scriptNode39.getRegexpCount();
        int int47 = scriptNode39.getRegexpCount();
        astRoot28.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.Node node49 = scriptNode39.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = astRoot50.getTop();
        int int54 = astRoot50.getParamCount();
        boolean boolean55 = astRoot50.hasConsistentReturnUsage();
        astRoot50.setEncodedSourceStart(520361644);
        astRoot50.setEncodedSourceStart((-78159348));
        int int60 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode39, (com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.Scope scope61 = scriptNode39.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = scriptNode39.getParamOrVarName((-253295711));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(symbolList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{\n}\n" + "'", str41, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(scope61);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        java.lang.String str10 = astRoot0.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = null;
        astRoot0.setSymbolTable(strMap11);
        int int13 = astRoot0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot((-236001159));
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot(6);
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.ast.Scope scope21 = astRoot0.getEnclosingScope();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope21);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean11 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGenerateObserverCount(false);
        com.google.javascript.rhino.head.IRFactory iRFactory14 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.lang.String str33 = astRoot27.toSource(9);
        scriptNode18.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot27);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot27.getSymbolTable();
        com.google.javascript.rhino.head.Node node36 = iRFactory14.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(node36);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        boolean boolean33 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean35 = compilerEnvirons34.recoverFromErrors();
        int int36 = compilerEnvirons34.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons34.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter37);
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateDebugInfo(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(errorReporter39);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean7 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        iOException7.addSuppressed((java.lang.Throwable) iOException10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons13.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException22 = errorReporter16.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) evaluatorException22);
        iOException7.addSuppressed((java.lang.Throwable) evaluatorException22);
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray27 = iOException26.getSuppressed();
        evaluatorException22.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException: java.io.IOException:   {\n  }\n", (java.lang.Throwable) evaluatorException22);
        iOException2.addSuppressed((java.lang.Throwable) iOException29);
        java.lang.String str31 = iOException2.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertNotNull(evaluatorException22);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "java.io.IOException:   {\n  }\n" + "'", str31, "java.io.IOException:   {\n  }\n");
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        boolean boolean35 = compilerEnvirons32.isRecordingLocalJsDocComments();
        compilerEnvirons32.setWarnTrailingComma(false);
        compilerEnvirons32.setAllowSharpComments(false);
        boolean boolean40 = compilerEnvirons32.isGenerateDebugInfo();
        compilerEnvirons32.setIdeMode(false);
        compilerEnvirons32.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        boolean boolean49 = compilerEnvirons45.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons32, errorReporter50);
        com.google.javascript.rhino.head.IRFactory iRFactory52 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = iRFactory52.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = astRoot56.getSymbolTable();
        boolean boolean59 = astRoot56.isInStrictMode();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = positionComparator3.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = astNodeComparator20.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertNotNull(astNodeComparator21);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = scriptNode1.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.setEncodedSource("java.io.IOException: -1\t  BLOCK 0 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astRoot2);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons0.reportWarningAsError();
        boolean boolean14 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean16 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        boolean boolean11 = compilerEnvirons7.isGenerateObserverCount();
        boolean boolean12 = compilerEnvirons7.recoverFromErrors();
        compilerEnvirons7.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7);
        boolean boolean16 = compilerEnvirons7.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        boolean boolean21 = compilerEnvirons17.isRecordingComments();
        boolean boolean22 = compilerEnvirons17.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons17.getErrorReporter();
        errorReporter23.warning("                                                  ", "2\tBLOCK 2 -1\n", 653625563, "java.io.IOException", 1159083728);
        com.google.javascript.rhino.head.IRFactory iRFactory30 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons7, errorReporter23);
        com.google.javascript.rhino.head.Parser parser31 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter23);
        boolean boolean32 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        astRoot0.setSourceName("                          ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot0.getAstRoot();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(astRoot13);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean12 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.Parser parser13 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.util.Set<java.lang.String> strSet14 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(strSet14);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException:                                                                 ");
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        com.google.javascript.rhino.head.Node node11 = astRoot4.getLastSibling();
        int int12 = node11.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        java.lang.String str20 = astRoot13.toSource(0);
        java.lang.String str22 = astRoot13.toSource(25);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope3, node11, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.Scope scope24 = astRoot13.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scope24.clearParentScope();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(scope24);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        java.lang.String str10 = astRoot0.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = null;
        astRoot0.setSymbolTable(strMap11);
        boolean boolean13 = astRoot0.hasSideEffects();
        astRoot0.putIntProp((-236001159), 1226292138);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        compilerEnvirons0.setStrictMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.isRecordingLocalJsDocComments();
        compilerEnvirons18.setWarnTrailingComma(false);
        compilerEnvirons18.setAllowSharpComments(false);
        boolean boolean26 = compilerEnvirons18.isGenerateDebugInfo();
        compilerEnvirons18.setIdeMode(false);
        compilerEnvirons18.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons31.getErrorReporter();
        boolean boolean35 = compilerEnvirons31.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter36 = compilerEnvirons31.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser37 = new com.google.javascript.rhino.head.Parser(compilerEnvirons18, errorReporter36);
        errorReporter36.warning("-1\t  BLOCK 0 1\n", "java.io.IOException: java.io.IOException: ", 11, "  {\n  }\n", (int) '4');
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter36);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        boolean boolean47 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorReporter36);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException20 = errorReporter14.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter14.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter14);
        compilerEnvirons0.setGenerateObserverCount(false);
        boolean boolean30 = compilerEnvirons0.isGeneratingSource();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertNotNull(evaluatorException20);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        scriptNode5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode5.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor16 = null;
        astRoot15.visitComments(nodeVisitor16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        boolean boolean25 = astRoot19.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isGenerateDebugInfo();
        astRoot19.setCompilerData((java.lang.Object) boolean34);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot19);
        astRoot15.addChildrenToBack(node36);
        scriptNode5.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor39 = null;
        astRoot15.visitComments(nodeVisitor39);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str5 = astRoot2.toSource(1);
        java.lang.Object obj6 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot2.getAstRoot();
        astRoot2.setEncodedSource("775058292");
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = astRoot10.getAstRoot();
        java.lang.String str12 = astRoot11.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = astRoot11.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray16 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList17, symbolArray16);
        astRoot14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList17);
        scriptNode13.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList17);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode26.toSource(0);
        scriptNode26.setEncodedSourceBounds(12, 10);
        scriptNode24.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        java.lang.String str33 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot34.getAstRoot();
        java.lang.String str36 = astRoot35.shortName();
        java.lang.String str38 = astRoot35.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = astRoot35.getFunctions();
        astRoot35.checkParentLinks();
        boolean boolean41 = astRoot35.hasConsistentReturnUsage();
        int int42 = astRoot35.getRegexpCount();
        scriptNode24.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode48 = astRoot47.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode49.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray53 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList54, symbolArray53);
        scriptNode49.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode49.getTop();
        scriptNode49.setSourceName("{\n}\n");
        int int60 = scriptNode49.getBaseLineno();
        java.lang.String str61 = scriptNode24.toStringTree(scriptNode49);
        scriptNode13.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode49);
        node63.setLineno((-207088395));
        com.google.javascript.rhino.head.Node node66 = node63.getFirstChild();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor67 = node66.iterator();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertNotNull(astRoot11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AstRoot" + "'", str12, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(symbolArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{\n}\n" + "'", str28, "{\n}\n");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AstRoot" + "'", str36, "AstRoot");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(astNode48);
        org.junit.Assert.assertNotNull(symbolArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(nodeItor67);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        int int12 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        boolean boolean35 = compilerEnvirons32.isRecordingLocalJsDocComments();
        compilerEnvirons32.setWarnTrailingComma(false);
        compilerEnvirons32.setAllowSharpComments(false);
        boolean boolean40 = compilerEnvirons32.isGenerateDebugInfo();
        compilerEnvirons32.setIdeMode(false);
        compilerEnvirons32.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        boolean boolean49 = compilerEnvirons45.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons32, errorReporter50);
        com.google.javascript.rhino.head.IRFactory iRFactory52 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = iRFactory52.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        int int61 = scriptNode58.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node62 = scriptNode58.getLastChild();
        scriptNode58.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = null;
        scriptNode58.setSymbolTable(strMap65);
        astRoot56.setTop(scriptNode58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = scriptNode58.getTop();
        int int69 = scriptNode68.getEndLineno();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        int int8 = astRoot1.getLineno();
        int int11 = astRoot1.getIntProp((-236001159), 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor12 = null;
        astRoot1.visitComments(nodeVisitor12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = astRoot1.new NodeIterator();
        boolean boolean15 = nodeIterator14.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        int int30 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode24, (com.google.javascript.rhino.head.ast.AstNode) scope27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator20);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator34 = positionComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int47 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot38, (com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        java.lang.String str51 = astRoot49.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode52.getSymbols();
        java.lang.String str54 = astRoot49.toStringTree(scriptNode52);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        int int58 = positionComparator48.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode52, (com.google.javascript.rhino.head.ast.AstNode) scope55);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator59 = positionComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator48);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator60 = positionComparator20.thenComparing(astNodeComparator59);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator61 = positionComparator20.reversed();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str64 = astRoot63.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode66 = astRoot65.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) astRoot65, (com.google.javascript.rhino.head.Node) scriptNode67);
        astRoot65.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str74 = scriptNode73.getNextTempName();
        com.google.javascript.rhino.head.Node node75 = scriptNode73.target;
        int int76 = scriptNode73.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node77 = scriptNode73.getLastChild();
        int int78 = scriptNode73.getEndLineno();
        astRoot65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap80 = astRoot65.getSymbolTable();
        int int81 = astRoot65.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope();
        scope82.addChild((com.google.javascript.rhino.head.ast.AstNode) scope83);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope83.setTop(scriptNode85);
        com.google.javascript.rhino.head.ast.Scope scope87 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope88 = new com.google.javascript.rhino.head.ast.Scope();
        scope87.addChild((com.google.javascript.rhino.head.ast.AstNode) scope88);
        scriptNode85.setCompilerData((java.lang.Object) scope88);
        com.google.javascript.rhino.head.ast.AstRoot astRoot91 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot92 = astRoot91.getAstRoot();
        java.lang.String str93 = astRoot92.shortName();
        java.lang.String str94 = astRoot92.debugPrint();
        scope88.addChildToFront((com.google.javascript.rhino.head.Node) astRoot92);
        int int96 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot65, (com.google.javascript.rhino.head.ast.AstNode) astRoot92);
        astRoot92.removeChildren();
        int int98 = astRoot92.getPosition();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertNotNull(astNodeComparator34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "136" + "'", str51, "136");
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator59);
        org.junit.Assert.assertNotNull(astNodeComparator60);
        org.junit.Assert.assertNotNull(astNodeComparator61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertNull(astNode66);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(astRoot92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "AstRoot" + "'", str93, "AstRoot");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str94, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        int int11 = astRoot3.depth();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        com.google.javascript.rhino.head.ast.Comment comment18 = null;
        scriptNode16.setJsDocNode(comment18);
        int int20 = scriptNode16.getLineno();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode16);
        boolean boolean22 = scriptNode16.hasSideEffects();
        astRoot3.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        scriptNode16.setEncodedSourceStart((-1136204374));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        astRoot0.checkParentLinks();
        astRoot0.setEndLineno((int) (short) 10);
        int int10 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment11 = null;
        astRoot0.setJsDocNode(comment11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scope5);
        int int7 = scope5.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope5.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int12 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope5, (com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot14);
        astRoot14.flattenSymbolTable(false);
        astRoot14.setEncodedSource("-1\tLE -1 1\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getParamCount();
        astRoot26.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot26.getAstRoot();
        java.lang.String str31 = astRoot30.shortName();
        astRoot30.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor33 = null;
        astRoot30.visitComments(nodeVisitor33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(3);
        com.google.javascript.rhino.head.ast.Symbol symbol38 = scriptNode36.getSymbol("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = astRoot43.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int49 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot41, scope50);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope50);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = scope58.spliterator();
        astRoot56.addChildScope(scope58);
        java.lang.String str62 = astRoot56.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str64 = astRoot63.getNextTempName();
        java.lang.String str65 = astRoot63.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode66.getSymbols();
        java.lang.String str68 = astRoot63.toStringTree(scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        scope69.addChild((com.google.javascript.rhino.head.ast.AstNode) scope70);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope70.setTop(scriptNode72);
        java.lang.String str75 = scope70.toSource(12);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode66, (com.google.javascript.rhino.head.Node) scope70);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot30, scope70);
        int int78 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot30);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = astRoot14.getChildScopes();
        astRoot14.putIntProp((int) ' ', (int) (short) 10);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-12) + "'", int12 == (-12));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AstRoot" + "'", str31, "AstRoot");
        org.junit.Assert.assertNull(symbol38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "136" + "'", str65, "136");
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                        {\n                        }\n" + "'", str75, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(scopeList79);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        scriptNode4.flattenSymbolTable(false);
        int int12 = scriptNode4.getType();
        java.lang.String str13 = scriptNode4.toString();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scriptNode4.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        astRoot15.checkParentLinks();
        int int24 = astRoot15.getIntProp(11, 32);
        scriptNode4.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot15);
        com.google.javascript.rhino.head.Node node27 = scriptNode4.setType(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode4.getTop();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "136" + "'", str13, "136");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(scriptNode28);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = astRoot16.getAstRoot();
        java.lang.String str18 = astRoot17.shortName();
        java.lang.String str19 = astRoot17.debugPrint();
        com.google.javascript.rhino.head.Node node20 = astRoot17.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = astRoot17.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope23.setTop(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        scriptNode25.setCompilerData((java.lang.Object) scope28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = astRoot31.getAstRoot();
        java.lang.String str33 = astRoot32.shortName();
        java.lang.String str34 = astRoot32.debugPrint();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) astRoot32);
        astRoot17.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot32);
        scriptNode11.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot32);
        astRoot32.setPosition(688626213);
        com.google.javascript.rhino.head.ast.Scope scope41 = astRoot32.getDefiningScope("$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertNotNull(astRoot17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AstRoot" + "'", str18, "AstRoot");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str19, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AstRoot" + "'", str33, "AstRoot");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(scope41);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot1.getSymbol("java.io.IOException: ");
        astRoot1.setEncodedSourceStart(0);
        java.lang.String str9 = astRoot1.makeIndent(13);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        boolean boolean14 = scope11.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = scope25.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node29 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node30 = node29.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        node29.addChildToFront((com.google.javascript.rhino.head.Node) scope31);
        scope25.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode28, node29);
        scriptNode28.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator40 = scope38.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node43 = node42.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        node42.addChildToFront((com.google.javascript.rhino.head.Node) scope44);
        scope38.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode41, node42);
        int int47 = scriptNode41.getEncodedSourceEnd();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(79606921, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot1.getComments();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                          " + "'", str9, "                          ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(commentSet50);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1359343000));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        int int34 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setXmlAvailable(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = astRoot1.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        astRoot10.addChildScope(scope12);
        java.lang.String str16 = astRoot10.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope24.setTop(scriptNode26);
        java.lang.String str29 = scope24.toSource(12);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot32, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = astRoot32.getComments();
        node30.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.Node node38 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator39 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator41 = positionComparator39.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator40);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node43 = node42.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        node42.addChildToFront((com.google.javascript.rhino.head.Node) scope44);
        int int46 = scope44.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol48 = scope44.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int51 = positionComparator40.compare((com.google.javascript.rhino.head.ast.AstNode) scope44, (com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        node38.addChildToFront((com.google.javascript.rhino.head.Node) astRoot50);
        com.google.javascript.rhino.head.Node node53 = astRoot50.getLastSibling();
        boolean boolean54 = astRoot50.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot50);
        com.google.javascript.rhino.head.ast.Scope scope57 = astRoot50.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode59.toSource(0);
        scriptNode59.removeProp((int) (short) 1);
        int int64 = scriptNode59.getEncodedSourceStart();
        scriptNode59.setSourceName("java.io.IOException: java.io.IOException");
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope(23);
        com.google.javascript.rhino.head.ast.Scope scope70 = scope68.getDefiningScope("");
        scriptNode59.target = scope68;
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(526823265, (com.google.javascript.rhino.head.Node) scope68);
        com.google.javascript.rhino.head.Node node73 = null;
        astRoot50.addChildBefore((com.google.javascript.rhino.head.Node) scope68, node73);
        astRoot1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor76 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot50.visit(nodeVisitor76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                        {\n                        }\n" + "'", str29, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(commentSet36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(astNodeComparator41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(symbol48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-12) + "'", int51 == (-12));
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scope70);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        astRoot50.setRelative(550287075);
        int int54 = astRoot50.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node55 = astRoot50.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope56 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-496651501) + "'", int51 == (-496651501));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(node55);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        int int5 = astRoot2.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) astRoot2);
        java.lang.String str8 = astRoot2.toSource((-138693843));
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        astRoot0.setEncodedSourceStart(0);
        java.lang.String str8 = astRoot0.makeIndent(13);
        astRoot0.setEncodedSourceEnd(11);
        java.lang.String str11 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.Node node12 = astRoot0.getLastSibling();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                          " + "'", str8, "                          ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str11, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node12);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean2 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.Parser parser3 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = parser3.parse("26\tSCRIPT 26 1\n", "-", 1189996818);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(astRoot7);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setIdeMode(false);
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot15 = iRFactory11.parse("\210", "|", 488584366);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: illegal character (|#488584366)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        boolean boolean14 = astRoot10.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = astRoot10.getFunctions();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(functionNodeList15);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-931941363));
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node4 = scriptNode0.getLastChild();
        scriptNode0.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = null;
        scriptNode0.setSymbolTable(strMap7);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        compilerEnvirons9.setRecordingComments(true);
        boolean boolean16 = compilerEnvirons9.isGenerateObserverCount();
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int34 = astRoot26.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot26, scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = iRFactory24.transformTree(astRoot26);
        scriptNode38.removeChildren();
        scriptNode38.setEncodedSourceStart(1942790351);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = scriptNode0.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node44 = scriptNode0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNotNull(astNodeList43);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        astRoot13.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getEndLineno();
        java.lang.Object obj38 = astRoot36.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray39 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet40 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet40, commentArray39);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet40);
        astRoot36.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList47 = scriptNode44.getFunctions();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) scriptNode44);
        astRoot13.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot36);
        int int50 = astRoot36.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode55 = astRoot54.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int60 = astRoot52.getParamCount();
        java.lang.String str61 = astRoot52.debugPrint();
        boolean boolean62 = astRoot52.isInStrictMode();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot52, (-2110645446));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int66 = astRoot36.addFunction(functionNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(commentArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(functionNodeList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str61, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        java.lang.String str30 = scriptNode28.debugPrint();
        scriptNode28.setLineno((int) (byte) -1);
        scriptNode28.flattenSymbolTable(true);
        astRoot23.setTop(scriptNode28);
        astRoot23.clearParentScope();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        boolean boolean38 = astRoot1.isInStrictMode();
        java.lang.Object obj40 = astRoot1.getProp(328069054);
        java.lang.String str41 = astRoot1.getJsDoc();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        boolean boolean19 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean20 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        int int21 = compilerEnvirons0.getLanguageVersion();
        boolean boolean22 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = parser6.parse("$1", "                  ", (int) (short) 1);
        int int11 = astRoot10.getBaseLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = scriptNode26.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str33 = astRoot31.getSourceName();
        astRoot31.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot31.getSymbolTable();
        java.lang.String str37 = astRoot31.makeIndent(32);
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) astRoot31);
        astRoot1.flattenSymbolTable(false);
        astRoot1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.Node node46 = scope44.getFirstChild();
        java.lang.String str47 = scope44.debugPrint();
        astRoot1.setParentScope(scope44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        java.lang.String str51 = astRoot49.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = astRoot49.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = astRoot49.getChildScopes();
        boolean boolean54 = astRoot49.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = astRoot49.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = scope58.spliterator();
        astRoot56.addChildScope(scope58);
        java.lang.String str62 = astRoot56.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int64 = astRoot63.getEndLineno();
        java.lang.Object obj65 = astRoot63.getCompilerData();
        astRoot56.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot63);
        astRoot63.setPosition(25);
        java.lang.String str70 = astRoot63.toSource(17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator71 = astRoot63.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList72 = astRoot63.getFunctions();
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) astRoot63);
        int int74 = astRoot63.getEndLineno();
        java.lang.String str75 = astRoot63.getSourceName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                " + "'", str37, "                                                                ");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1\t  BLOCK 0 1\n" + "'", str47, "-1\t  BLOCK 0 1\n");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "136" + "'", str51, "136");
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(functionNodeList72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment24 = null;
        astRoot17.setJsDocNode(comment24);
        astRoot17.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean30 = astRoot29.hasSideEffects();
        int int31 = astRoot29.getParamCount();
        astRoot17.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode33.toSource(0);
        scriptNode33.setEncodedSourceBounds(12, 10);
        scriptNode33.setSourceName("");
        astRoot17.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray44 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList45, symbolArray44);
        astRoot42.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList45);
        boolean boolean48 = astRoot42.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot42.getSymbolTable();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot42);
        java.lang.String str51 = astRoot42.debugPrint();
        boolean boolean52 = astRoot42.isInStrictMode();
        int int53 = astRoot42.getEncodedSourceStart();
        boolean boolean54 = astRoot42.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{\n}\n" + "'", str35, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(symbolArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str51, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons1.getActivationNames();
        boolean boolean5 = compilerEnvirons1.recoverFromErrors();
        boolean boolean6 = compilerEnvirons1.getWarnTrailingComma();
        boolean boolean7 = compilerEnvirons1.isIdeMode();
        boolean boolean8 = compilerEnvirons1.isRecordingLocalJsDocComments();
        boolean boolean9 = compilerEnvirons1.isIdeMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        java.lang.String[] strArray22 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet23);
        boolean boolean26 = compilerEnvirons10.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10);
        compilerEnvirons10.setAllowMemberExprAsFunctionName(false);
        boolean boolean30 = compilerEnvirons10.isGeneratingSource();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "$1", "{\n}\n", "                                                                ", "java.io.IOException: 136", "Scope", "ScriptNode", "136", "java.io.IOException: ", "                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n", "$1", "ScriptNode", "/=", "                          ", "                                                                " };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet47);
        compilerEnvirons1.setActivationNames((java.util.Set<java.lang.String>) strSet47);
        com.google.javascript.rhino.head.IRFactory iRFactory51 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        int int62 = astRoot52.getRegexpCount();
        com.google.javascript.rhino.head.Node node63 = astRoot52.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = astRoot52.getSymbolTable();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor65 = null;
        astRoot52.visitComments(nodeVisitor65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = iRFactory51.transformTree(astRoot52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str70 = astRoot69.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode72 = astRoot71.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode73.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) astRoot71, (com.google.javascript.rhino.head.Node) scriptNode73);
        java.lang.String str77 = astRoot71.shortName();
        astRoot71.setInStrictMode(true);
        astRoot71.setBaseLineno(0);
        java.lang.String str83 = astRoot71.toSource((-1668176296));
        java.lang.String str85 = astRoot71.toSource((-1660235791));
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node((-455429316), (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot71, (-853063820));
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "$0" + "'", str70, "$0");
        org.junit.Assert.assertNull(astNode72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "AstRoot" + "'", str77, "AstRoot");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-514716900));
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setXmlAvailable(false);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean10 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int16 = astRoot8.getParamCount();
        java.lang.String str17 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot30.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        astRoot53.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode61);
        astRoot30.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        astRoot53.setEncodedSourceBounds((int) (short) -1, 13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor71 = null;
        astRoot53.visitComments(nodeVisitor71);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode76.toSource(0);
        scriptNode76.removeProp((int) (short) 1);
        int int81 = scriptNode76.getEncodedSourceStart();
        scriptNode76.putIntProp(526823265, (-11));
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode75, (com.google.javascript.rhino.head.ast.Scope) scriptNode76);
        astRoot53.putProp(170, (java.lang.Object) scriptNode75);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor87 = scriptNode75.iterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{\n}\n" + "'", str78, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(nodeItor87);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot1.getSymbol("java.io.IOException: ");
        astRoot1.setEncodedSourceStart(0);
        java.lang.String str9 = astRoot1.makeIndent(13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray14 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList15, symbolArray14);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        astRoot12.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode33.getFunctions();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int38 = astRoot23.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node41 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scope53.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        scope53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode56, node57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        java.lang.String str64 = node57.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        java.lang.String str65 = astRoot62.getNextTempName();
        boolean boolean66 = astRoot62.hasSideEffects();
        java.lang.String str68 = astRoot62.toSource(100);
        node41.addChildAfter((com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot62);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot42);
        int int71 = astRoot42.getType();
        java.lang.String str72 = astRoot42.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str74 = scriptNode73.getNextTempName();
        com.google.javascript.rhino.head.Node node75 = scriptNode73.target;
        int int76 = scriptNode73.getBaseLineno();
        int int77 = scriptNode73.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol symbol79 = scriptNode73.getSymbol("{\n}\n");
        java.lang.String str80 = scriptNode73.shortName();
        int int81 = astRoot42.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = null;
        astRoot42.setSymbols(symbolList82);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = astRoot42.getTop();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                          " + "'", str9, "                          ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(symbolArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 136 + "'", int71 == 136);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(symbol79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ScriptNode" + "'", str80, "ScriptNode");
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1585588157) + "'", int81 == (-1585588157));
        org.junit.Assert.assertNotNull(scriptNode84);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGeneratingSource();
        boolean boolean22 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.IRFactory iRFactory25 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean26 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-1268796928));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -1268796928");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        astRoot0.setLineno((-3));
        astRoot0.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.clearParentScope();
        boolean boolean18 = scriptNode14.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = scope22.spliterator();
        astRoot20.addChildScope(scope22);
        java.lang.String str26 = astRoot20.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        java.lang.String str29 = astRoot27.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode30.getSymbols();
        java.lang.String str32 = astRoot27.toStringTree(scriptNode30);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.lang.String str39 = scope34.toSource(12);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope34);
        astRoot20.setBaseLineno(19);
        scriptNode14.addChildToBack((com.google.javascript.rhino.head.Node) astRoot20);
        astRoot20.removeChildren();
        scope13.addChildToFront((com.google.javascript.rhino.head.Node) astRoot20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode46.getSymbols();
        com.google.javascript.rhino.head.Node node48 = scriptNode46.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode46.getSymbols();
        astRoot20.setSymbols(symbolList49);
        astRoot0.setSymbols(symbolList49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = astRoot0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertNotNull(symbolList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                        {\n                        }\n" + "'", str39, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(symbolList49);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getEndLineno();
        java.lang.Object obj38 = astRoot36.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray39 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet40 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet40, commentArray39);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet40);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator48 = scope47.spliterator();
        astRoot45.addChildScope(scope47);
        java.lang.String str51 = astRoot45.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        java.lang.String str54 = astRoot52.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode55.getSymbols();
        java.lang.String str57 = astRoot52.toStringTree(scriptNode55);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope59.setTop(scriptNode61);
        java.lang.String str64 = scope59.toSource(12);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot67, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = astRoot67.getComments();
        node65.addChildToBack((com.google.javascript.rhino.head.Node) astRoot67);
        com.google.javascript.rhino.head.Node node73 = astRoot67.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator74 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator75 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator76 = positionComparator74.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator75);
        com.google.javascript.rhino.head.Node node77 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node78 = node77.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        node77.addChildToFront((com.google.javascript.rhino.head.Node) scope79);
        int int81 = scope79.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = scope79.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int86 = positionComparator75.compare((com.google.javascript.rhino.head.ast.AstNode) scope79, (com.google.javascript.rhino.head.ast.AstNode) astRoot85);
        node73.addChildToFront((com.google.javascript.rhino.head.Node) astRoot85);
        com.google.javascript.rhino.head.ast.AstRoot astRoot88 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int89 = astRoot88.getEndLineno();
        java.lang.Object obj90 = astRoot88.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray91 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet92 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet92, commentArray91);
        astRoot88.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet92);
        astRoot85.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet92);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet92);
        astRoot33.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot34);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump98 = astRoot33.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(commentArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "136" + "'", str54, "136");
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                        {\n                        }\n" + "'", str64, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertNull(commentSet71);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(astNodeComparator76);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(symbol83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-12) + "'", int86 == (-12));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(commentArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1796887248);
        int int2 = scope1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump3 = scope1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.Node node33 = astRoot30.getFirstChild();
        astRoot20.putProp(2, (java.lang.Object) astRoot30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot36, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet40 = astRoot36.getComments();
        com.google.javascript.rhino.head.Node node41 = astRoot36.getFirstChild();
        java.lang.String str42 = astRoot20.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot36);
        int int43 = astRoot36.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode44.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            astRoot36.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(commentSet40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(symbolList46);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        astRoot0.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean13 = astRoot12.hasSideEffects();
        int int14 = astRoot12.getParamCount();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray19 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList20, symbolArray19);
        astRoot17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList20);
        boolean boolean23 = astRoot17.hasConsistentReturnUsage();
        astRoot17.setLineno((-3));
        astRoot17.setLength(13);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((-134670566), (com.google.javascript.rhino.head.Node) astRoot17, 6);
        com.google.javascript.rhino.head.Node node30 = astRoot17.getNext();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap31 = astRoot17.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = astRoot17.getAstRoot();
        astRoot12.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = astRoot37.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray43 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList44, symbolArray43);
        scriptNode39.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode39.getSymbols();
        scriptNode39.setRelative(953557037);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = scriptNode39.getTop();
        astRoot17.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(astNode38);
        org.junit.Assert.assertNotNull(symbolArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNotNull(scriptNode50);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean59 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(653625563);
        node1.putIntProp(0, 1078815113);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean11 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGenerateObserverCount(false);
        com.google.javascript.rhino.head.IRFactory iRFactory14 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean17 = compilerEnvirons0.recoverFromErrors();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Comment comment8 = astRoot0.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            comment8.putIntProp(639708273, 297144608);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(comment8);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.removeProp(8);
        com.google.javascript.rhino.head.ast.Scope scope31 = astRoot1.getParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor32 = null;
        astRoot1.visitComments(nodeVisitor32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode34.getFunctions();
        int int38 = scriptNode34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        int int43 = scriptNode39.getEncodedSourceEnd();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int54 = astRoot46.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot46, scope55);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = astRoot46.getSymbolTable();
        scriptNode34.setSymbolTable(strMap58);
        astRoot1.setSymbolTable(strMap58);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral61 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.addRegExp(regExpLiteral61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1578751039);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        astRoot1.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray13 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet14, commentArray13);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot1.target = astRoot8;
        com.google.javascript.rhino.head.Node node19 = astRoot8.getNext();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) astRoot8);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = astRoot8.getExistingIntProp((-131519396));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(commentArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(node19);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-979204671));
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setStrictMode(true);
        int int15 = compilerEnvirons12.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        compilerEnvirons16.setErrorReporter(errorReporter22);
        compilerEnvirons12.setErrorReporter(errorReporter22);
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter22);
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean28 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int7 = astRoot0.depth();
        astRoot0.setRelative((int) (short) 10);
        int int10 = astRoot0.getLength();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = iRFactory6.parse("{\n}\n", "java.io.IOException: java.io.IOException", (int) ' ');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = astRoot10.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode16 = astRoot15.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot15.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        int int26 = scriptNode23.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node27 = scriptNode23.getLastChild();
        int int28 = scriptNode23.getEndLineno();
        astRoot15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = astRoot15.getSymbolTable();
        astRoot15.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot10, (com.google.javascript.rhino.head.ast.Scope) astRoot15);
        java.lang.String str34 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.ast.Symbol symbol35 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot15.putSymbol(symbol35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n-1\t  SCRIPT 0 1\n" + "'", str34, "-1\tSCRIPT -1 1\n-1\t  SCRIPT 0 1\n");
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.util.Set<java.lang.String> strSet11 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strSet11);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        boolean boolean3 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope20.setTop(scriptNode22);
        java.lang.String str25 = scope20.toSource(12);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope20);
        int int27 = astRoot6.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode31.getSymbols();
        java.lang.String str33 = astRoot28.toStringTree(scriptNode31);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList34 = scriptNode31.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = astRoot35.getAstRoot();
        java.lang.String str37 = astRoot36.shortName();
        java.lang.String str38 = astRoot36.getSourceName();
        astRoot36.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = astRoot36.getSymbolTable();
        java.lang.String str42 = astRoot36.makeIndent(32);
        astRoot6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) astRoot36);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(4, 0);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((-159100019), (com.google.javascript.rhino.head.Node) scriptNode31, node46, 488584366);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(1796887248, (com.google.javascript.rhino.head.Node) astRoot1, node48);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList50 = astRoot1.getStatements();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                        {\n                        }\n" + "'", str25, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(symbolList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(astNodeList34);
        org.junit.Assert.assertNotNull(astRoot36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AstRoot" + "'", str37, "AstRoot");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                " + "'", str42, "                                                                ");
        org.junit.Assert.assertNotNull(astNodeList50);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = astRoot1.getTop();
        int int5 = astRoot1.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = astRoot1.getSymbols();
        java.lang.String str7 = astRoot1.getNextTempName();
        java.lang.String str8 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        boolean boolean12 = compilerEnvirons9.recoverFromErrors();
        boolean boolean13 = compilerEnvirons9.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory14 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.ast.Comment comment22 = null;
        scriptNode20.setJsDocNode(comment22);
        int int24 = scriptNode20.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scope26.getChildScopes();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope26, (int) (short) 10);
        java.lang.Object obj31 = scope26.getProp((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray36 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList37, symbolArray36);
        astRoot34.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        astRoot34.addChildScope(scope41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getEndLineno();
        java.lang.Object obj49 = astRoot47.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray50 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet51, commentArray50);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet51);
        astRoot47.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode55);
        int int60 = astRoot45.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.Node node63 = astRoot45.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = astRoot64.getAstRoot();
        java.lang.String str66 = astRoot65.shortName();
        java.lang.String str68 = astRoot65.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = astRoot65.getFunctions();
        astRoot65.checkParentLinks();
        boolean boolean71 = astRoot65.hasChildren();
        int int72 = astRoot65.getLineno();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot65, (int) ' ');
        int int75 = astRoot45.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = iRFactory14.transformTree(astRoot45);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(278475323, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode76, (-547091060));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = scriptNode76.getChildScopes();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$1" + "'", str7, "$1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$2" + "'", str8, "$2");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(symbolArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(commentArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(astRoot65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AstRoot" + "'", str66, "AstRoot");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertNull(scopeList79);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        com.google.javascript.rhino.head.Node node7 = astRoot0.getLastSibling();
        astRoot0.setEncodedSourceBounds((int) (byte) -1, 20);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = astRoot0.getFunctions();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor12 = null;
        astRoot0.visitComments(nodeVisitor12);
        com.google.javascript.rhino.head.ast.Symbol symbol15 = astRoot0.getSymbol("-11\tBLOCK -11 1\n");
        int int16 = astRoot0.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = astRoot17.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        boolean boolean26 = scope23.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope23, scope27);
        astRoot17.replaceWith(scope23);
        scope23.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol35 = scope23.getSymbol("-1\tSCRIPT -1 1\n");
        boolean boolean36 = scope23.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int38 = astRoot37.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray39 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList40, symbolArray39);
        astRoot37.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList40);
        int int43 = astRoot37.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scope23, (com.google.javascript.rhino.head.Node) astRoot37);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        int int46 = scriptNode1.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            int int47 = scriptNode1.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertNotNull(scopeList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(symbol35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(symbolArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot0.getParent();
        com.google.javascript.rhino.head.Node node12 = astRoot0.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getEndLineno();
        java.lang.Object obj15 = astRoot13.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol17 = astRoot13.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node18 = null;
        astRoot13.target = node18;
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot13);
        com.google.javascript.rhino.head.Node node22 = astRoot13.setType((-38688210));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(symbol17);
        org.junit.Assert.assertNotNull(node22);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        int int5 = astRoot0.getPosition();
        int int6 = astRoot0.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator7 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator9 = positionComparator7.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator8);
        com.google.javascript.rhino.head.Node node10 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node11 = node10.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        node10.addChildToFront((com.google.javascript.rhino.head.Node) scope12);
        int int14 = scope12.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scope12.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int19 = positionComparator8.compare((com.google.javascript.rhino.head.ast.AstNode) scope12, (com.google.javascript.rhino.head.ast.AstNode) astRoot18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        boolean boolean29 = astRoot21.isInStrictMode();
        astRoot21.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        int int40 = positionComparator8.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot21, (com.google.javascript.rhino.head.ast.AstNode) astRoot32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scope43.spliterator();
        astRoot41.addChildScope(scope43);
        java.lang.String str47 = astRoot41.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment48 = null;
        astRoot41.setJsDocNode(comment48);
        int int50 = astRoot41.getType();
        astRoot21.target = astRoot41;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = astRoot21.getEnclosingFunction();
        java.lang.String str53 = astRoot0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot21);
        boolean boolean54 = astRoot21.isInStrictMode();
        // The following exception was thrown during execution in test generation
        try {
            int int56 = astRoot21.getExistingIntProp((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(astNodeComparator9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-12) + "'", int19 == (-12));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-52) + "'", int40 == (-52));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 136 + "'", int50 == 136);
        org.junit.Assert.assertNull(functionNode52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        boolean boolean15 = compilerEnvirons11.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        java.lang.String[] strArray28 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerEnvirons16.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        compilerEnvirons11.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        boolean boolean34 = compilerEnvirons0.isXmlAvailable();
        java.util.Set<java.lang.String> strSet35 = compilerEnvirons0.getActivationNames();
        boolean boolean36 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = astRoot10.getAstRoot();
        java.lang.String str12 = astRoot11.shortName();
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node14 = node13.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        node13.addChildToFront((com.google.javascript.rhino.head.Node) scope15);
        int int17 = scope15.getLineno();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scope15, (int) ' ');
        java.lang.String str20 = node19.getJsDoc();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((-236001159), node19, 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str32 = scope31.toString();
        astRoot23.addChildrenToBack((com.google.javascript.rhino.head.Node) scope31);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((-538615178), node22, (com.google.javascript.rhino.head.Node) scope31, 541550340);
        com.google.javascript.rhino.head.Node node36 = scope31.getLastSibling();
        astRoot0.replaceWith(scope31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int40 = astRoot39.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray41 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList42, symbolArray41);
        astRoot39.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList42);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        astRoot39.addChildScope(scope46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getEndLineno();
        java.lang.Object obj54 = astRoot52.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        astRoot52.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getNextTempName();
        com.google.javascript.rhino.head.Node node62 = scriptNode60.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = scriptNode60.getFunctions();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode60);
        int int65 = astRoot50.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) astRoot50);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode74.toSource(0);
        scriptNode74.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) '#', node70, (com.google.javascript.rhino.head.Node) scope73, (com.google.javascript.rhino.head.Node) scriptNode74, 2);
        com.google.javascript.rhino.head.Node node82 = scope73.getLastChild();
        com.google.javascript.rhino.head.Node node83 = astRoot39.getChildBefore(node82);
        java.lang.String str85 = astRoot39.toSource(11);
        astRoot39.removeProp((-443001414));
        int int88 = astRoot39.getLineno();
        java.lang.String str89 = astRoot39.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol91 = astRoot39.getSymbol("0\tSCRIPT 0 3\n");
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot39);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNotNull(astRoot11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AstRoot" + "'", str12, "AstRoot");
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "129" + "'", str32, "129");
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(symbolArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "136" + "'", str89, "136");
        org.junit.Assert.assertNull(symbol91);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(false);
        boolean boolean61 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.IRFactory iRFactory62 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isGeneratingSource();
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setXmlAvailable(false);
        boolean boolean11 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.debugPrint();
        com.google.javascript.rhino.head.Node node5 = astRoot2.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = astRoot2.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        java.lang.String str24 = astRoot18.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        java.lang.String str27 = astRoot25.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = scriptNode28.getSymbols();
        java.lang.String str30 = astRoot25.toStringTree(scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope32.setTop(scriptNode34);
        java.lang.String str37 = scope32.toSource(12);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot40, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = astRoot40.getComments();
        node38.addChildToBack((com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.Node node46 = astRoot40.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = positionComparator47.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator48);
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node51 = node50.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        node50.addChildToFront((com.google.javascript.rhino.head.Node) scope52);
        int int54 = scope52.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol56 = scope52.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int59 = positionComparator48.compare((com.google.javascript.rhino.head.ast.AstNode) scope52, (com.google.javascript.rhino.head.ast.AstNode) astRoot58);
        node46.addChildToFront((com.google.javascript.rhino.head.Node) astRoot58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int62 = astRoot61.getEndLineno();
        java.lang.Object obj63 = astRoot61.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray64 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet65, commentArray64);
        astRoot61.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        astRoot58.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        astRoot2.setSourceName("                                                  ");
        astRoot2.setPosition((-2110645446));
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(709642208, (com.google.javascript.rhino.head.Node) astRoot2, (-1285574509));
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "136" + "'", str27, "136");
        org.junit.Assert.assertNotNull(symbolList29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                        {\n                        }\n" + "'", str37, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(commentSet44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(symbol56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-12) + "'", int59 == (-12));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(commentArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(956776324);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        astRoot9.removeChildren();
        java.lang.String str21 = astRoot9.toSource(10);
        int int22 = astRoot9.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-197385824), (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot9, 267112332);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.util.Set<java.lang.String> strSet12 = compilerEnvirons0.getActivationNames();
        boolean boolean13 = compilerEnvirons0.isIdeMode();
        boolean boolean14 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean7 = compilerEnvirons6.recoverFromErrors();
        compilerEnvirons6.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        compilerEnvirons10.setWarnTrailingComma(false);
        compilerEnvirons10.setAllowSharpComments(false);
        boolean boolean18 = compilerEnvirons10.isGenerateDebugInfo();
        compilerEnvirons10.setIdeMode(false);
        compilerEnvirons10.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons23.getErrorReporter();
        boolean boolean27 = compilerEnvirons23.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter28 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser29 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10, errorReporter28);
        com.google.javascript.rhino.head.IRFactory iRFactory30 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter28);
        boolean boolean31 = compilerEnvirons6.isStrictMode();
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setStrictMode(true);
        boolean boolean36 = compilerEnvirons33.recoverFromErrors();
        compilerEnvirons33.setRecordingComments(true);
        compilerEnvirons33.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons41.getErrorReporter();
        boolean boolean45 = compilerEnvirons41.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter46 = compilerEnvirons41.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException52 = errorReporter46.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        com.google.javascript.rhino.head.Parser parser53 = new com.google.javascript.rhino.head.Parser(compilerEnvirons33, errorReporter46);
        compilerEnvirons6.setErrorReporter(errorReporter46);
        compilerEnvirons0.setErrorReporter(errorReporter46);
        boolean boolean56 = compilerEnvirons0.recoverFromErrors();
        boolean boolean57 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setGenerateDebugInfo(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(errorReporter28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorReporter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(errorReporter46);
        org.junit.Assert.assertNotNull(evaluatorException52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        astRoot5.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot13);
        java.lang.String str15 = astRoot5.getJsDoc();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        boolean boolean24 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        scriptNode5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode5.getSymbols();
        scriptNode5.setRelative(953557037);
        scriptNode5.putIntProp((-1115328205), 136);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = scriptNode5.getAstRoot();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(astRoot19);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = astRoot3.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = astRoot3.getSymbols();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot3);
        java.lang.String str16 = scriptNode0.getJsDoc();
        int int17 = scriptNode0.getEndLineno();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser5 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = compilerEnvirons0.getErrorReporter();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter8);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-139315390));
        int int2 = astRoot1.getLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode22 = astRoot21.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int27 = astRoot19.getParamCount();
        java.lang.String str28 = astRoot19.debugPrint();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot19);
        astRoot3.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot19);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap31 = astRoot19.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = astRoot19.getEnclosingFunction();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(astNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str28, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(functionNode32);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        com.google.javascript.rhino.head.Node node39 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.Node node40 = astRoot32.target;
        astRoot12.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        astRoot32.setEncodedSourceBounds(1942790351, (-289553421));
        astRoot32.setRelative((int) (short) 0);
        java.lang.String str47 = astRoot32.getSourceName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean9 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean12 = compilerEnvirons0.isStrictMode();
        boolean boolean13 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setIdeMode(false);
        boolean boolean18 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        scriptNode0.setPosition(0);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = astRoot7.getAstRoot();
        java.lang.String str9 = astRoot8.shortName();
        java.lang.String str11 = astRoot8.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = astRoot8.getFunctions();
        astRoot8.checkParentLinks();
        boolean boolean14 = astRoot8.hasChildren();
        int int15 = astRoot8.getLineno();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot8, 2);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setFinally((com.google.javascript.rhino.head.Node) astRoot8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertNotNull(astRoot8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AstRoot" + "'", str9, "AstRoot");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        int int8 = scriptNode4.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        astRoot9.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot9.getAstRoot();
        java.lang.String str14 = astRoot13.shortName();
        astRoot13.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor16 = null;
        astRoot13.visitComments(nodeVisitor16);
        scriptNode4.addChildToFront((com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = parser19.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        astRoot23.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        com.google.javascript.rhino.head.ast.Scope scope30 = astRoot23.getParentScope();
        java.lang.String str31 = astRoot23.toString();
        astRoot13.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot23);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList33 = astRoot13.getStatements();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor34 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot13.visitAll(nodeVisitor34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 136 + "'", int8 == 136);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AstRoot" + "'", str14, "AstRoot");
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
        org.junit.Assert.assertNotNull(astNodeList33);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.setTop(scriptNode4);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getEndLineno();
        java.lang.Object obj14 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray15 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet16 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet16, commentArray15);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet16);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getNextTempName();
        com.google.javascript.rhino.head.Node node22 = scriptNode20.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = scriptNode20.getFunctions();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.lang.String str31 = astRoot25.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment32 = null;
        astRoot25.setJsDocNode(comment32);
        astRoot25.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean38 = astRoot37.hasSideEffects();
        int int39 = astRoot37.getParamCount();
        astRoot25.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode41.toSource(0);
        scriptNode41.setEncodedSourceBounds(12, 10);
        scriptNode41.setSourceName("");
        astRoot25.setTop(scriptNode41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray52 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList53, symbolArray52);
        astRoot50.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList53);
        boolean boolean56 = astRoot50.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap57 = astRoot50.getSymbolTable();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot50);
        int int59 = astRoot10.depth();
        int int60 = astRoot10.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode4, node7, (com.google.javascript.rhino.head.Node) astRoot10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray62 = scriptNode4.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(commentArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(symbolArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.setEncodedSourceEnd(171557313);
        com.google.javascript.rhino.head.ast.Comment comment29 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addComment(comment29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isGenerateDebugInfo();
        astRoot0.setCompilerData((java.lang.Object) boolean15);
        java.lang.String str17 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot0.getAstRoot();
        java.lang.String str19 = astRoot0.getSourceName();
        java.lang.String str20 = astRoot0.debugPrint();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        scriptNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot24.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        boolean boolean33 = scope30.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope30, scope34);
        astRoot24.replaceWith(scope30);
        int int39 = astRoot24.getEncodedSourceEnd();
        scriptNode17.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        astRoot0.setEndLineno(1236319614);
        int int44 = astRoot0.getEncodedSourceStart();
        int int45 = astRoot0.getAbsolutePosition();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNotNull(scopeList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        int int32 = astRoot12.getLineno();
        int int33 = astRoot12.depth();
        astRoot12.setBaseLineno(0);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = scope37.spliterator();
        scope37.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scope37);
        // The following exception was thrown during execution in test generation
        try {
            astRoot12.setScope(scope37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean10 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setRecordingComments(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons6.getErrorReporter();
        boolean boolean10 = compilerEnvirons6.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons6.getErrorReporter();
        compilerEnvirons6.setRecordingLocalJsDocComments(true);
        boolean boolean14 = compilerEnvirons6.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean16 = compilerEnvirons15.recoverFromErrors();
        int int17 = compilerEnvirons15.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter18);
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        boolean boolean21 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode11.setEncodedSourceBounds((int) (short) 100, 10);
        scope7.setTop(scriptNode11);
        scope7.setBounds((int) 'a', 8);
        int int21 = scope7.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope22 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        compilerEnvirons0.setLanguageVersion(0);
        boolean boolean40 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope3 = astRoot1.getDefiningScope("AstRoot");
        astRoot1.setEncodedSourceStart((int) (byte) -1);
        int int6 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node7 = astRoot1.getLastSibling();
        astRoot1.setEncodedSource("                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot1.visitComments(nodeVisitor10);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node7);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node29 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = astRoot23.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral31 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode30.addRegExp(regExpLiteral31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(functionNode30);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        int int31 = astRoot13.getParamCount();
        astRoot13.removeProp(21);
        int int34 = astRoot13.getAbsolutePosition();
        astRoot13.setEncodedSource("                  ");
        int int37 = astRoot13.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        boolean boolean33 = compilerEnvirons0.isGeneratingSource();
        boolean boolean34 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.flattenSymbolTable(false);
        int int10 = astRoot1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        java.lang.String str13 = astRoot11.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = scriptNode14.getSymbols();
        java.lang.String str16 = astRoot11.toStringTree(scriptNode14);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str20 = scope19.toString();
        astRoot11.addChildrenToBack((com.google.javascript.rhino.head.Node) scope19);
        astRoot1.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot11);
        int int23 = astRoot11.getLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "136" + "'", str13, "136");
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "129" + "'", str20, "129");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node29 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator30.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator31);
        com.google.javascript.rhino.head.Node node33 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node34 = node33.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        node33.addChildToFront((com.google.javascript.rhino.head.Node) scope35);
        int int37 = scope35.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = scope35.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int42 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scope35, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        node29.addChildToFront((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int45 = astRoot44.getEndLineno();
        java.lang.Object obj46 = astRoot44.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray47 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet48 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet48, commentArray47);
        astRoot44.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        java.lang.String str52 = astRoot41.shortName();
        astRoot41.setLength(456988288);
        int int55 = astRoot41.getAbsolutePosition();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-12) + "'", int42 == (-12));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(commentArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AstRoot" + "'", str52, "AstRoot");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 11 + "'", int55 == 11);
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor9 = null;
        astRoot0.visitComments(nodeVisitor9);
        java.lang.String str11 = astRoot0.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = scriptNode12.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node node22 = scope20.getFirstChild();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope20);
        astRoot16.target = node23;
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot16, (com.google.javascript.rhino.head.ast.Scope) astRoot26);
        astRoot0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot16);
        com.google.javascript.rhino.head.Node node30 = astRoot16.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = astRoot34.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.Node node40 = astRoot32.getLastSibling();
        java.lang.String str42 = astRoot32.toSource(0);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = astRoot32.new NodeIterator();
        astRoot16.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot32);
        astRoot32.putIntProp((-1074101998), (-264384405));
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AstRoot" + "'", str11, "AstRoot");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        boolean boolean23 = astRoot1.isInStrictMode();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = astRoot1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-91314468));
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.removeProp((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        scriptNode0.setBounds(0, (-1291599107));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = scriptNode0.new NodeIterator();
        boolean boolean14 = nodeIterator13.hasNext();
        boolean boolean15 = nodeIterator13.hasNext();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setWarnTrailingComma(true);
        boolean boolean4 = compilerEnvirons1.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons1.getErrorReporter();
        compilerEnvirons1.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet11 = compilerEnvirons8.getActivationNames();
        boolean boolean12 = compilerEnvirons8.recoverFromErrors();
        boolean boolean13 = compilerEnvirons8.getWarnTrailingComma();
        boolean boolean14 = compilerEnvirons8.isIdeMode();
        boolean boolean15 = compilerEnvirons8.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter23);
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter23);
        boolean boolean26 = compilerEnvirons8.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setWarnTrailingComma(true);
        boolean boolean30 = compilerEnvirons27.isRecordingLocalJsDocComments();
        compilerEnvirons27.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons27.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter33.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser40 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter33);
        com.google.javascript.rhino.head.IRFactory iRFactory41 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1, errorReporter33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = astRoot45.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode47);
        boolean boolean51 = astRoot43.isInStrictMode();
        astRoot43.setRelative((int) '4');
        int int54 = astRoot43.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node55 = iRFactory41.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = scope58.spliterator();
        astRoot56.addChildScope(scope58);
        java.lang.String str62 = astRoot56.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment63 = null;
        astRoot56.setJsDocNode(comment63);
        int int65 = astRoot56.getType();
        java.lang.String str66 = astRoot56.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap67 = null;
        astRoot56.setSymbolTable(strMap67);
        boolean boolean69 = astRoot56.hasConsistentReturnUsage();
        int int72 = astRoot56.getIntProp((-297370766), 627479866);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((-11), node55, (com.google.javascript.rhino.head.Node) astRoot56);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 136 + "'", int65 == 136);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 627479866 + "'", int72 == 627479866);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons3.getActivationNames();
        boolean boolean7 = compilerEnvirons3.recoverFromErrors();
        boolean boolean8 = compilerEnvirons3.getWarnTrailingComma();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons3.isXmlAvailable();
        compilerEnvirons3.setIdeMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        boolean boolean17 = compilerEnvirons14.isRecordingLocalJsDocComments();
        compilerEnvirons14.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons14.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser21 = new com.google.javascript.rhino.head.Parser(compilerEnvirons3, errorReporter20);
        com.google.javascript.rhino.head.Parser parser22 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter20);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter20.error("41", "0", 956959870, "java.io.IOException: java.io.IOException", 14);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: 41 (0#956959870)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(errorReporter20);
    }
}
