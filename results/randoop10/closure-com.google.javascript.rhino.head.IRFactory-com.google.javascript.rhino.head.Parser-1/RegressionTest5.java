import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test02501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02501");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str7 = scriptNode4.toSource(5);
        scriptNode4.putIntProp(0, 1);
        com.google.javascript.rhino.head.Node node11 = scriptNode4.target;
        java.lang.String str13 = scriptNode4.toSource((-557946458));
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-236001159), (com.google.javascript.rhino.head.Node) scriptNode4, (-12));
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        boolean boolean20 = scope17.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope22.setTop(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        scriptNode24.setCompilerData((java.lang.Object) scope27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = scope31.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node35 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node36 = node35.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        node35.addChildToFront((com.google.javascript.rhino.head.Node) scope37);
        scope31.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode34, node35);
        scriptNode34.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray45 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList46, symbolArray45);
        astRoot43.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        astRoot43.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getEndLineno();
        java.lang.Object obj54 = astRoot52.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        astRoot43.target = astRoot50;
        int int61 = astRoot50.getType();
        java.lang.String str62 = astRoot50.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = astRoot50.getFunctions();
        int int64 = astRoot50.getEncodedSourceEnd();
        java.lang.String str65 = astRoot50.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.addChildAfter((com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) astRoot50);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: newChild had siblings in addChildAfter");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "          {\n          }\n" + "'", str7, "          {\n          }\n");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(symbolArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 136 + "'", int61 == 136);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str62, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test02502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02502");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setStrictMode(false);
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons0.getActivationNames();
        boolean boolean21 = compilerEnvirons0.isIdeMode();
        boolean boolean22 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGenerateObserverCount(true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test02503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02503");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setRecordingLocalJsDocComments(false);
        boolean boolean4 = compilerEnvirons1.isGeneratingSource();
        compilerEnvirons1.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isGenerateDebugInfo();
        compilerEnvirons7.setIdeMode(false);
        compilerEnvirons7.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        boolean boolean24 = compilerEnvirons20.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter25);
        compilerEnvirons1.setErrorReporter(errorReporter25);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter25.runtimeError("-1\tSCRIPT -1 1\n", "-1\t  BLOCK 0 1\n", 0, "                                                {\n                                                }\n", 129);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = astRoot34.getTop();
        int int38 = astRoot34.getParamCount();
        astRoot34.checkParentLinks();
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException42);
        astRoot34.putProp((-738182430), (java.lang.Object) iOException42);
        evaluatorException33.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException47 = new java.io.IOException("java.io.IOException: hi!", (java.lang.Throwable) iOException42);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.lang.String str49 = iOException47.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "java.io.IOException: java.io.IOException: hi!" + "'", str49, "java.io.IOException: java.io.IOException: hi!");
    }

    @Test
    public void test02504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02504");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator16 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        int int26 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode20, (com.google.javascript.rhino.head.ast.AstNode) scope23);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator16);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator28 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator29 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator29.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator30);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator34 = positionComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int47 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot38, (com.google.javascript.rhino.head.ast.AstNode) scope46);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator48 = astNodeComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = astNodeComparator48.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator50 = astNodeComparator48.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator51 = astNodeComparator28.thenComparing(astNodeComparator50);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertNotNull(astNodeComparator28);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertNotNull(astNodeComparator34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator48);
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertNotNull(astNodeComparator50);
        org.junit.Assert.assertNotNull(astNodeComparator51);
    }

    @Test
    public void test02505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02505");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setIdeMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test02506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02506");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList2 = scope1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode4.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        java.lang.String str12 = astRoot10.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode13.getSymbols();
        java.lang.String str15 = astRoot10.toStringTree(scriptNode13);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        int int27 = astRoot17.getRegexpCount();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot17, 550287075);
        com.google.javascript.rhino.head.Node node30 = astRoot10.target;
        java.lang.String str31 = astRoot10.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor32 = null;
        astRoot10.visitComments(nodeVisitor32);
        scope1.target = astRoot10;
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int38 = astRoot37.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray39 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList40, symbolArray39);
        astRoot37.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList40);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        astRoot37.addChildScope(scope44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getEndLineno();
        java.lang.Object obj52 = astRoot50.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        astRoot50.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode58.getFunctions();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int63 = astRoot48.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int66 = astRoot65.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet67 = astRoot65.getComments();
        int int70 = astRoot65.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int74 = astRoot73.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray75 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList76 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList76, symbolArray75);
        astRoot73.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList76);
        boolean boolean79 = astRoot73.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node80 = astRoot73.getFirstChild();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) astRoot73, 550287075);
        // The following exception was thrown during execution in test generation
        try {
            scope1.replaceChild((com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "136" + "'", str12, "136");
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str31, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(symbolArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(commentSet67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(symbolArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test02507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02507");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope7, 25);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.Comment comment17 = null;
        scriptNode15.setJsDocNode(comment17);
        int int19 = scriptNode15.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scope21.getChildScopes();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scope21, (int) (short) 10);
        java.lang.Object obj26 = scope21.getProp((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray31 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList32, symbolArray31);
        astRoot29.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList32);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        astRoot29.addChildScope(scope36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getEndLineno();
        java.lang.Object obj44 = astRoot42.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray45 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet46 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet46, commentArray45);
        astRoot42.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet46);
        astRoot42.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getNextTempName();
        com.google.javascript.rhino.head.Node node52 = scriptNode50.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode50.getFunctions();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int55 = astRoot40.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.Node node58 = astRoot40.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = astRoot59.getAstRoot();
        java.lang.String str61 = astRoot60.shortName();
        java.lang.String str63 = astRoot60.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = astRoot60.getFunctions();
        astRoot60.checkParentLinks();
        boolean boolean66 = astRoot60.hasChildren();
        int int67 = astRoot60.getLineno();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot60, (int) ' ');
        scope7.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot40);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = scope7.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(symbolArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(commentArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(astRoot60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AstRoot" + "'", str61, "AstRoot");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test02508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02508");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        scriptNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        java.lang.String str24 = scriptNode15.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = astRoot25.getAstRoot();
        java.lang.String str27 = astRoot26.shortName();
        java.lang.String str29 = astRoot26.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = astRoot26.getFunctions();
        astRoot26.checkParentLinks();
        boolean boolean32 = astRoot26.hasConsistentReturnUsage();
        int int33 = astRoot26.getRegexpCount();
        scriptNode15.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray44 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList45, symbolArray44);
        scriptNode40.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = scriptNode40.getTop();
        scriptNode40.setSourceName("{\n}\n");
        int int51 = scriptNode40.getBaseLineno();
        java.lang.String str52 = scriptNode15.toStringTree(scriptNode40);
        scriptNode3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode40);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope54 = scriptNode40.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AstRoot" + "'", str27, "AstRoot");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertNotNull(symbolArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test02509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02509");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = scope2.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node6 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node7 = node6.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        node6.addChildToFront((com.google.javascript.rhino.head.Node) scope8);
        scope2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, node6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        java.lang.String str13 = node6.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = astRoot14.getSymbol("java.io.IOException: ");
        astRoot14.setEncodedSourceStart(0);
        astRoot11.setCompilerData((java.lang.Object) astRoot14);
        int int22 = astRoot11.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        java.lang.String str27 = astRoot25.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = astRoot25.getTop();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot25.new NodeIterator();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) astRoot25, 520361644);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.setTop(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        scriptNode35.setCompilerData((java.lang.Object) scope38);
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        // The following exception was thrown during execution in test generation
        try {
            double double42 = scriptNode35.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "136" + "'", str27, "136");
        org.junit.Assert.assertNotNull(scriptNode28);
    }

    @Test
    public void test02510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02510");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = astRoot34.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode36);
        int int40 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, scope41);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap44 = astRoot32.getSymbolTable();
        astRoot12.setSymbolTable(strMap44);
        astRoot12.setEndLineno(0);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test02511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02511");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        // The following exception was thrown during execution in test generation
        try {
            astRoot42.checkParentLinks();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No parent for node: 129?{?  {?  }?}?");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1491970625 + "'", int67 == 1491970625);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
    }

    @Test
    public void test02512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02512");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment37 = null;
        astRoot30.setJsDocNode(comment37);
        astRoot30.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean43 = astRoot42.hasSideEffects();
        int int44 = astRoot42.getParamCount();
        astRoot30.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot42);
        scriptNode29.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot42);
        astRoot42.setEndLineno(14);
        astRoot42.setLength((-1610320791));
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        java.lang.String str55 = astRoot53.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode56.getSymbols();
        java.lang.String str58 = astRoot53.toStringTree(scriptNode56);
        astRoot53.checkParentLinks();
        scope51.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = astRoot53.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            astRoot42.setLoop((com.google.javascript.rhino.head.ast.Jump) functionNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "136" + "'", str55, "136");
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(functionNode61);
    }

    @Test
    public void test02513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02513");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = parser9.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot13.setEncodedSourceEnd(4);
        java.lang.String str16 = astRoot13.debugPrint();
        astRoot13.removeChildren();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0\tSCRIPT 0 0\n" + "'", str16, "0\tSCRIPT 0 0\n");
    }

    @Test
    public void test02514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02514");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.debugPrint();
        astRoot0.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str7 = astRoot6.debugPrint();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = astRoot6.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        boolean boolean12 = scriptNode9.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode9.getSymbols();
        astRoot6.setSymbols(symbolList13);
        astRoot0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(11, 4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = astRoot19.getAstRoot();
        java.lang.String str21 = astRoot20.shortName();
        java.lang.String str23 = astRoot20.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = astRoot20.getFunctions();
        astRoot20.checkParentLinks();
        boolean boolean26 = astRoot20.hasChildren();
        int int27 = astRoot20.getLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = null;
        astRoot20.setSymbolTable(strMap28);
        java.lang.Object obj30 = astRoot20.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.replaceChild(node18, (com.google.javascript.rhino.head.Node) astRoot20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str7, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNotNull(astRoot20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AstRoot" + "'", str21, "AstRoot");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(functionNodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test02515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02515");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        java.lang.String[] strArray20 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerEnvirons8.setActivationNames((java.util.Set<java.lang.String>) strSet21);
        boolean boolean24 = compilerEnvirons8.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8);
        java.lang.String[] strArray29 = new java.lang.String[] { "", "ScriptNode", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        compilerEnvirons8.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        boolean boolean34 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean35 = compilerEnvirons0.isGeneratingSource();
        boolean boolean36 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test02516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02516");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = astRoot12.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
    }

    @Test
    public void test02517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02517");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        boolean boolean18 = scope15.hasSideEffects();
        int int19 = scope11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope15);
        java.lang.String str21 = scope11.toSource(19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = astRoot22.getAstRoot();
        java.lang.String str24 = astRoot22.getNextTempName();
        int int25 = astRoot22.getFunctionCount();
        java.lang.String str26 = astRoot22.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        int int35 = scriptNode31.getIntProp((int) 'a', 19);
        int int36 = scriptNode31.getFunctionCount();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((-52), (com.google.javascript.rhino.head.Node) scriptNode31);
        astRoot22.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode31);
        java.lang.Object obj39 = scriptNode31.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope11, (com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        java.lang.Object obj42 = scriptNode31.getProp(4);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1282335040) + "'", int19 == (-1282335040));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                      {\n                                      }\n" + "'", str21, "                                      {\n                                      }\n");
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 19 + "'", int35 == 19);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test02518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02518");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean7 = compilerEnvirons0.isGeneratingSource();
        boolean boolean8 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.Context context9 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test02519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02519");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        int int14 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastChild();
        int int16 = scriptNode11.getEndLineno();
        astRoot3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = astRoot3.getSymbolTable();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor19 = astRoot3.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = astRoot3.getParamOrVarName(541550340);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(nodeItor19);
    }

    @Test
    public void test02520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02520");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot4.getRegexpCount();
        com.google.javascript.rhino.head.Node node18 = astRoot4.getNext();
        astRoot4.setBaseLineno(10);
        astRoot4.setEncodedSourceBounds(136, 3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        int int27 = scriptNode24.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node28 = scriptNode24.getLastChild();
        int int29 = scriptNode24.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = scriptNode24.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator35 = scope34.spliterator();
        astRoot32.addChildScope(scope34);
        java.lang.String str38 = astRoot32.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        java.lang.String str41 = astRoot39.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode42.getSymbols();
        java.lang.String str44 = astRoot39.toStringTree(scriptNode42);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.setTop(scriptNode48);
        java.lang.String str51 = scope46.toSource(12);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scope46);
        boolean boolean53 = astRoot32.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) astRoot32);
        java.lang.Class<?> wildcardClass55 = astRoot32.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "136" + "'", str41, "136");
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                        {\n                        }\n" + "'", str51, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test02521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02521");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
    }

    @Test
    public void test02522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02522");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        boolean boolean18 = scope15.hasSideEffects();
        int int19 = scope11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope15);
        java.lang.String str21 = scope11.toSource(19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        astRoot22.setEndLineno((int) (byte) 100);
        java.lang.String str27 = astRoot22.toSource((int) (short) 0);
        astRoot22.setInStrictMode(false);
        scope11.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = scope11.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-633028070) + "'", int19 == (-633028070));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                      {\n                                      }\n" + "'", str21, "                                      {\n                                      }\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test02523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02523");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        boolean boolean19 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02524");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scope2.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = scope2.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str9 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope12, 25);
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setRelative(2);
        int int18 = scope12.getType();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.removeChild((com.google.javascript.rhino.head.Node) scope12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertNull(scriptNode4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 129 + "'", int18 == 129);
    }

    @Test
    public void test02525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02525");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment24 = null;
        astRoot17.setJsDocNode(comment24);
        astRoot17.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean30 = astRoot29.hasSideEffects();
        int int31 = astRoot29.getParamCount();
        astRoot17.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode33.toSource(0);
        scriptNode33.setEncodedSourceBounds(12, 10);
        scriptNode33.setSourceName("");
        astRoot17.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray44 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList45, symbolArray44);
        astRoot42.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList45);
        boolean boolean48 = astRoot42.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot42.getSymbolTable();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = astRoot17.getParamOrVarName((-484812922));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{\n}\n" + "'", str35, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(symbolArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strMap49);
    }

    @Test
    public void test02526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02526");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot1.getEncodedSourceStart();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet17 = astRoot1.getComments();
        java.lang.String str18 = astRoot1.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = astRoot1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(commentSet17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test02527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02527");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-960096572));
    }

    @Test
    public void test02528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02528");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral16 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addRegExp(regExpLiteral16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02529");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = astRoot1.addFunction(functionNode2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02530");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = scriptNode4.getEnclosingFunction();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scriptNode4.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.setEndLineno((-414560696));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test02531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02531");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.debugPrint();
        com.google.javascript.rhino.head.Node node5 = astRoot2.getFirstChild();
        boolean boolean6 = astRoot2.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        astRoot7.checkParentLinks();
        int int16 = astRoot7.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getEndLineno();
        java.lang.Object obj20 = astRoot18.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot18.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        com.google.javascript.rhino.head.Node node25 = astRoot18.getLastSibling();
        int int26 = node25.getType();
        astRoot7.putProp((int) ' ', (java.lang.Object) node25);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot7, 26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray30 = astRoot7.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
    }

    @Test
    public void test02532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02532");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        scope7.setPosition(17);
        com.google.javascript.rhino.head.ast.Comment comment12 = scope7.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = comment12.getLineno();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(comment12);
    }

    @Test
    public void test02533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02533");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((-1));
        boolean boolean6 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean7 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02534");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        com.google.javascript.rhino.head.ast.Comment comment3 = null;
        scriptNode0.setJsDocNode(comment3);
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.Node node6 = scriptNode0.getLastSibling();
        int int7 = scriptNode0.getEndLineno();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test02535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02535");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode43.toSource(0);
        scriptNode43.setEncodedSourceBounds(12, 10);
        scriptNode41.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        java.lang.String str50 = scriptNode41.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = astRoot51.getAstRoot();
        java.lang.String str53 = astRoot52.shortName();
        java.lang.String str55 = astRoot52.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = astRoot52.getFunctions();
        astRoot52.checkParentLinks();
        boolean boolean58 = astRoot52.hasConsistentReturnUsage();
        int int59 = astRoot52.getRegexpCount();
        scriptNode41.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot52);
        int int63 = astRoot52.getIntProp(25, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = iRFactory37.transformTree(astRoot52);
        java.io.Reader reader65 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot68 = iRFactory37.parse(reader65, "java.io.IOException: ", 563913884);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{\n}\n" + "'", str45, "{\n}\n");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(astRoot52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AstRoot" + "'", str53, "AstRoot");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(scriptNode64);
    }

    @Test
    public void test02536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02536");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope1.getSymbol("-1\t  BLOCK 0 1\n");
        scope1.setLength(653625563);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope14 = scope1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(symbol11);
    }

    @Test
    public void test02537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02537");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        boolean boolean9 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean10 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test02538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02538");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        int int27 = astRoot7.getRegexpCount();
        com.google.javascript.rhino.head.Node node28 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.setFinally(node28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test02539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02539");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        astRoot6.removeChildren();
        java.lang.String str18 = astRoot6.toSource(10);
        int int19 = astRoot6.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = astRoot20.getAstRoot();
        java.lang.String str22 = astRoot21.shortName();
        java.lang.String str23 = astRoot21.getSourceName();
        astRoot21.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = astRoot21.getSymbolTable();
        java.lang.String str27 = astRoot21.makeIndent(32);
        astRoot21.putProp(100, (java.lang.Object) (-1468440406));
        astRoot6.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot21);
        java.lang.Class<?> wildcardClass32 = astRoot6.getClass();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(astRoot21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AstRoot" + "'", str22, "AstRoot");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                " + "'", str27, "                                                                ");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02540");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        boolean boolean2 = astRoot0.hasChildren();
        astRoot0.setBounds(1128480984, (-1610320791));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = astRoot0.getParamOrVarName((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test02541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02541");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        astRoot0.setSourceName("java.io.IOException: ");
        astRoot0.removeProp(775058292);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
    }

    @Test
    public void test02542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02542");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scope7.spliterator();
        astRoot5.addChildScope(scope7);
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot5);
        com.google.javascript.rhino.head.ast.Symbol symbol12 = astRoot5.getSymbol("                  ");
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = scope14.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node18 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node19 = node18.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        node18.addChildToFront((com.google.javascript.rhino.head.Node) scope20);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode17, node18);
        int int23 = scriptNode17.getEncodedSourceEnd();
        astRoot5.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.lang.String str31 = astRoot25.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment32 = null;
        astRoot25.setJsDocNode(comment32);
        astRoot25.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean38 = astRoot37.hasSideEffects();
        int int39 = astRoot37.getParamCount();
        astRoot25.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode41.toSource(0);
        scriptNode41.setEncodedSourceBounds(12, 10);
        scriptNode41.setSourceName("");
        astRoot25.setTop(scriptNode41);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator51 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        java.lang.String str54 = astRoot52.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode55.getSymbols();
        java.lang.String str57 = astRoot52.toStringTree(scriptNode55);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        int int61 = positionComparator51.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode55, (com.google.javascript.rhino.head.ast.AstNode) scope58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str63 = astRoot62.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator65 = scope64.spliterator();
        astRoot62.addChildScope(scope64);
        java.lang.String str68 = astRoot62.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = astRoot62.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str72 = astRoot71.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode74 = astRoot73.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode75.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot71, (com.google.javascript.rhino.head.Node) astRoot73, (com.google.javascript.rhino.head.Node) scriptNode75);
        int int79 = positionComparator51.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot62, (com.google.javascript.rhino.head.ast.AstNode) astRoot71);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot71, 24);
        astRoot71.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = astRoot71.getAstRoot();
        int int84 = astRoot71.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int86 = astRoot85.getEndLineno();
        java.lang.Object obj87 = astRoot85.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray88 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet89 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet89, commentArray88);
        astRoot85.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet89);
        astRoot71.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet89);
        scriptNode41.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot71);
        // The following exception was thrown during execution in test generation
        try {
            astRoot5.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNull(symbol12);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "136" + "'", str54, "136");
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNull(astNode74);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(astRoot83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(commentArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test02543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02543");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02544");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        int int2 = scriptNode0.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = null;
        scriptNode0.setSymbolTable(strMap3);
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode0.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = scope5.getExistingIntProp(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test02545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02545");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean9 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setGenerateDebugInfo(true);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel((-1660235791));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: -1660235791");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test02546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02546");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02547");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        scriptNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot24.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        boolean boolean33 = scope30.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope30, scope34);
        astRoot24.replaceWith(scope30);
        int int39 = astRoot24.getEncodedSourceEnd();
        scriptNode17.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getEndLineno();
        java.lang.Object obj47 = astRoot45.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot45.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        astRoot45.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getNextTempName();
        com.google.javascript.rhino.head.Node node55 = scriptNode53.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = scriptNode53.getFunctions();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode53);
        int int58 = astRoot43.getEncodedSourceStart();
        astRoot43.setRelative(100);
        int int61 = astRoot43.getType();
        // The following exception was thrown during execution in test generation
        try {
            astRoot24.setContinue((com.google.javascript.rhino.head.Node) astRoot43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNotNull(scopeList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 136 + "'", int61 == 136);
    }

    @Test
    public void test02548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02548");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        boolean boolean33 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.Context context34 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test02549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02549");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = astRoot0.getParamCount();
        boolean boolean5 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot0.getSymbol("                                    ");
        int int9 = astRoot0.getLineno();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test02550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02550");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean3 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean4 = compilerEnvirons0.isStrictMode();
        boolean boolean5 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02551");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        astRoot0.setRelative(8);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visitAll(nodeVisitor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test02552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02552");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-1076304790), (-538615178));
    }

    @Test
    public void test02553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02553");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator3 = positionComparator1.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator2);
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol10 = scope6.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int13 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) scope6, (com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = astRoot14.getAstRoot();
        java.lang.String str16 = astRoot15.shortName();
        java.lang.String str18 = astRoot15.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot15.getFunctions();
        astRoot15.checkParentLinks();
        boolean boolean21 = astRoot15.hasChildren();
        int int22 = astRoot15.getLineno();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot15, 4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        boolean boolean31 = astRoot25.hasChildren();
        int int32 = astRoot25.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        int int35 = scriptNode33.depth();
        com.google.javascript.rhino.head.ast.Comment comment36 = null;
        scriptNode33.setJsDocNode(comment36);
        com.google.javascript.rhino.head.Node node38 = scriptNode33.getLastSibling();
        astRoot25.target = scriptNode33;
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope(13, (-12));
        scriptNode33.replaceWith(scope42);
        astRoot15.target = scriptNode33;
        com.google.javascript.rhino.head.ast.Symbol symbol45 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode33.putSymbol(symbol45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(symbol10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-12) + "'", int13 == (-12));
        org.junit.Assert.assertNotNull(astRoot15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AstRoot" + "'", str16, "AstRoot");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(node38);
    }

    @Test
    public void test02554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02554");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        com.google.javascript.rhino.head.Node node12 = astRoot1.setType(550287075);
        int int13 = astRoot1.getRegexpCount();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02555");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope18.setTop(scriptNode20);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor22 = scope18.iterator();
        astRoot1.setParentScope(scope18);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        boolean boolean27 = scope24.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope24, scope28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scope28.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = scope28.getAstRoot();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot33);
        com.google.javascript.rhino.head.Node node35 = astRoot1.getFirstChild();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(nodeItor22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNull(astRoot33);
        org.junit.Assert.assertNull(node35);
    }

    @Test
    public void test02556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02556");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        scriptNode17.setBounds((int) (byte) -1, 23);
        int int23 = astRoot11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = scope25.new NodeIterator();
        scope25.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        java.lang.String str32 = astRoot30.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        java.lang.String str35 = astRoot30.toStringTree(scriptNode33);
        java.lang.String str37 = astRoot30.toSource(0);
        java.lang.String str39 = astRoot30.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        int int44 = scriptNode40.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getNextTempName();
        com.google.javascript.rhino.head.Node node47 = scriptNode45.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList48 = scriptNode45.getFunctions();
        int int49 = scriptNode45.getEncodedSourceEnd();
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode55 = astRoot54.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int60 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot52, scope61);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = astRoot52.getSymbolTable();
        scriptNode40.setSymbolTable(strMap64);
        astRoot30.setSymbolTable(strMap64);
        scope25.setSymbolTable(strMap64);
        astRoot11.setSymbolTable(strMap64);
        astRoot0.setSymbolTable(strMap64);
        com.google.javascript.rhino.head.ast.Symbol symbol71 = astRoot0.getSymbol("136");
        java.lang.String str72 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor73 = null;
        astRoot0.visitComments(nodeVisitor73);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNotNull(functionNodeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(symbol71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str72, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test02557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02557");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setStrictMode(false);
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons0.getActivationNames();
        boolean boolean21 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setAllowSharpComments(false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test02558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02558");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1159083728);
    }

    @Test
    public void test02559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02559");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope25.setTop(scriptNode27);
        java.lang.String str30 = scope25.toSource(12);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot33, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot33.getComments();
        node31.addChildToBack((com.google.javascript.rhino.head.Node) astRoot33);
        com.google.javascript.rhino.head.Node node39 = astRoot33.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator40.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator41);
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node44 = node43.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        node43.addChildToFront((com.google.javascript.rhino.head.Node) scope45);
        int int47 = scope45.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scope45.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int52 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) scope45, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        node39.addChildToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setSourceName("{\n}\n");
        astRoot0.putIntProp((-1468440406), (-1076304790));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope68 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                        {\n                        }\n" + "'", str30, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-12) + "'", int52 == (-12));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test02560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02560");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray13 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet14, commentArray13);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot10.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getNextTempName();
        com.google.javascript.rhino.head.Node node20 = scriptNode18.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode18.getFunctions();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int23 = astRoot8.getEncodedSourceStart();
        astRoot8.setRelative(100);
        boolean boolean26 = astRoot8.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) astRoot8);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor28 = null;
        astRoot1.visitComments(nodeVisitor28);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(commentArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test02561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02561");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        int int6 = astRoot1.getIntProp(12, (int) ' ');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = astRoot1.addFunction(functionNode7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
    }

    @Test
    public void test02562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02562");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.isXmlAvailable();
        java.lang.Class<?> wildcardClass10 = compilerEnvirons0.getClass();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02563");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = astRoot0.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = astRoot7.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scriptNode9);
        int int13 = astRoot5.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = astRoot5.spliterator();
        com.google.javascript.rhino.head.Node node16 = astRoot5.setType(550287075);
        int int17 = astRoot5.getPosition();
        astRoot0.addChildToFront((com.google.javascript.rhino.head.Node) astRoot5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = astRoot19.getAstRoot();
        java.lang.String str21 = astRoot20.shortName();
        java.lang.String str22 = astRoot20.getSourceName();
        astRoot20.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = astRoot20.getSymbolTable();
        java.lang.String str26 = astRoot20.makeIndent(32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode31 = astRoot30.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor36 = null;
        astRoot28.visitComments(nodeVisitor36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope40.spliterator();
        astRoot38.addChildScope(scope40);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = astRoot38.getChildScopes();
        java.lang.String str44 = astRoot38.toString();
        astRoot28.addChildToBack((com.google.javascript.rhino.head.Node) astRoot38);
        int int46 = astRoot38.getFunctionCount();
        astRoot20.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot38);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator49 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator50 = positionComparator48.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode55 = astRoot54.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode56);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int63 = positionComparator48.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot54, (com.google.javascript.rhino.head.ast.AstNode) scope62);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator64 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        java.lang.String str67 = astRoot65.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode68.getSymbols();
        java.lang.String str70 = astRoot65.toStringTree(scriptNode68);
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        scope71.addChild((com.google.javascript.rhino.head.ast.AstNode) scope72);
        int int74 = positionComparator64.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode68, (com.google.javascript.rhino.head.ast.AstNode) scope71);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator75 = positionComparator48.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int77 = astRoot76.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet78 = astRoot76.getComments();
        int int81 = astRoot76.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node82 = astRoot76.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope85 = new com.google.javascript.rhino.head.ast.Scope();
        scope84.addChild((com.google.javascript.rhino.head.ast.AstNode) scope85);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope85.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        com.google.javascript.rhino.head.ast.Comment comment89 = null;
        scriptNode87.setJsDocNode(comment89);
        int int91 = scriptNode87.getLineno();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode87);
        int int93 = positionComparator64.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot76, (com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        int int94 = astRoot20.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(astRoot20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AstRoot" + "'", str21, "AstRoot");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                " + "'", str26, "                                                                ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(astNode31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNotNull(scopeList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-3) + "'", int63 == (-3));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "136" + "'", str67, "136");
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(commentSet78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test02564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02564");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean16 = compilerEnvirons0.isXmlAvailable();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel(362700701);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 362700701");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test02565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02565");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(11);
        // The following exception was thrown during execution in test generation
        try {
            int int3 = scope1.getExistingIntProp(563913884);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02566");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean39 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter40 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            errorReporter40.error("", "+=", (-8), "                    ", 1617122241);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -8");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(errorReporter40);
    }

    @Test
    public void test02567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02567");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(1034001328, "");
        boolean boolean3 = node2.hasSideEffects();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = node2.spliterator();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator4);
    }

    @Test
    public void test02568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02568");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean4 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test02569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02569");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        astRoot21.setLength(100);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot21.visit(nodeVisitor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test02570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02570");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope7.setSymbolTable(strMap10);
        scope7.setBounds((-1840907413), 20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node15 = scope7.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test02571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02571");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        scriptNode3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode16.toSource(0);
        scriptNode16.setEncodedSourceBounds(12, 10);
        scriptNode14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        java.lang.String str23 = scriptNode14.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot24.getAstRoot();
        java.lang.String str26 = astRoot25.shortName();
        java.lang.String str28 = astRoot25.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot25.getFunctions();
        astRoot25.checkParentLinks();
        boolean boolean31 = astRoot25.hasConsistentReturnUsage();
        int int32 = astRoot25.getRegexpCount();
        scriptNode14.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = astRoot37.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray43 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList44, symbolArray43);
        scriptNode39.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode39.getTop();
        scriptNode39.setSourceName("{\n}\n");
        int int50 = scriptNode39.getBaseLineno();
        java.lang.String str51 = scriptNode14.toStringTree(scriptNode39);
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.Symbol symbol54 = scriptNode39.getSymbol("|");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node55 = scriptNode39.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AstRoot" + "'", str26, "AstRoot");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(astNode38);
        org.junit.Assert.assertNotNull(symbolArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(symbol54);
    }

    @Test
    public void test02572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02572");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = astRoot3.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = astRoot3.getSymbols();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot3);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        java.lang.String str24 = astRoot18.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        java.lang.String str27 = astRoot25.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = scriptNode28.getSymbols();
        java.lang.String str30 = astRoot25.toStringTree(scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope32.setTop(scriptNode34);
        java.lang.String str37 = scope32.toSource(12);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot40, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = astRoot40.getComments();
        node38.addChildToBack((com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.Node node46 = astRoot40.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = positionComparator47.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator48);
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node51 = node50.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        node50.addChildToFront((com.google.javascript.rhino.head.Node) scope52);
        int int54 = scope52.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol56 = scope52.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int59 = positionComparator48.compare((com.google.javascript.rhino.head.ast.AstNode) scope52, (com.google.javascript.rhino.head.ast.AstNode) astRoot58);
        node46.addChildToFront((com.google.javascript.rhino.head.Node) astRoot58);
        com.google.javascript.rhino.head.Node node61 = astRoot58.getLastSibling();
        boolean boolean62 = astRoot58.hasSideEffects();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot58);
        scriptNode0.addChildrenToFront(node63);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor65 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "136" + "'", str27, "136");
        org.junit.Assert.assertNotNull(symbolList29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                        {\n                        }\n" + "'", str37, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(commentSet44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(symbol56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-12) + "'", int59 == (-12));
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test02573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02573");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        scriptNode9.setBounds((int) (byte) -1, 23);
        int int15 = astRoot3.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = scope17.new NodeIterator();
        scope17.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        java.lang.String str29 = astRoot22.toSource(0);
        java.lang.String str31 = astRoot22.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        int int36 = scriptNode32.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        int int41 = scriptNode37.getEncodedSourceEnd();
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode47 = astRoot46.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) scriptNode48);
        int int52 = astRoot44.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot44, scope53);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = astRoot44.getSymbolTable();
        scriptNode32.setSymbolTable(strMap56);
        astRoot22.setSymbolTable(strMap56);
        scope17.setSymbolTable(strMap56);
        astRoot3.setSymbolTable(strMap56);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node61 = astRoot3.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test02574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02574");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot0.target = astRoot7;
        int int18 = astRoot0.getParamCount();
        java.lang.String str19 = astRoot0.shortName();
        astRoot0.flattenSymbolTable(false);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
    }

    @Test
    public void test02575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02575");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        com.google.javascript.rhino.head.Node node39 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.Node node40 = astRoot32.target;
        astRoot12.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        java.lang.String str43 = astRoot32.toSource(520361644);
        boolean boolean44 = astRoot32.isInStrictMode();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test02576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02576");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump5 = astRoot0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
    }

    @Test
    public void test02577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02577");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        boolean boolean8 = astRoot2.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        astRoot2.setCompilerData((java.lang.Object) boolean17);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2);
        astRoot2.setPosition(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = astRoot22.getAstRoot();
        java.lang.String str24 = astRoot23.shortName();
        java.lang.String str26 = astRoot23.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = astRoot23.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray30 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList31, symbolArray30);
        astRoot28.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList31);
        boolean boolean34 = astRoot28.hasChildren();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getNextTempName();
        com.google.javascript.rhino.head.Node node47 = scriptNode45.target;
        scriptNode45.setBounds((int) (byte) -1, 23);
        int int51 = astRoot39.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode52.setEncodedSourceBounds((int) (short) 100, 10);
        int int60 = scriptNode52.getIntProp(0, 9);
        astRoot39.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str63 = astRoot62.getNextTempName();
        java.lang.String str64 = astRoot62.toSource();
        scriptNode52.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot62);
        // The following exception was thrown during execution in test generation
        try {
            node35.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AstRoot" + "'", str24, "AstRoot");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(symbolArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 9 + "'", int60 == 9);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test02578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02578");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = astRoot0.iterator();
        astRoot0.clearParentScope();
        java.lang.String str8 = astRoot0.makeIndent((-1468440406));
        astRoot0.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test02579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02579");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        astRoot9.checkParentLinks();
        int int16 = astRoot9.depth();
        astRoot9.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope20 = astRoot9.getDefiningScope("  {\n  }\n");
        int int21 = astRoot9.depth();
        int int22 = astRoot9.depth();
        scriptNode0.target = astRoot9;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test02580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02580");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean10 = compilerEnvirons9.recoverFromErrors();
        compilerEnvirons9.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setWarnTrailingComma(true);
        boolean boolean16 = compilerEnvirons13.isRecordingLocalJsDocComments();
        compilerEnvirons13.setWarnTrailingComma(false);
        compilerEnvirons13.setAllowSharpComments(false);
        boolean boolean21 = compilerEnvirons13.isGenerateDebugInfo();
        compilerEnvirons13.setIdeMode(false);
        compilerEnvirons13.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons26.getErrorReporter();
        boolean boolean30 = compilerEnvirons26.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons13, errorReporter31);
        com.google.javascript.rhino.head.IRFactory iRFactory33 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter31);
        errorReporter31.warning("{\n}\n", "136", (int) (byte) 100, "hi!", 10);
        com.google.javascript.rhino.head.Parser parser40 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter31);
        boolean boolean41 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean42 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons43.setRecordingLocalJsDocComments(false);
        boolean boolean46 = compilerEnvirons43.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons47 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons47.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons47.getErrorReporter();
        boolean boolean51 = compilerEnvirons47.isGenerateObserverCount();
        compilerEnvirons47.setRecordingComments(true);
        boolean boolean54 = compilerEnvirons47.isGenerateObserverCount();
        boolean boolean55 = compilerEnvirons47.isGenerateDebugInfo();
        compilerEnvirons47.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons58 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons58.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter61 = compilerEnvirons58.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory62 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons47, errorReporter61);
        boolean boolean63 = compilerEnvirons47.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter64 = compilerEnvirons47.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons65 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons65.setRecordingLocalJsDocComments(false);
        boolean boolean68 = compilerEnvirons65.isGeneratingSource();
        compilerEnvirons65.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons71 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons71.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter74 = compilerEnvirons71.getErrorReporter();
        boolean boolean75 = compilerEnvirons71.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter76 = compilerEnvirons71.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException82 = errorReporter76.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter76.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser89 = new com.google.javascript.rhino.head.Parser(compilerEnvirons65, errorReporter76);
        compilerEnvirons47.setErrorReporter(errorReporter76);
        com.google.javascript.rhino.head.Parser parser91 = new com.google.javascript.rhino.head.Parser(compilerEnvirons43, errorReporter76);
        java.util.Set<java.lang.String> strSet92 = compilerEnvirons43.getActivationNames();
        boolean boolean93 = compilerEnvirons43.isXmlAvailable();
        com.google.javascript.rhino.head.ErrorReporter errorReporter94 = compilerEnvirons43.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter94);
        int int96 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(errorReporter61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(errorReporter64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(errorReporter74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(errorReporter76);
        org.junit.Assert.assertNotNull(evaluatorException82);
        org.junit.Assert.assertNull(strSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(errorReporter94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test02581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02581");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        boolean boolean52 = astRoot51.hasSideEffects();
        astRoot15.addChildToBack((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.Comment comment54 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot15.addComment(comment54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test02582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02582");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode6.getChildScopes();
        scriptNode6.setBaseLineno(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.removeProp((int) (short) 1);
        int int18 = scriptNode13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = parser19.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        astRoot23.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        com.google.javascript.rhino.head.ast.Symbol symbol31 = astRoot24.getSymbol("                  ");
        java.lang.String str33 = astRoot24.toSource(5);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot24, (-280309866));
        java.lang.Class<?> wildcardClass36 = scriptNode6.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(symbol31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test02583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02583");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scope0.spliterator();
        scope0.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.Node node4 = scope0.target;
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        java.lang.String str7 = astRoot5.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = astRoot5.getTop();
        int int9 = astRoot5.getParamCount();
        astRoot5.checkParentLinks();
        scope0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot5);
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        int int16 = astRoot5.getBaseLineno();
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "136" + "'", str7, "136");
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test02584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02584");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        astRoot7.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope16 = astRoot7.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test02585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02585");
        java.io.IOException iOException3 = new java.io.IOException("                                                                ");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("-1\tSCRIPT -1 1\n", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("2", (java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test02586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02586");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        scriptNode3.setJsDocNode(comment5);
        int int7 = scriptNode3.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        boolean boolean17 = astRoot9.isInStrictMode();
        astRoot9.setRelative((int) '4');
        astRoot9.setRelative(0);
        java.lang.String str22 = astRoot9.getJsDoc();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot9);
        // The following exception was thrown during execution in test generation
        try {
            astRoot9.setDouble((double) (-289553421));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test02587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02587");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean16 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.ast.Comment comment17 = null;
        astRoot3.setJsDocNode(comment17);
        astRoot3.setEncodedSource("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = astRoot3.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02588");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope7, 25);
        java.lang.Object obj11 = scriptNode1.getProp(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        java.lang.String str29 = astRoot23.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        java.lang.String str32 = astRoot30.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        java.lang.String str35 = astRoot30.toStringTree(scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope37.setTop(scriptNode39);
        java.lang.String str42 = scope37.toSource(12);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scope37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot45, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = astRoot45.getComments();
        node43.addChildToBack((com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.Node node51 = astRoot45.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator53);
        com.google.javascript.rhino.head.Node node55 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node56 = node55.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        node55.addChildToFront((com.google.javascript.rhino.head.Node) scope57);
        int int59 = scope57.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scope57.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int64 = positionComparator53.compare((com.google.javascript.rhino.head.ast.AstNode) scope57, (com.google.javascript.rhino.head.ast.AstNode) astRoot63);
        node51.addChildToFront((com.google.javascript.rhino.head.Node) astRoot63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int67 = astRoot66.getEndLineno();
        java.lang.Object obj68 = astRoot66.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray69 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet70, commentArray69);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        astRoot12.setSourceName("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor79 = null;
        astRoot78.visitComments(nodeVisitor79);
        astRoot12.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot78);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot78);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = scriptNode1.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                        {\n                        }\n" + "'", str42, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(commentSet49);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-12) + "'", int64 == (-12));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(commentArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test02589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02589");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getLastChild();
        java.lang.Object obj5 = astRoot1.getCompilerData();
        java.lang.String str7 = astRoot1.toSource(242344114);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int9 = astRoot1.addFunction(functionNode8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test02590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02590");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setStrictMode(true);
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        boolean boolean11 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        java.lang.String[] strArray24 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        compilerEnvirons12.setActivationNames((java.util.Set<java.lang.String>) strSet25);
        boolean boolean28 = compilerEnvirons12.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser29 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "ScriptNode", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        compilerEnvirons12.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        compilerEnvirons0.setRecordingComments(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test02591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02591");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        scope7.setPosition(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str16 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope19, 25);
        java.lang.Object obj23 = scriptNode13.getProp(0);
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope7.getParentScope();
        com.google.javascript.rhino.head.Node node26 = scope7.getLastChild();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(scope25);
        org.junit.Assert.assertNotNull(node26);
    }

    @Test
    public void test02592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02592");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node31 = astRoot13.getLastSibling();
        boolean boolean32 = astRoot13.isInStrictMode();
        java.lang.String str33 = astRoot13.shortName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        astRoot34.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor39 = astRoot34.iterator();
        astRoot34.setInStrictMode(false);
        boolean boolean42 = astRoot34.isInStrictMode();
        int int43 = astRoot34.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot44.getAstRoot();
        java.lang.String str46 = astRoot45.shortName();
        java.lang.String str47 = astRoot45.getSourceName();
        astRoot45.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray52 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList53, symbolArray52);
        astRoot50.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList53);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        astRoot50.addChildScope(scope57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int62 = astRoot61.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int64 = astRoot63.getEndLineno();
        java.lang.Object obj65 = astRoot63.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray66 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet67 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet67, commentArray66);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        astRoot63.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getNextTempName();
        com.google.javascript.rhino.head.Node node73 = scriptNode71.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = scriptNode71.getFunctions();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot61, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) scriptNode71);
        int int76 = astRoot61.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot61);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode85.toSource(0);
        scriptNode85.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) '#', node81, (com.google.javascript.rhino.head.Node) scope84, (com.google.javascript.rhino.head.Node) scriptNode85, 2);
        com.google.javascript.rhino.head.Node node93 = scope84.getLastChild();
        com.google.javascript.rhino.head.Node node94 = astRoot50.getChildBefore(node93);
        java.lang.String str95 = astRoot45.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot50);
        boolean boolean96 = astRoot50.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            astRoot13.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AstRoot" + "'", str33, "AstRoot");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(nodeItor39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AstRoot" + "'", str46, "AstRoot");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(symbolArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(commentArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(functionNodeList74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{\n}\n" + "'", str87, "{\n}\n");
        org.junit.Assert.assertNull(node93);
        org.junit.Assert.assertNull(node94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test02593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02593");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        astRoot6.removeChildren();
        java.lang.String str18 = astRoot6.toSource(10);
        int int19 = astRoot6.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = scope22.spliterator();
        astRoot20.addChildScope(scope22);
        java.lang.String str26 = astRoot20.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment27 = null;
        astRoot20.setJsDocNode(comment27);
        int int29 = astRoot20.getType();
        java.lang.String str30 = astRoot20.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap31 = null;
        astRoot20.setSymbolTable(strMap31);
        astRoot20.clearParentScope();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons34.setWarnTrailingComma(true);
        boolean boolean37 = compilerEnvirons34.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter38 = compilerEnvirons34.getErrorReporter();
        compilerEnvirons34.setGeneratingSource(false);
        compilerEnvirons34.setReservedKeywordAsIdentifier(false);
        compilerEnvirons34.setGenerateDebugInfo(true);
        int int45 = compilerEnvirons34.getOptimizationLevel();
        astRoot20.setCompilerData((java.lang.Object) compilerEnvirons34);
        astRoot20.removeProp(26);
        int int49 = astRoot6.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = astRoot6.getRegexpFlags(938587703);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 136 + "'", int29 == 136);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(errorReporter38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 96600350 + "'", int49 == 96600350);
    }

    @Test
    public void test02594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02594");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        boolean boolean33 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean35 = compilerEnvirons34.recoverFromErrors();
        int int36 = compilerEnvirons34.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons34.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter37);
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons0.getErrorReporter();
        boolean boolean40 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(errorReporter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test02595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02595");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean2 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = astRoot7.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scriptNode9);
        boolean boolean13 = astRoot5.isInStrictMode();
        astRoot5.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Node node18 = scriptNode16.target;
        int int19 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node20 = scriptNode16.getLastChild();
        astRoot5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        com.google.javascript.rhino.head.Node node22 = scriptNode16.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray25 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList26, symbolArray25);
        astRoot23.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        boolean boolean29 = astRoot23.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = null;
        astRoot23.setTop(scriptNode30);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode37.toSource(0);
        scriptNode37.setEncodedSourceBounds(12, 10);
        scriptNode35.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = astRoot44.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        boolean boolean53 = scope50.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope54.addChild((com.google.javascript.rhino.head.ast.AstNode) scope55);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope50, scope54);
        astRoot44.replaceWith(scope50);
        int int59 = astRoot44.getEncodedSourceEnd();
        scriptNode37.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        astRoot44.setEncodedSourceBounds(8, 1471166993);
        int int66 = astRoot44.getIntProp((-543879055), (-11));
        astRoot23.target = astRoot44;
        astRoot23.setEncodedSource("                ");
        // The following exception was thrown during execution in test generation
        try {
            scope1.addChildAfter(node22, (com.google.javascript.rhino.head.Node) astRoot23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(symbolArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{\n}\n" + "'", str39, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertNotNull(scopeList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-11) + "'", int66 == (-11));
    }

    @Test
    public void test02596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02596");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.lang.String str7 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = astRoot1.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = astRoot12.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) scriptNode14);
        int int18 = astRoot10.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = astRoot10.spliterator();
        java.lang.Object obj20 = astRoot10.getCompilerData();
        astRoot10.putIntProp((-236001159), (-2110645446));
        // The following exception was thrown during execution in test generation
        try {
            functionNode8.addChildToFront((com.google.javascript.rhino.head.Node) astRoot10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(functionNode8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test02597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02597");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean21 = compilerEnvirons0.getAllowSharpComments();
        compilerEnvirons0.setGenerateObserverCount(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test02598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02598");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot29.getAstRoot();
        java.lang.String str31 = astRoot30.shortName();
        java.lang.String str32 = astRoot30.debugPrint();
        int int33 = astRoot1.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot30);
        com.google.javascript.rhino.head.ast.Scope scope34 = astRoot30.getParentScope();
        int int35 = astRoot30.getEndLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AstRoot" + "'", str31, "AstRoot");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str32, "-1\tSCRIPT -1 1\n");
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 722910379 + "'", int33 == 722910379);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test02599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02599");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(14, 26);
        java.lang.String str6 = node5.toString();
        // The following exception was thrown during execution in test generation
        try {
            scope2.setDefault(node5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "14" + "'", str6, "14");
    }

    @Test
    public void test02600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02600");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.io.Reader reader16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot19 = parser15.parse(reader16, "", 25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test02601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02601");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        com.google.javascript.rhino.head.Node node12 = astRoot1.setType(550287075);
        int int13 = astRoot1.getRegexpCount();
        astRoot1.setEndLineno(444385247);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02602");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setOptimizationLevel(4);
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException15 = errorReporter9.runtimeError("21", "                                    ", 32, "          {\n          }\n", 278475323);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter9.error("        {\n        }\n", "-1291599107\tSCRIPT -1291599107 1\n", (-892379193), "0", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -892379193");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertNotNull(evaluatorException15);
    }

    @Test
    public void test02603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02603");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        int int27 = astRoot0.depth();
        int int28 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = scope30.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        scope30.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode33, node34);
        scriptNode33.flattenSymbolTable(false);
        int int41 = scriptNode33.getType();
        java.lang.String str42 = scriptNode33.toString();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap43 = scriptNode33.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        java.lang.String str46 = astRoot44.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode47.getSymbols();
        java.lang.String str49 = astRoot44.toStringTree(scriptNode47);
        astRoot44.checkParentLinks();
        int int53 = astRoot44.getIntProp(11, 32);
        scriptNode33.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = astRoot0.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 136 + "'", int41 == 136);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "136" + "'", str42, "136");
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "136" + "'", str46, "136");
        org.junit.Assert.assertNotNull(symbolList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 32 + "'", int53 == 32);
    }

    @Test
    public void test02604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02604");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot1.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setString("8\tSCRIPT 8 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList7);
    }

    @Test
    public void test02605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02605");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = astRoot79.getTop();
        com.google.javascript.rhino.head.Node node89 = astRoot79.getLastChild();
        astRoot79.setEncodedSourceStart((int) (byte) -1);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor92 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot79.visit(nodeVisitor92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 601506595 + "'", int67 == 601506595);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNull(node89);
    }

    @Test
    public void test02606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02606");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int13 = astRoot12.getType();
        com.google.javascript.rhino.head.Node node14 = astRoot12.getFirstChild();
        astRoot12.putIntProp((int) (short) 100, 953557037);
        int int18 = astRoot12.getEndLineno();
        com.google.javascript.rhino.head.Node node19 = iRFactory10.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = scope23.spliterator();
        astRoot21.addChildScope(scope23);
        java.lang.String str27 = astRoot21.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode31.getSymbols();
        java.lang.String str33 = astRoot28.toStringTree(scriptNode31);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.setTop(scriptNode37);
        java.lang.String str40 = scope35.toSource(12);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scope35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot43, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = astRoot43.getComments();
        node41.addChildToBack((com.google.javascript.rhino.head.Node) astRoot43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = scope51.spliterator();
        astRoot49.addChildScope(scope51);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = astRoot49.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        boolean boolean58 = scope55.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.addChild((com.google.javascript.rhino.head.ast.AstNode) scope60);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope55, scope59);
        astRoot49.replaceWith(scope55);
        java.lang.String str64 = scope55.debugPrint();
        astRoot43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope55);
        java.lang.String str67 = astRoot43.toSource((-2110645446));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot43.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = iRFactory10.transformTree(astRoot43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 136 + "'", int13 == 136);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(symbolList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                        {\n                        }\n" + "'", str40, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(commentSet47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertNotNull(scopeList54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n" + "'", str64, "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{\n{\n}\n}\n" + "'", str67, "{\n{\n}\n}\n");
    }

    @Test
    public void test02607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02607");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        java.lang.Object obj5 = scriptNode0.getProp((-1115328205));
        scriptNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray11 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList12, symbolArray11);
        astRoot9.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        astRoot9.addChildScope(scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getEndLineno();
        java.lang.Object obj24 = astRoot22.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray25 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet26, commentArray25);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        astRoot22.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getNextTempName();
        com.google.javascript.rhino.head.Node node32 = scriptNode30.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode30.getFunctions();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int35 = astRoot20.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot20);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode44.toSource(0);
        scriptNode44.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) '#', node40, (com.google.javascript.rhino.head.Node) scope43, (com.google.javascript.rhino.head.Node) scriptNode44, 2);
        com.google.javascript.rhino.head.Node node52 = scope43.getLastChild();
        com.google.javascript.rhino.head.Node node53 = astRoot9.getChildBefore(node52);
        java.lang.String str55 = astRoot9.toSource(11);
        astRoot9.removeProp((-443001414));
        int int58 = astRoot9.getLength();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = scriptNode0.getIndexForNameNode((com.google.javascript.rhino.head.Node) astRoot9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(symbolArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(commentArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{\n}\n" + "'", str46, "{\n}\n");
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test02608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02608");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasChildren();
        int int7 = astRoot0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getNextTempName();
        int int10 = scriptNode8.depth();
        com.google.javascript.rhino.head.ast.Comment comment11 = null;
        scriptNode8.setJsDocNode(comment11);
        com.google.javascript.rhino.head.Node node13 = scriptNode8.getLastSibling();
        astRoot0.target = scriptNode8;
        int int15 = scriptNode8.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray25 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList26, symbolArray25);
        scriptNode21.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode21.getTop();
        scriptNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode29);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertNotNull(symbolArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(scriptNode29);
    }

    @Test
    public void test02609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02609");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException10 = errorReporter4.runtimeError("8\tSCRIPT 8 1\n", "", 761599885, "", (-61111));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -61111");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertNotNull(errorReporter4);
    }

    @Test
    public void test02610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02610");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        java.lang.Class<?> wildcardClass4 = compilerEnvirons0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test02611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02611");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) '#', "\210");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test02612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02612");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        astRoot12.putIntProp(191686611, 5);
        com.google.javascript.rhino.head.Node node34 = astRoot12.target;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node35 = node34.getLastChild();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(node34);
    }

    @Test
    public void test02613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02613");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        int int6 = scriptNode1.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scope10.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node15 = node14.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        node14.addChildToFront((com.google.javascript.rhino.head.Node) scope16);
        scope10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, node14);
        scope10.setRelative(5);
        scriptNode1.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = astRoot23.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = astRoot23.spliterator();
        com.google.javascript.rhino.head.Node node34 = astRoot23.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        scope35.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode37.getChildScopes();
        scriptNode37.clearParentScope();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode1, node34, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = node34.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node44 = nodeIterator43.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(scopeList40);
    }

    @Test
    public void test02614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02614");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        boolean boolean52 = astRoot51.hasSideEffects();
        astRoot15.addChildToBack((com.google.javascript.rhino.head.Node) astRoot51);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = astRoot15.getExistingIntProp(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test02615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02615");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1568335506));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02616");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons1.getErrorReporter();
        boolean boolean5 = compilerEnvirons1.isGenerateObserverCount();
        compilerEnvirons1.setRecordingComments(true);
        boolean boolean8 = compilerEnvirons1.isGenerateObserverCount();
        boolean boolean9 = compilerEnvirons1.isGenerateDebugInfo();
        compilerEnvirons1.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory16 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1, errorReporter15);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = iRFactory16.transformTree(astRoot38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode51.toSource(0);
        scriptNode51.setEncodedSourceBounds(12, 10);
        astRoot38.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode63 = astRoot62.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode64.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) scriptNode64);
        int int68 = astRoot60.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scope69.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot60, scope69);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope69);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        scope73.addChild((com.google.javascript.rhino.head.ast.AstNode) scope74);
        boolean boolean76 = scope73.hasSideEffects();
        int int77 = scope69.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope73);
        java.lang.String str79 = scope69.toSource(19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot80 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int81 = astRoot80.getParamCount();
        astRoot80.setEndLineno((int) (byte) 100);
        java.lang.String str85 = astRoot80.toSource((int) (short) 0);
        astRoot80.setInStrictMode(false);
        scope69.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot80);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) astRoot80, 11);
        com.google.javascript.rhino.head.Node node91 = scriptNode51.getLastChild();
        scriptNode51.removeProp(627479866);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump94 = scriptNode51.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{\n}\n" + "'", str53, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertNull(astNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-555728693) + "'", int77 == (-555728693));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "                                      {\n                                      }\n" + "'", str79, "                                      {\n                                      }\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(node91);
    }

    @Test
    public void test02617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02617");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        com.google.javascript.rhino.head.Node node11 = astRoot4.getLastSibling();
        int int12 = node11.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        java.lang.String str20 = astRoot13.toSource(0);
        java.lang.String str22 = astRoot13.toSource(25);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope3, node11, (com.google.javascript.rhino.head.Node) astRoot13);
        int int26 = astRoot13.getIntProp(4, (-1593445669));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = astRoot13.getTop();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.addRegExp(regExpLiteral28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1593445669) + "'", int26 == (-1593445669));
        org.junit.Assert.assertNotNull(scriptNode27);
    }

    @Test
    public void test02618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02618");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        int int14 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastChild();
        int int16 = scriptNode11.getEndLineno();
        astRoot3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.lang.String str18 = scriptNode11.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = scriptNode11.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor20 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode11.visit(nodeVisitor20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(functionNode19);
    }

    @Test
    public void test02619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02619");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        astRoot53.addChildScope(scope55);
        java.lang.String str59 = astRoot53.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        java.lang.String str62 = astRoot60.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode63.getSymbols();
        java.lang.String str65 = astRoot60.toStringTree(scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope67.setTop(scriptNode69);
        java.lang.String str72 = scope67.toSource(12);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope67);
        astRoot50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray77 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList78, symbolArray77);
        astRoot75.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList78);
        astRoot75.clearParentScope();
        astRoot50.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = astRoot84.getAstRoot();
        java.lang.String str86 = astRoot85.shortName();
        java.lang.String str87 = astRoot85.getSourceName();
        int int88 = astRoot85.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) astRoot85);
        astRoot75.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot85);
        com.google.javascript.rhino.head.Node node92 = astRoot85.setType((int) (short) 10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor93 = astRoot85.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode94 = astRoot85.getEnclosingFunction();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-483073311) + "'", int51 == (-483073311));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                        {\n                        }\n" + "'", str72, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(symbolArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(astRoot85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "AstRoot" + "'", str86, "AstRoot");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertNotNull(nodeItor93);
        org.junit.Assert.assertNull(functionNode94);
    }

    @Test
    public void test02620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02620");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        int int5 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser14 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter13);
        boolean boolean15 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        boolean boolean16 = compilerEnvirons6.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        compilerEnvirons17.setWarnTrailingComma(false);
        compilerEnvirons17.setAllowSharpComments(false);
        boolean boolean25 = compilerEnvirons17.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        java.lang.String[] strArray38 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        compilerEnvirons26.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons17.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        boolean boolean45 = compilerEnvirons0.isRecordingComments();
        boolean boolean46 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean47 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean50 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test02621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02621");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = astRoot2.getTop();
        astRoot2.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getEndLineno();
        java.lang.Object obj10 = astRoot8.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray11 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet12 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet12, commentArray11);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet12);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet12);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode23.toSource(0);
        scriptNode23.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) '#', node19, (com.google.javascript.rhino.head.Node) scope22, (com.google.javascript.rhino.head.Node) scriptNode23, 2);
        astRoot6.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        java.lang.String str32 = astRoot6.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot33.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot33.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = astRoot33.getComments();
        astRoot33.setEncodedSourceEnd(11);
        int int48 = astRoot6.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        int int49 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = astRoot51.getAstRoot();
        java.lang.String str53 = astRoot52.shortName();
        com.google.javascript.rhino.head.Node node54 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node55 = node54.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        node54.addChildToFront((com.google.javascript.rhino.head.Node) scope56);
        int int58 = scope56.getLineno();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scope56, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        astRoot52.addChildrenToFront((com.google.javascript.rhino.head.Node) scope62);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator65 = astRoot52.new NodeIterator();
        int int66 = astRoot52.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        java.lang.String str70 = scope69.toSource();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(703513808, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scope69, (-819749953));
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node77 = scope76.getNext();
        scope76.setLineno((int) (byte) 100);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(548641306, (com.google.javascript.rhino.head.Node) scope76, 1);
        // The following exception was thrown during execution in test generation
        try {
            scope69.setFinally((com.google.javascript.rhino.head.Node) scope76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(commentArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str32, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(commentSet45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-728092037) + "'", int49 == (-728092037));
        org.junit.Assert.assertNotNull(astRoot52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AstRoot" + "'", str53, "AstRoot");
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{\n}\n" + "'", str70, "{\n}\n");
        org.junit.Assert.assertNull(node77);
    }

    @Test
    public void test02622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02622");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.removeProp(8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = astRoot31.getAstRoot();
        java.lang.String str33 = astRoot32.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = astRoot32.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray37 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList38, symbolArray37);
        astRoot35.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        scriptNode34.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        astRoot48.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.Node node58 = scriptNode56.target;
        int int59 = scriptNode56.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node60 = scriptNode56.getLastChild();
        int int61 = scriptNode56.getEndLineno();
        astRoot48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap63 = astRoot48.getSymbolTable();
        int int64 = astRoot48.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setLoop((com.google.javascript.rhino.head.ast.Jump) astRoot48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AstRoot" + "'", str33, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(symbolArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test02623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02623");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) -1);
    }

    @Test
    public void test02624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02624");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean9 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setAllowSharpComments(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02625");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(444385247, 0);
    }

    @Test
    public void test02626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02626");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(953557037);
        int int2 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        boolean boolean9 = astRoot3.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        astRoot10.addChildScope(scope12);
        java.lang.String str16 = astRoot10.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        astRoot10.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot17);
        astRoot17.setPosition(25);
        java.lang.String str24 = astRoot17.toSource(17);
        astRoot17.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        boolean boolean27 = scope26.hasSideEffects();
        astRoot3.addChildAfter((com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, scope26);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = scope26.getExistingIntProp((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test02627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02627");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02628");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = astRoot14.getAstRoot();
        java.lang.String str28 = astRoot27.debugPrint();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str28, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test02629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02629");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        int int50 = astRoot37.getAbsolutePosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = astRoot37.getChildScopes();
        com.google.javascript.rhino.head.ast.Comment comment52 = astRoot37.getJsDocNode();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNull(comment52);
    }

    @Test
    public void test02630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02630");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isGenerateDebugInfo();
        compilerEnvirons6.setIdeMode(false);
        compilerEnvirons6.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        boolean boolean23 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter24);
        compilerEnvirons0.setErrorReporter(errorReporter24);
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean28 = compilerEnvirons0.isRecordingComments();
        boolean boolean29 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test02631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02631");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel(663275392);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 663275392");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02632");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingComments(true);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test02633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02633");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(129, "java.io.IOException");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test02634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02634");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-389600783), 278475323);
    }

    @Test
    public void test02635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02635");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        com.google.javascript.rhino.head.Node node39 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.Node node40 = astRoot32.target;
        astRoot12.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.Node node42 = astRoot32.getLastChild();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node42);
    }

    @Test
    public void test02636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02636");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.Scope scope10 = astRoot0.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.clearParentScope();
        boolean boolean18 = scriptNode14.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = scope22.spliterator();
        astRoot20.addChildScope(scope22);
        java.lang.String str26 = astRoot20.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        java.lang.String str29 = astRoot27.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode30.getSymbols();
        java.lang.String str32 = astRoot27.toStringTree(scriptNode30);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.lang.String str39 = scope34.toSource(12);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope34);
        astRoot20.setBaseLineno(19);
        scriptNode14.addChildToBack((com.google.javascript.rhino.head.Node) astRoot20);
        astRoot20.removeChildren();
        scope13.addChildToFront((com.google.javascript.rhino.head.Node) astRoot20);
        // The following exception was thrown during execution in test generation
        try {
            scope10.setParentScope(scope13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertNotNull(symbolList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                        {\n                        }\n" + "'", str39, "                        {\n                        }\n");
    }

    @Test
    public void test02637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02637");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getNextTempName();
        com.google.javascript.rhino.head.Node node12 = scriptNode10.target;
        scriptNode10.setBounds((int) (byte) -1, 23);
        int int16 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode17.setEncodedSourceBounds((int) (short) 100, 10);
        int int25 = scriptNode17.getIntProp(0, 9);
        astRoot4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol34 = astRoot30.getSymbol("java.io.IOException: ");
        astRoot30.setEncodedSourceStart(0);
        java.lang.String str38 = astRoot30.toSource(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray48 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList49, symbolArray48);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scriptNode44.getTop();
        int int53 = scriptNode52.getEncodedSourceEnd();
        astRoot30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Node node55 = astRoot30.getLastChild();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator57 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator58 = positionComparator56.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode63 = astRoot62.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode64.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int71 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot62, (com.google.javascript.rhino.head.ast.AstNode) scope70);
        astRoot62.removeChildren();
        java.lang.String str74 = astRoot62.toSource(10);
        int int75 = astRoot62.getAbsolutePosition();
        java.lang.String str76 = node55.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = astRoot62.getAstRoot();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((-1291599107), (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot77, (int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode82.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str85 = scriptNode82.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope88 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode82, (com.google.javascript.rhino.head.Node) scope88, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot91 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot92 = astRoot91.getAstRoot();
        java.lang.String str93 = astRoot92.shortName();
        java.lang.String str94 = astRoot92.getSourceName();
        astRoot92.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap96 = astRoot92.getSymbolTable();
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope88, (com.google.javascript.rhino.head.Node) astRoot92);
        astRoot92.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            astRoot77.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) astRoot92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(symbol34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNotNull(symbolArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(astNodeComparator58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertNull(astNode63);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(astRoot77);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "$0" + "'", str85, "$0");
        org.junit.Assert.assertNotNull(astRoot92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "AstRoot" + "'", str93, "AstRoot");
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(strMap96);
    }

    @Test
    public void test02638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02638");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        int int17 = astRoot2.depth();
        boolean boolean18 = astRoot2.hasSideEffects();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02639");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node4 = scriptNode0.getLastChild();
        int int5 = scriptNode0.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scope9.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node14 = node13.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        node13.addChildToFront((com.google.javascript.rhino.head.Node) scope15);
        scope9.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, node13);
        scope9.setRelative(5);
        scriptNode0.putProp((int) (byte) 1, (java.lang.Object) 5);
        scriptNode0.setLineno((-139315390));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test02640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02640");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons0.reportWarningAsError();
        boolean boolean14 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean16 = compilerEnvirons0.getWarnTrailingComma();
        int int17 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test02641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02641");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(65536);
        com.google.javascript.rhino.head.ast.Scope scope2 = scriptNode1.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("{\n{\n}\n}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope2);
    }

    @Test
    public void test02642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02642");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        boolean boolean34 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02643");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean27 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateObserverCount(false);
        boolean boolean30 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean31 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test02644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02644");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        node1.putProp(0, (java.lang.Object) scriptNode6);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope9 = scriptNode6.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02645");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        astRoot0.setEncodedSourceEnd(520361644);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        int int9 = scriptNode6.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode6.getSymbols();
        scriptNode6.setBaseLineno(19);
        boolean boolean14 = scriptNode6.hasSideEffects();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons15.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons15);
        scriptNode6.setCompilerData((java.lang.Object) parser33);
        astRoot0.setTop(scriptNode6);
        java.lang.String str37 = scriptNode6.makeIndent((-131519396));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test02646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02646");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        node1.putProp(0, (java.lang.Object) scriptNode6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode6.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node10 = nodeIterator9.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02647");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = astRoot4.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = astRoot4.getSymbols();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = astRoot18.getTop();
        com.google.javascript.rhino.head.Node node21 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node22 = node21.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        node21.addChildToFront((com.google.javascript.rhino.head.Node) scope23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = scope23.getAstRoot();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(437731425, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scope23, (int) (short) 100);
        int int28 = astRoot18.getFunctionCount();
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(astRoot25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test02648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02648");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        java.lang.String str5 = astRoot1.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        java.lang.String str11 = astRoot7.makeIndent(18);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot7, 526823265);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean19 = compilerEnvirons14.recoverFromErrors();
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons14.getActivationNames();
        compilerEnvirons14.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = parser23.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot27.setEncodedSourceEnd(4);
        astRoot27.setEncodedSource("$0");
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot27);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = astRoot27.getSymbols();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                    " + "'", str11, "                                    ");
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertNotNull(symbolList33);
    }

    @Test
    public void test02649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02649");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scope7.spliterator();
        astRoot5.addChildScope(scope7);
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot5);
        com.google.javascript.rhino.head.ast.Symbol symbol12 = astRoot5.getSymbol("                  ");
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = scope14.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node18 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node19 = node18.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        node18.addChildToFront((com.google.javascript.rhino.head.Node) scope20);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode17, node18);
        int int23 = scriptNode17.getEncodedSourceEnd();
        astRoot5.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = astRoot5.getSymbols();
        astRoot5.clearParentScope();
        astRoot5.setEncodedSource("-1\t  SCRIPT 0 1\n");
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray29 = astRoot5.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNull(symbol12);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(symbolList25);
    }

    @Test
    public void test02650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02650");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        scriptNode0.setLineno((int) (byte) -1);
        java.lang.String str6 = scriptNode0.toSource(24);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode12.toSource(0);
        scriptNode12.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.ast.Comment[] commentArray47 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet48 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet48, commentArray47);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        scope8.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) astRoot38);
        int int52 = astRoot38.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node53 = astRoot38.getLastSibling();
        scriptNode0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot38);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node55 = scriptNode0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                {\n                                                }\n" + "'", str6, "                                                {\n                                                }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{\n}\n" + "'", str14, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(commentArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(node53);
    }

    @Test
    public void test02651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02651");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode5.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode5.getFunctions();
        scriptNode5.clearParentScope();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertNotNull(functionNodeList10);
    }

    @Test
    public void test02652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02652");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = astRoot4.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = astRoot4.getSymbols();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = astRoot18.getTop();
        com.google.javascript.rhino.head.Node node21 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node22 = node21.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        node21.addChildToFront((com.google.javascript.rhino.head.Node) scope23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = scope23.getAstRoot();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(437731425, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scope23, (int) (short) 100);
        int int28 = astRoot18.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node29 = astRoot18.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(astRoot25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test02653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02653");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean11 = compilerEnvirons0.isStrictMode();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel(26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 26");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02654");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getEndLineno();
        java.lang.Object obj25 = astRoot23.getCompilerData();
        astRoot16.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot23);
        astRoot23.setPosition(25);
        astRoot23.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope32.setTop(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        scriptNode34.setCompilerData((java.lang.Object) scope37);
        scriptNode34.setEncodedSourceEnd(0);
        int int42 = scriptNode34.getType();
        astRoot23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        com.google.javascript.rhino.head.Node node45 = astRoot23.setType(20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node46 = iRFactory15.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can't transform: 20");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 136 + "'", int42 == 136);
        org.junit.Assert.assertNotNull(node45);
    }

    @Test
    public void test02655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02655");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(25);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "%" + "'", str1, "%");
    }

    @Test
    public void test02656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02656");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope4 = astRoot0.getDefiningScope("java.io.IOException: ");
        int int5 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        int int14 = scriptNode10.getIntProp((int) 'a', 19);
        int int15 = scriptNode10.getFunctionCount();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-52), (com.google.javascript.rhino.head.Node) scriptNode10);
        astRoot0.setTop(scriptNode10);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.setString("{\n  {\n  }\n}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 19 + "'", int14 == 19);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02657");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        astRoot1.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot1.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        astRoot5.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        astRoot5.visitComments(nodeVisitor8);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons10.getErrorReporter();
        boolean boolean14 = compilerEnvirons10.isGenerateObserverCount();
        boolean boolean15 = compilerEnvirons10.recoverFromErrors();
        java.util.Set<java.lang.String> strSet16 = compilerEnvirons10.getActivationNames();
        boolean boolean17 = compilerEnvirons10.reportWarningAsError();
        compilerEnvirons10.setWarnTrailingComma(false);
        boolean boolean20 = compilerEnvirons10.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        astRoot22.checkParentLinks();
        com.google.javascript.rhino.head.Node node29 = astRoot22.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setStrictMode(true);
        boolean boolean34 = compilerEnvirons31.recoverFromErrors();
        compilerEnvirons31.setRecordingComments(true);
        astRoot22.putProp(11, (java.lang.Object) true);
        astRoot22.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = iRFactory21.transformTree(astRoot22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode45 = astRoot44.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) scriptNode46);
        int int50 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot42, scope51);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap54 = astRoot42.getSymbolTable();
        astRoot22.setSymbolTable(strMap54);
        astRoot5.setSymbolTable(strMap54);
        astRoot5.setRelative(541550340);
        com.google.javascript.rhino.head.Node node59 = astRoot5.getLastSibling();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(14, node59);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode68.toSource(0);
        scriptNode68.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node((int) '#', node64, (com.google.javascript.rhino.head.Node) scope67, (com.google.javascript.rhino.head.Node) scriptNode68, 2);
        com.google.javascript.rhino.head.Node node76 = scope67.getLastChild();
        java.lang.String str77 = scope67.shortName();
        // The following exception was thrown during execution in test generation
        try {
            node59.setScope(scope67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(astNode45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{\n}\n" + "'", str70, "{\n}\n");
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Scope" + "'", str77, "Scope");
    }

    @Test
    public void test02658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02658");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 136);
        java.lang.String str2 = node1.getJsDoc();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test02659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02659");
        com.google.javascript.rhino.head.Parser parser1 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = parser1.parse("", "-1\tSCRIPT -1 1\n", 19);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) astRoot5);
        java.lang.Object obj8 = node6.getProp(23890841);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test02660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02660");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.Node node15 = scope6.getLastChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = scope6.getTop();
        com.google.javascript.rhino.head.ast.Comment comment17 = scope6.getJsDocNode();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(scriptNode16);
        org.junit.Assert.assertNull(comment17);
    }

    @Test
    public void test02661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02661");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int29 = astRoot14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node32 = astRoot14.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.Node node39 = scope37.getFirstChild();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope37);
        astRoot33.target = node40;
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = astRoot33.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = scope44.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node48 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node49 = node48.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        node48.addChildToFront((com.google.javascript.rhino.head.Node) scope50);
        scope44.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, node48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getParamCount();
        java.lang.String str55 = node48.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot53);
        java.lang.String str56 = astRoot53.getNextTempName();
        boolean boolean57 = astRoot53.hasSideEffects();
        java.lang.String str59 = astRoot53.toSource(100);
        node32.addChildAfter((com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(24, node32);
        com.google.javascript.rhino.head.ast.Comment comment62 = node32.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope63 = comment62.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(astRoot42);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(comment62);
    }

    @Test
    public void test02662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02662");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str14 = astRoot10.toSource((int) 'a');
        int int15 = astRoot10.getPosition();
        astRoot10.setLength((int) (short) 1);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test02663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02663");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        int int3 = astRoot0.getLineno();
        boolean boolean4 = astRoot0.hasSideEffects();
        java.lang.String str5 = astRoot0.getSourceName();
        java.lang.String str6 = astRoot0.getJsDoc();
        int int9 = astRoot0.getIntProp((-2110645446), 3);
        java.lang.String str11 = astRoot0.toSource((-280309866));
        com.google.javascript.rhino.head.ast.Comment comment12 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addComment(comment12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02664");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        astRoot1.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot1.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        astRoot5.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        astRoot5.visitComments(nodeVisitor8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode(3);
        com.google.javascript.rhino.head.ast.Symbol symbol13 = scriptNode11.getSymbol("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int24 = astRoot16.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot16, scope25);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot5.visit(nodeVisitor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertNull(symbol13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test02665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02665");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean6 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setGenerateObserverCount(true);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02666");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel(97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 97");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter19);
    }

    @Test
    public void test02667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02667");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        java.lang.String str5 = astRoot1.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        java.lang.String str11 = astRoot7.makeIndent(18);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot7, 526823265);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean19 = compilerEnvirons14.recoverFromErrors();
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons14.getActivationNames();
        compilerEnvirons14.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = parser23.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot27.setEncodedSourceEnd(4);
        astRoot27.setEncodedSource("$0");
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot27);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope33 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                    " + "'", str11, "                                    ");
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(astRoot27);
    }

    @Test
    public void test02668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02668");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '#', node32, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode36, 2);
        com.google.javascript.rhino.head.Node node44 = scope35.getLastChild();
        com.google.javascript.rhino.head.Node node45 = astRoot1.getChildBefore(node44);
        java.lang.String str47 = astRoot1.toSource(11);
        astRoot1.removeProp((-443001414));
        com.google.javascript.rhino.head.Node node50 = astRoot1.getFirstChild();
        int int51 = astRoot1.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int53 = astRoot1.addFunction(functionNode52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test02669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02669");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot1.getFunctions();
        astRoot1.checkParentLinks();
        boolean boolean7 = astRoot1.hasChildren();
        int int8 = astRoot1.getLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = null;
        astRoot1.setSymbolTable(strMap9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor33 = scope29.iterator();
        astRoot12.setParentScope(scope29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot12.getAstRoot();
        astRoot1.target = astRoot35;
        astRoot1.setLineno(18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator43 = scope42.spliterator();
        astRoot40.addChildScope(scope42);
        java.lang.String str46 = astRoot40.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        java.lang.String str49 = astRoot47.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode50.getSymbols();
        java.lang.String str52 = astRoot47.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope54.setTop(scriptNode56);
        java.lang.String str59 = scope54.toSource(12);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scope54);
        int int61 = astRoot40.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setLoop((com.google.javascript.rhino.head.ast.Jump) astRoot40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(functionNodeList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(nodeItor33);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "136" + "'", str49, "136");
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "                        {\n                        }\n" + "'", str59, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test02670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02670");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope4 = astRoot0.getDefiningScope("java.io.IOException: ");
        int int5 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        int int14 = scriptNode10.getIntProp((int) 'a', 19);
        int int15 = scriptNode10.getFunctionCount();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-52), (com.google.javascript.rhino.head.Node) scriptNode10);
        astRoot0.setTop(scriptNode10);
        astRoot0.removeChildren();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 19 + "'", int14 == 19);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02671");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean13 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons14.getErrorReporter();
        compilerEnvirons14.setRecordingLocalJsDocComments(true);
        boolean boolean22 = compilerEnvirons14.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean24 = compilerEnvirons23.recoverFromErrors();
        int int25 = compilerEnvirons23.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory28 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter26);
        boolean boolean29 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setRecoverFromErrors(false);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(249997463);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 249997463");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test02672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02672");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        astRoot2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        scope19.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        scope19.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        boolean boolean77 = astRoot66.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = astRoot66.getTop();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.Node node80 = node79.getLastChild();
        int int81 = node80.getLineno();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test02673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02673");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        int int5 = astRoot0.getPosition();
        int int6 = astRoot0.getPosition();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getLastSibling();
        java.lang.String str8 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.putSymbol(symbol9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test02674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02674");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getLastChild();
        java.lang.Object obj5 = astRoot1.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setDouble((double) 548641306);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(obj5);
    }

    @Test
    public void test02675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02675");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        scriptNode29.removeChildren();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.visit(nodeVisitor31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
    }

    @Test
    public void test02676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02676");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int29 = astRoot14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node32 = astRoot14.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.Node node39 = scope37.getFirstChild();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope37);
        astRoot33.target = node40;
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = astRoot33.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = scope44.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node48 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node49 = node48.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        node48.addChildToFront((com.google.javascript.rhino.head.Node) scope50);
        scope44.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, node48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getParamCount();
        java.lang.String str55 = node48.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot53);
        java.lang.String str56 = astRoot53.getNextTempName();
        boolean boolean57 = astRoot53.hasSideEffects();
        java.lang.String str59 = astRoot53.toSource(100);
        node32.addChildAfter((com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(24, node32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = astRoot62.getAstRoot();
        java.lang.String str64 = astRoot63.shortName();
        java.lang.String str65 = astRoot63.getSourceName();
        astRoot63.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = astRoot63.getTop();
        com.google.javascript.rhino.head.Node node68 = scriptNode67.target;
        node61.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode67);
        com.google.javascript.rhino.head.Node node70 = node61.getLastChild();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(astRoot42);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(astRoot63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AstRoot" + "'", str64, "AstRoot");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(node70);
    }

    @Test
    public void test02677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02677");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        com.google.javascript.rhino.head.Node node7 = astRoot0.getLastSibling();
        int int8 = node7.getType();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        boolean boolean13 = compilerEnvirons10.recoverFromErrors();
        compilerEnvirons10.setRecordingComments(true);
        boolean boolean16 = compilerEnvirons10.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        compilerEnvirons17.setErrorReporter(errorReporter23);
        com.google.javascript.rhino.head.IRFactory iRFactory25 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons10, errorReporter23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.lang.String str33 = astRoot27.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        java.lang.String str39 = astRoot34.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope41.setTop(scriptNode43);
        java.lang.String str46 = scope41.toSource(12);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot49, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = astRoot49.getComments();
        node47.addChildToBack((com.google.javascript.rhino.head.Node) astRoot49);
        com.google.javascript.rhino.head.Node node55 = astRoot49.getLastSibling();
        com.google.javascript.rhino.head.Node node56 = iRFactory25.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        node7.putProp((int) 'a', (java.lang.Object) astRoot49);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList58 = astRoot49.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = astRoot49.getParamOrVarName(1403594947);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 136 + "'", int8 == 136);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                        {\n                        }\n" + "'", str46, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNull(commentSet53);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(astNodeList58);
    }

    @Test
    public void test02678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02678");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.setEncodedSourceBounds(12, 10);
        scriptNode0.setSourceName("");
        boolean boolean8 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scope11.spliterator();
        astRoot9.addChildScope(scope11);
        java.lang.String str15 = astRoot9.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        astRoot9.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot16);
        java.lang.String str20 = astRoot9.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setLoop((com.google.javascript.rhino.head.ast.Jump) astRoot9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$1" + "'", str20, "$1");
    }

    @Test
    public void test02679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02679");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.Node node3 = astRoot0.getFirstChild();
        astRoot0.setRelative(6);
        com.google.javascript.rhino.head.ast.Symbol symbol6 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.putSymbol(symbol6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test02680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02680");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = astRoot14.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor28 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot27.visitAll(nodeVisitor28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(astRoot27);
    }

    @Test
    public void test02681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02681");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        java.lang.Object obj18 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = scope20.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        scope20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode23, node24);
        scriptNode23.flattenSymbolTable(false);
        int int31 = scriptNode23.getType();
        java.lang.String str32 = scriptNode23.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        astRoot33.addChildScope(scope35);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = astRoot33.getChildScopes();
        scriptNode23.setCompilerData((java.lang.Object) scopeList38);
        int int40 = scriptNode23.getPosition();
        java.lang.String[] strArray41 = scriptNode23.getParamAndVarNames();
        astRoot12.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        int int43 = astRoot12.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            int int44 = astRoot12.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertNotNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test02682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02682");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        boolean boolean32 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean33 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test02683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02683");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope15 = node14.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02684");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator7 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        int int17 = positionComparator7.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode11, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        java.lang.String str24 = astRoot18.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = astRoot18.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode30 = astRoot29.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int35 = positionComparator7.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot18, (com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor38 = null;
        astRoot37.visitComments(nodeVisitor38);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope41.setTop(scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        scriptNode43.setCompilerData((java.lang.Object) scope46);
        scriptNode43.setEncodedSourceEnd(0);
        int int51 = positionComparator7.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot37, (com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 0);
        astRoot37.addChildToFront(node53);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot37);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral56 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot37.addRegExp(regExpLiteral56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(astNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 11 + "'", int51 == 11);
    }

    @Test
    public void test02685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02685");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons3.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter6);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(956776324);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 956776324");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02686");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 444385247);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02687");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scope28.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node33 = node32.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        node32.addChildToFront((com.google.javascript.rhino.head.Node) scope34);
        scope28.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, node32);
        scriptNode31.flattenSymbolTable(false);
        int int39 = scriptNode31.getType();
        scriptNode31.setBaseLineno(5);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode31.getSymbols();
        scriptNode31.setEncodedSourceEnd((-1568335506));
        scriptNode31.setBounds(26, 8);
        java.lang.String str49 = scriptNode31.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1022253418 + "'", int42 == 1022253418);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "136" + "'", str49, "136");
    }

    @Test
    public void test02688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02688");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '#', node32, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode36, 2);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.setTop(scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        scriptNode47.setCompilerData((java.lang.Object) scope50);
        scriptNode47.setEncodedSourceEnd(0);
        int int55 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode36, (com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope57.setTop(scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        scriptNode59.setCompilerData((java.lang.Object) scope62);
        scriptNode59.setEncodedSourceEnd(0);
        java.lang.String str67 = scriptNode59.getEncodedSource();
        int int68 = scriptNode59.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode47.setFinally((com.google.javascript.rhino.head.Node) scriptNode59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test02689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02689");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        int int15 = scriptNode11.getEncodedSourceEnd();
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = astRoot18.getAstRoot();
        java.lang.String str20 = astRoot19.shortName();
        com.google.javascript.rhino.head.Node node21 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node22 = node21.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        node21.addChildToFront((com.google.javascript.rhino.head.Node) scope23);
        int int25 = scope23.getLineno();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scope23, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getEndLineno();
        java.lang.Object obj30 = astRoot28.getCompilerData();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        int int32 = astRoot28.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getNextTempName();
        java.lang.String str36 = scriptNode34.debugPrint();
        scriptNode34.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        java.lang.String str42 = astRoot40.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode43.getSymbols();
        java.lang.String str45 = astRoot40.toStringTree(scriptNode43);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getEndLineno();
        java.lang.Object obj51 = astRoot49.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray52 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet53, commentArray52);
        astRoot49.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        int int57 = astRoot47.getRegexpCount();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot47, 550287075);
        int int60 = astRoot47.depth();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode3.replaceChild((com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot47);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(astRoot19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AstRoot" + "'", str20, "AstRoot");
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 136 + "'", int32 == 136);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "136" + "'", str42, "136");
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(commentArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test02690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02690");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.recoverFromErrors();
        boolean boolean9 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02691");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node7 = astRoot0.target;
        int int8 = astRoot0.getLineno();
        boolean boolean9 = astRoot0.hasChildren();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02692");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.Comment comment6 = null;
        scriptNode4.setJsDocNode(comment6);
        int int8 = scriptNode4.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scope10.getChildScopes();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) scope10, (int) (short) 10);
        java.lang.Object obj15 = scope10.getProp((-1));
        com.google.javascript.rhino.head.Node node16 = scope10.getLastSibling();
        int int17 = scope10.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot(9);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node20 = scope10.getChildBefore((com.google.javascript.rhino.head.Node) astRoot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 20 + "'", int17 == 20);
    }

    @Test
    public void test02693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02693");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-1282335040));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -1282335040");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02694");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        java.lang.String str11 = astRoot2.debugPrint();
        int int12 = astRoot2.getEndLineno();
        int int13 = astRoot2.getAbsolutePosition();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        boolean boolean17 = compilerEnvirons14.isAllowMemberExprAsFunctionName();
        compilerEnvirons14.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = iRFactory20.parse("{\n}\n", "java.io.IOException: java.io.IOException", (int) ' ');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = astRoot24.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode30 = astRoot29.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode31);
        astRoot29.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        int int40 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node41 = scriptNode37.getLastChild();
        int int42 = scriptNode37.getEndLineno();
        astRoot29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap44 = astRoot29.getSymbolTable();
        astRoot29.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot24, (com.google.javascript.rhino.head.ast.Scope) astRoot29);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot29);
        astRoot29.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump50 = astRoot29.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str11, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(astNode30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test02695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02695");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        compilerEnvirons10.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter16.error("2\tBLOCK 2 -1\n", "com.google.javascript.rhino.head.EvaluatorException:   {\n  }\n", 441866554, "0", 249997463);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: 2?BLOCK 2 -1? (com.google.javascript.rhino.head.EvaluatorException:   {?  }?#441866554)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter16);
    }

    @Test
    public void test02696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02696");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        java.lang.String str14 = astRoot7.toSource(17);
        astRoot7.clearParentScope();
        int int16 = astRoot7.getAbsolutePosition();
        int int17 = astRoot7.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.putSymbol(symbol18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 25 + "'", int16 == 25);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test02697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02697");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = astRoot3.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = astRoot3.getSymbols();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Node node18 = scriptNode16.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode16.getFunctions();
        int int20 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getNextTempName();
        com.google.javascript.rhino.head.Node node23 = scriptNode21.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = scriptNode21.getFunctions();
        int int25 = scriptNode21.getEncodedSourceEnd();
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode31 = astRoot30.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int36 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot28, scope37);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = astRoot28.getSymbolTable();
        scriptNode16.setSymbolTable(strMap40);
        scriptNode0.setSymbolTable(strMap40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = scriptNode0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(functionNodeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(astNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test02698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02698");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons0.getErrorReporter();
        errorReporter17.warning("", "/=", 953557037, "$0", (int) (byte) 10);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException29 = errorReporter17.runtimeError("        {\n        }\n", "java.io.IOException: java.io.IOException: hi!", 14, "26\tSCRIPT 26 1\n", 362700701);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertNotNull(evaluatorException29);
    }

    @Test
    public void test02699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02699");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.lang.String str35 = scope30.toSource(12);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope30);
        astRoot16.setBaseLineno(19);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, 26);
        scope11.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot16, node42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        int int47 = scriptNode44.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastChild();
        int int49 = scriptNode44.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scriptNode44.getSymbolTable();
        astRoot16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        astRoot16.removeChildren();
        boolean boolean53 = astRoot16.hasSideEffects();
        com.google.javascript.rhino.head.Node node54 = astRoot16.getLastChild();
        com.google.javascript.rhino.head.ast.Comment comment55 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot16.addComment(comment55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                        {\n                        }\n" + "'", str35, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(node54);
    }

    @Test
    public void test02700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02700");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        int int30 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode24, (com.google.javascript.rhino.head.ast.AstNode) scope27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator20);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator20.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator20.reversed();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean36 = scope35.hasChildren();
        java.lang.String str37 = scope35.shortName();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = scope35.getSymbol("                    ");
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scope35.getStatements();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator42 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator43 = positionComparator41.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode48 = astRoot47.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode49.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int56 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot47, (com.google.javascript.rhino.head.ast.AstNode) scope55);
        astRoot47.removeChildren();
        java.lang.String str59 = astRoot47.toSource(10);
        astRoot47.flattenSymbolTable(true);
        int int62 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scope35, (com.google.javascript.rhino.head.ast.AstNode) astRoot47);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor63 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot47.visitAll(nodeVisitor63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Scope" + "'", str37, "Scope");
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertNotNull(astNodeList40);
        org.junit.Assert.assertNotNull(astNodeComparator43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(astNode48);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 25 + "'", int62 == 25);
    }

    @Test
    public void test02701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02701");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        scriptNode0.setEncodedSource("                  {\n                  }\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test02702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02702");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        astRoot20.setPosition((int) (short) -1);
        java.lang.Object obj35 = astRoot20.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            astRoot20.setString("                ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test02703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02703");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        java.lang.String str3 = scriptNode1.toSource((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node4 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
    }

    @Test
    public void test02704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02704");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getRegexpCount();
        com.google.javascript.rhino.head.Node node17 = astRoot3.getNext();
        astRoot3.setBaseLineno(10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = astRoot3.getComments();
        astRoot3.setLength((-12));
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot3.getParent();
        astRoot3.setBounds(775058292, 653625563);
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.setBaseLineno((-732722335));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(commentSet20);
        org.junit.Assert.assertNull(astNode23);
    }

    @Test
    public void test02705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02705");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        java.lang.String str27 = astRoot0.getJsDoc();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addRegExp(regExpLiteral28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test02706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02706");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = null;
        astRoot0.setTop(scriptNode7);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.setEncodedSourceBounds(12, 10);
        scriptNode12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = scope23.spliterator();
        astRoot21.addChildScope(scope23);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = astRoot21.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        boolean boolean30 = scope27.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope27, scope31);
        astRoot21.replaceWith(scope27);
        int int36 = astRoot21.getEncodedSourceEnd();
        scriptNode14.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot21);
        astRoot21.setEncodedSourceBounds(8, 1471166993);
        int int43 = astRoot21.getIntProp((-543879055), (-11));
        astRoot0.target = astRoot21;
        com.google.javascript.rhino.head.Node node45 = astRoot0.target;
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral46 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addRegExp(regExpLiteral46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator24);
        org.junit.Assert.assertNotNull(scopeList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-11) + "'", int43 == (-11));
        org.junit.Assert.assertNotNull(node45);
    }

    @Test
    public void test02707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02707");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        java.io.Reader reader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot13 = iRFactory9.parse(reader10, "java.io.IOException: java.io.IOException: ", (-638464135));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02708");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        java.lang.String str11 = astRoot0.toSource();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = astRoot0.getChildScopes();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(scopeList12);
    }

    @Test
    public void test02709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02709");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1438167940));
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray2 = scriptNode1.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02710");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        java.lang.String[] strArray29 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        compilerEnvirons17.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        boolean boolean33 = compilerEnvirons17.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons34.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons34.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException43 = errorReporter37.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        com.google.javascript.rhino.head.Parser parser44 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17, errorReporter37);
        compilerEnvirons0.setErrorReporter(errorReporter37);
        boolean boolean46 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(evaluatorException43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test02711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02711");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        astRoot2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        scope19.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        scope19.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        boolean boolean77 = astRoot66.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = astRoot66.getTop();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode78.setLineno(12);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = scriptNode78.getStatements();
        scriptNode78.setLength(8);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope85 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode78);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertNotNull(astNodeList82);
    }

    @Test
    public void test02712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02712");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node31 = astRoot13.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode33 = astRoot32.getParent();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.Node node38 = scope36.getFirstChild();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope36);
        astRoot32.target = node39;
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = astRoot32.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scope43.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node48 = node47.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        node47.addChildToFront((com.google.javascript.rhino.head.Node) scope49);
        scope43.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode46, node47);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        java.lang.String str54 = node47.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot52);
        java.lang.String str55 = astRoot52.getNextTempName();
        boolean boolean56 = astRoot52.hasSideEffects();
        java.lang.String str58 = astRoot52.toSource(100);
        node31.addChildAfter((com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot52);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor60 = astRoot52.iterator();
        // The following exception was thrown during execution in test generation
        try {
            astRoot52.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(nodeItor60);
    }

    @Test
    public void test02713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02713");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        java.lang.String str36 = astRoot21.toSource(488584366);
        astRoot21.setEncodedSource("java.io.IOException: Scope");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test02714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02714");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.Node node15 = scope6.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot19.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int32 = astRoot17.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor38 = scope34.iterator();
        astRoot17.setParentScope(scope34);
        scope6.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot17);
        astRoot17.setLineno(7);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = astRoot17.getComments();
        com.google.javascript.rhino.head.Node node44 = astRoot17.getLastChild();
        boolean boolean45 = astRoot17.isInStrictMode();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(nodeItor38);
        org.junit.Assert.assertNull(commentSet43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test02715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02715");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test02716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02716");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet10 = compilerEnvirons7.getActivationNames();
        boolean boolean11 = compilerEnvirons7.recoverFromErrors();
        boolean boolean12 = compilerEnvirons7.getWarnTrailingComma();
        boolean boolean13 = compilerEnvirons7.isIdeMode();
        boolean boolean14 = compilerEnvirons7.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons15, errorReporter22);
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter22);
        boolean boolean25 = compilerEnvirons7.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException38 = errorReporter32.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser39 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter32);
        com.google.javascript.rhino.head.IRFactory iRFactory40 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter32);
        java.io.Reader reader41 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot44 = iRFactory40.parse(reader41, "-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n", (-1233410715));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertNotNull(evaluatorException38);
    }

    @Test
    public void test02717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02717");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot4.getRegexpCount();
        com.google.javascript.rhino.head.Node node18 = astRoot4.getNext();
        astRoot4.setBaseLineno(10);
        astRoot4.setEncodedSourceBounds(136, 3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        int int27 = scriptNode24.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node28 = scriptNode24.getLastChild();
        int int29 = scriptNode24.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = scriptNode24.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator35 = scope34.spliterator();
        astRoot32.addChildScope(scope34);
        java.lang.String str38 = astRoot32.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        java.lang.String str41 = astRoot39.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode42.getSymbols();
        java.lang.String str44 = astRoot39.toStringTree(scriptNode42);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.setTop(scriptNode48);
        java.lang.String str51 = scope46.toSource(12);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scope46);
        boolean boolean53 = astRoot32.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.Node node55 = node54.getLastSibling();
        java.lang.Class<?> wildcardClass56 = node55.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "136" + "'", str41, "136");
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                        {\n                        }\n" + "'", str51, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test02718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02718");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.lang.String str10 = astRoot1.debugPrint();
        int int11 = astRoot1.getEndLineno();
        int int12 = astRoot1.getAbsolutePosition();
        int int15 = astRoot1.getIntProp((int) (short) 10, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump16 = astRoot1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str10, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02719");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        astRoot15.setBounds(11, 775058292);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        java.lang.String str49 = astRoot47.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode50.getSymbols();
        java.lang.String str52 = astRoot47.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        int int56 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode50, (com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator60 = scope59.spliterator();
        astRoot57.addChildScope(scope59);
        java.lang.String str63 = astRoot57.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = astRoot57.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str67 = astRoot66.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode69 = astRoot68.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) astRoot68, (com.google.javascript.rhino.head.Node) scriptNode70);
        int int74 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot57, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot66, 24);
        astRoot66.removeChildren();
        java.lang.String str78 = astRoot66.toString();
        astRoot15.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList80 = astRoot66.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            int int81 = astRoot66.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "136" + "'", str49, "136");
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertNull(astNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "136" + "'", str78, "136");
        org.junit.Assert.assertNotNull(functionNodeList80);
    }

    @Test
    public void test02720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02720");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.Node node15 = scope6.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot19.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int32 = astRoot17.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor38 = scope34.iterator();
        astRoot17.setParentScope(scope34);
        scope6.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot17);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = scope42.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node46 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node47 = node46.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        node46.addChildToFront((com.google.javascript.rhino.head.Node) scope48);
        scope42.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode45, node46);
        astRoot17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList52 = astRoot17.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope(122705610, 3);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(541550340, (com.google.javascript.rhino.head.Node) scope56, (int) (short) -1);
        astRoot17.addChildrenToBack(node58);
        java.lang.Object obj61 = node58.getProp((int) (short) 10);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(nodeItor38);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(astNodeList52);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test02721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02721");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(1);
    }

    @Test
    public void test02722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02722");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        scriptNode0.setBounds((int) (byte) -1, 23);
        java.lang.Object obj6 = scriptNode0.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope7 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test02723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02723");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        java.util.Set<java.lang.String> strSet10 = compilerEnvirons0.getActivationNames();
        boolean boolean11 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test02724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02724");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = astRoot34.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor40 = null;
        astRoot32.visitComments(nodeVisitor40);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(526823265, node30, (com.google.javascript.rhino.head.Node) astRoot32, 1);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.setTop(scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        scriptNode47.setCompilerData((java.lang.Object) scope50);
        scriptNode47.setEncodedSourceEnd(0);
        int int55 = scriptNode47.getType();
        java.lang.String str56 = scriptNode47.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope57.addChild((com.google.javascript.rhino.head.ast.AstNode) scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        scriptNode47.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        boolean boolean63 = scriptNode60.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getNextTempName();
        com.google.javascript.rhino.head.Node node66 = scriptNode64.target;
        int int67 = scriptNode64.getBaseLineno();
        node30.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode60, (com.google.javascript.rhino.head.Node) scriptNode64);
        int int69 = scriptNode60.getEncodedSourceStart();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 136 + "'", int55 == 136);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test02725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02725");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode43.toSource(0);
        scriptNode43.setEncodedSourceBounds(12, 10);
        scriptNode41.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        java.lang.String str50 = scriptNode41.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = astRoot51.getAstRoot();
        java.lang.String str53 = astRoot52.shortName();
        java.lang.String str55 = astRoot52.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = astRoot52.getFunctions();
        astRoot52.checkParentLinks();
        boolean boolean58 = astRoot52.hasConsistentReturnUsage();
        int int59 = astRoot52.getRegexpCount();
        scriptNode41.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot52);
        int int63 = astRoot52.getIntProp(25, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = iRFactory37.transformTree(astRoot52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int67 = astRoot66.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int69 = astRoot68.getEndLineno();
        java.lang.Object obj70 = astRoot68.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray71 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet72 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet72, commentArray71);
        astRoot68.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        astRoot68.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getNextTempName();
        com.google.javascript.rhino.head.Node node78 = scriptNode76.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList79 = scriptNode76.getFunctions();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) astRoot68, (com.google.javascript.rhino.head.Node) scriptNode76);
        astRoot66.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet84 = astRoot66.getComments();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = astRoot66.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node86 = iRFactory37.transform((com.google.javascript.rhino.head.ast.AstNode) functionNode85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{\n}\n" + "'", str45, "{\n}\n");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(astRoot52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AstRoot" + "'", str53, "AstRoot");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(commentArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNotNull(functionNodeList79);
        org.junit.Assert.assertNull(commentSet84);
        org.junit.Assert.assertNull(functionNode85);
    }

    @Test
    public void test02726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02726");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        astRoot0.removeProp((int) (short) 0);
        com.google.javascript.rhino.head.ast.Comment comment9 = astRoot0.getJsDocNode();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(comment9);
    }

    @Test
    public void test02727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02727");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        int int2 = scriptNode0.getLength();
        java.lang.String str4 = scriptNode0.toSource((-11));
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{\n}\n" + "'", str4, "{\n}\n");
    }

    @Test
    public void test02728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02728");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        com.google.javascript.rhino.head.ast.Scope scope5 = astRoot0.getEnclosingScope();
        int int6 = astRoot0.getFunctionCount();
        com.google.javascript.rhino.head.ast.Jump jump7 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setJumpStatement(jump7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test02729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02729");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        java.lang.String str12 = scriptNode3.getSourceName();
        java.lang.String str13 = scriptNode3.getJsDoc();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test02730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02730");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.Jump jump27 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setJumpStatement(jump27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test02731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02731");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons0.reportWarningAsError();
        boolean boolean14 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setLanguageVersion(0);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02732");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.Context context10 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test02733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02733");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-53));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02734");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        int int3 = scope2.getLineno();
        scope2.setBounds(1, 10);
        scope2.setBounds(441866554, (-112076812));
        com.google.javascript.rhino.head.ast.Comment comment10 = null;
        scope2.setJsDocNode(comment10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test02735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02735");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException26 = errorReporter20.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter20);
        com.google.javascript.rhino.head.ErrorReporter errorReporter28 = compilerEnvirons0.getErrorReporter();
        java.util.Set<java.lang.String> strSet29 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(evaluatorException26);
        org.junit.Assert.assertNotNull(errorReporter28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test02736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02736");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        astRoot5.checkParentLinks();
        boolean boolean11 = astRoot5.hasConsistentReturnUsage();
        int int12 = astRoot5.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = astRoot5.getSymbols();
        scriptNode0.setSymbols(symbolList13);
        scriptNode0.setEncodedSourceEnd((-846108491));
        scriptNode0.removeProp(3);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolList13);
    }

    @Test
    public void test02737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02737");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1);
        java.lang.String str2 = node1.getJsDoc();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test02738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02738");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        scriptNode9.setBounds((int) (byte) -1, 23);
        int int15 = astRoot3.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode16.setEncodedSourceBounds((int) (short) 100, 10);
        int int24 = scriptNode16.getIntProp(0, 9);
        astRoot3.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = scriptNode16.getParamOrVarName(26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 9 + "'", int24 == 9);
    }

    @Test
    public void test02739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02739");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        java.lang.Object obj11 = astRoot1.getCompilerData();
        astRoot1.putIntProp((-236001159), (-2110645446));
        com.google.javascript.rhino.head.ast.Symbol symbol15 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.putSymbol(symbol15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test02740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02740");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment24 = null;
        astRoot17.setJsDocNode(comment24);
        astRoot17.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean30 = astRoot29.hasSideEffects();
        int int31 = astRoot29.getParamCount();
        astRoot17.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode33.toSource(0);
        scriptNode33.setEncodedSourceBounds(12, 10);
        scriptNode33.setSourceName("");
        astRoot17.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray44 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList45, symbolArray44);
        astRoot42.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList45);
        boolean boolean48 = astRoot42.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot42.getSymbolTable();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.ast.Comment comment51 = astRoot2.getJsDocNode();
        com.google.javascript.rhino.head.ast.Symbol symbol52 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.putSymbol(symbol52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{\n}\n" + "'", str35, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(symbolArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(comment51);
    }

    @Test
    public void test02741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02741");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = astRoot1.getEnclosingScope();
        int int12 = astRoot1.getRegexpCount();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test02742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02742");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int28 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setGeneratingSource(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test02743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02743");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        node1.putProp(0, (java.lang.Object) scriptNode6);
        com.google.javascript.rhino.head.Node node10 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        node10.putProp(0, (java.lang.Object) scriptNode15);
        int int18 = scriptNode15.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode15.getSymbols();
        scriptNode6.setSymbols(symbolList19);
        int int21 = scriptNode6.getFunctionCount();
        int int22 = scriptNode6.getLineno();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test02744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02744");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        astRoot3.checkParentLinks();
        int int12 = astRoot3.getIntProp(11, 32);
        int int13 = astRoot3.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.clearParentScope();
        boolean boolean18 = scriptNode14.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = null;
        scriptNode14.setSymbolTable(strMap19);
        int int21 = scriptNode14.getRegexpCount();
        int int22 = scriptNode14.getRegexpCount();
        astRoot3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot3, (-280309866));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = node25.new NodeIterator();
        boolean boolean27 = nodeIterator26.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test02745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02745");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node29 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator30.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator31);
        com.google.javascript.rhino.head.Node node33 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node34 = node33.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        node33.addChildToFront((com.google.javascript.rhino.head.Node) scope35);
        int int37 = scope35.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = scope35.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int42 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scope35, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        node29.addChildToFront((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int45 = astRoot44.getEndLineno();
        java.lang.Object obj46 = astRoot44.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray47 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet48 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet48, commentArray47);
        astRoot44.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        java.lang.String str52 = astRoot41.shortName();
        astRoot41.setBaseLineno(548641306);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot(6);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = astRoot56.getComments();
        astRoot56.setEncodedSourceEnd((-508712079));
        // The following exception was thrown during execution in test generation
        try {
            astRoot41.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) astRoot56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-12) + "'", int42 == (-12));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(commentArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AstRoot" + "'", str52, "AstRoot");
        org.junit.Assert.assertNull(commentSet57);
    }

    @Test
    public void test02746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02746");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.isRecordingComments();
        boolean boolean59 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setWarnTrailingComma(true);
        boolean boolean65 = compilerEnvirons62.isRecordingLocalJsDocComments();
        compilerEnvirons62.setWarnTrailingComma(false);
        compilerEnvirons62.setAllowSharpComments(false);
        boolean boolean70 = compilerEnvirons62.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons71 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons71.setWarnTrailingComma(true);
        boolean boolean74 = compilerEnvirons71.isRecordingLocalJsDocComments();
        compilerEnvirons71.setWarnTrailingComma(false);
        compilerEnvirons71.setAllowSharpComments(false);
        boolean boolean79 = compilerEnvirons71.isGenerateDebugInfo();
        compilerEnvirons71.setIdeMode(false);
        compilerEnvirons71.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons84 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons84.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter87 = compilerEnvirons84.getErrorReporter();
        boolean boolean88 = compilerEnvirons84.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter89 = compilerEnvirons84.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser90 = new com.google.javascript.rhino.head.Parser(compilerEnvirons71, errorReporter89);
        com.google.javascript.rhino.head.Parser parser91 = new com.google.javascript.rhino.head.Parser(compilerEnvirons62, errorReporter89);
        errorReporter89.warning("-1", "21", 24, "", (-17617447));
        compilerEnvirons0.setErrorReporter(errorReporter89);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(errorReporter87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(errorReporter89);
    }

    @Test
    public void test02747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02747");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isIdeMode();
        boolean boolean17 = compilerEnvirons0.isIdeMode();
        boolean boolean18 = compilerEnvirons0.isRecordingComments();
        int int19 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean20 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test02748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02748");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        int int5 = astRoot4.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = astRoot4.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 35 + "'", int5 == 35);
    }

    @Test
    public void test02749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02749");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1074101998));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02750");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        boolean boolean10 = astRoot4.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        compilerEnvirons11.setWarnTrailingComma(false);
        compilerEnvirons11.setAllowSharpComments(false);
        boolean boolean19 = compilerEnvirons11.isGenerateDebugInfo();
        astRoot4.setCompilerData((java.lang.Object) boolean19);
        com.google.javascript.rhino.head.Node node21 = astRoot4.target;
        astRoot1.addChildToFront((com.google.javascript.rhino.head.Node) astRoot4);
        astRoot1.setEncodedSource("%");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(node21);
    }

    @Test
    public void test02751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02751");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) 'a');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = scriptNode1.addFunction(functionNode2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02752");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isGenerateDebugInfo();
        compilerEnvirons6.setIdeMode(false);
        compilerEnvirons6.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        boolean boolean23 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter24);
        compilerEnvirons0.setErrorReporter(errorReporter24);
        errorReporter24.warning("  {\n  }\n", "                                      {\n                                      }\n", 0, "8\tSCRIPT 8 1\n", (int) (short) 10);
        errorReporter24.warning("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)", "-1\tSCRIPT -1 1\n", 19, "21", 775058292);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter24.error("-1\tSCRIPT -1 1\n", "", 953557037, "-11\tBLOCK -11 1\n", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: -1?SCRIPT -1 1? (#953557037)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
    }

    @Test
    public void test02753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02753");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setWarnTrailingComma(true);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02754");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean16 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test02755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02755");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode0.setEncodedSourceBounds((int) (short) 100, 10);
        java.lang.String str6 = scriptNode0.getJsDoc();
        java.lang.String str8 = scriptNode0.toSource(2);
        java.lang.String str9 = scriptNode0.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            double double10 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "    {\n    }\n" + "'", str8, "    {\n    }\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
    }

    @Test
    public void test02756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02756");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        astRoot1.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        int int15 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node16 = scriptNode12.getLastChild();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode26.toSource(0);
        scriptNode26.setEncodedSourceBounds(12, 10);
        scriptNode24.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        java.lang.String str33 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot34.getAstRoot();
        java.lang.String str36 = astRoot35.shortName();
        java.lang.String str38 = astRoot35.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = astRoot35.getFunctions();
        astRoot35.checkParentLinks();
        boolean boolean41 = astRoot35.hasConsistentReturnUsage();
        int int42 = astRoot35.getRegexpCount();
        scriptNode24.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot35);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) 'a', node20, (com.google.javascript.rhino.head.Node) astRoot35, (int) (byte) 1);
        astRoot1.addChildrenToFront(node20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node47 = astRoot1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{\n}\n" + "'", str28, "{\n}\n");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AstRoot" + "'", str36, "AstRoot");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test02757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02757");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean15 = compilerEnvirons12.isRecordingLocalJsDocComments();
        compilerEnvirons12.setWarnTrailingComma(false);
        compilerEnvirons12.setAllowSharpComments(false);
        boolean boolean20 = compilerEnvirons12.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setWarnTrailingComma(true);
        java.lang.String[] strArray33 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        compilerEnvirons21.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        compilerEnvirons12.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        compilerEnvirons12.setAllowMemberExprAsFunctionName(true);
        int int40 = compilerEnvirons12.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons41.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException50 = errorReporter44.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        errorReporter44.warning("                  ", "$1", 100, "AstRoot", 1);
        compilerEnvirons12.setErrorReporter(errorReporter44);
        compilerEnvirons0.setErrorReporter(errorReporter44);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException64 = errorReporter44.runtimeError("-2\t    SCRIPT -1 1\n", "", 852076584, "!", (-536261095));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -536261095");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(errorReporter44);
        org.junit.Assert.assertNotNull(evaluatorException50);
    }

    @Test
    public void test02758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02758");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        astRoot2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        scope19.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        scope19.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        boolean boolean77 = astRoot66.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = astRoot66.getTop();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.ast.Symbol symbol80 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot23.putSymbol(symbol80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(scriptNode78);
    }

    @Test
    public void test02759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02759");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException9 = errorReporter3.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.lang.String str10 = evaluatorException9.toString();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertNotNull(evaluatorException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)" + "'", str10, "com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
    }

    @Test
    public void test02760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02760");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String str6 = iOException5.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str6, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test02761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02761");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("0");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02762");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 7");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02763");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode3.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList13 = scriptNode3.getFunctions();
        com.google.javascript.rhino.head.Node node15 = scriptNode3.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = scope17.new NodeIterator();
        scope17.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        java.lang.String str29 = astRoot22.toSource(0);
        java.lang.String str31 = astRoot22.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        int int36 = scriptNode32.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        int int41 = scriptNode37.getEncodedSourceEnd();
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode47 = astRoot46.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) scriptNode48);
        int int52 = astRoot44.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot44, scope53);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = astRoot44.getSymbolTable();
        scriptNode32.setSymbolTable(strMap56);
        astRoot22.setSymbolTable(strMap56);
        scope17.setSymbolTable(strMap56);
        scriptNode3.setSymbolTable(strMap56);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNotNull(functionNodeList13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test02764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02764");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        compilerEnvirons0.setGenerateDebugInfo(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test02765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02765");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        int int11 = node7.getIntProp((int) ' ', 0);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor12 = node7.iterator();
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(nodeItor12);
    }

    @Test
    public void test02766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02766");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        com.google.javascript.rhino.head.Node node13 = node5.getLastChild();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor14 = node13.iterator();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeItor14);
    }

    @Test
    public void test02767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02767");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int7 = astRoot0.depth();
        astRoot0.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope11 = astRoot0.getDefiningScope("  {\n  }\n");
        int int12 = astRoot0.depth();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource(0);
        scriptNode18.setEncodedSourceBounds(12, 10);
        scriptNode16.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        scriptNode18.setSourceName("  {\n  }\n");
        // The following exception was thrown during execution in test generation
        try {
            int int27 = astRoot0.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
    }

    @Test
    public void test02768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02768");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        int int50 = astRoot37.getAbsolutePosition();
        astRoot37.setBounds(520361644, (-443001414));
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray54 = astRoot37.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test02769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02769");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        astRoot3.checkParentLinks();
        int int12 = astRoot3.getIntProp(11, 32);
        int int13 = astRoot3.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.clearParentScope();
        boolean boolean18 = scriptNode14.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = null;
        scriptNode14.setSymbolTable(strMap19);
        int int21 = scriptNode14.getRegexpCount();
        int int22 = scriptNode14.getRegexpCount();
        astRoot3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot3, (-280309866));
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = astRoot3.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scope29.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scope29.getTop();
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNull(scriptNode31);
    }

    @Test
    public void test02770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02770");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            errorReporter32.error("                    ", "0\tSCRIPT 0 0\n", (-508712079), "", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -508712079");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
    }

    @Test
    public void test02771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02771");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(3);
        boolean boolean2 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.visit(nodeVisitor3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test02772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02772");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("                                                {\n                                                }\n", (java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray9 = iOException5.getSuppressed();
        java.lang.String str10 = iOException5.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException: hi!" + "'", str10, "java.io.IOException: hi!");
    }

    @Test
    public void test02773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02773");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        astRoot0.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean13 = astRoot12.hasSideEffects();
        int int14 = astRoot12.getParamCount();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot12);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope16 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test02774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02774");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int28 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setWarnTrailingComma(true);
        boolean boolean32 = compilerEnvirons29.isRecordingLocalJsDocComments();
        compilerEnvirons29.setWarnTrailingComma(false);
        compilerEnvirons29.setAllowSharpComments(false);
        compilerEnvirons29.setStrictMode(true);
        boolean boolean39 = compilerEnvirons29.reportWarningAsError();
        boolean boolean40 = compilerEnvirons29.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setWarnTrailingComma(true);
        java.lang.String[] strArray53 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        compilerEnvirons41.setActivationNames((java.util.Set<java.lang.String>) strSet54);
        boolean boolean57 = compilerEnvirons41.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser58 = new com.google.javascript.rhino.head.Parser(compilerEnvirons41);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "ScriptNode", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        compilerEnvirons41.setActivationNames((java.util.Set<java.lang.String>) strSet63);
        compilerEnvirons29.setActivationNames((java.util.Set<java.lang.String>) strSet63);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test02775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02775");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = astRoot0.getStatements();
        int int11 = astRoot0.getBaseLineno();
        astRoot0.checkParentLinks();
        java.lang.String str13 = astRoot0.getJsDoc();
        java.lang.Object obj14 = astRoot0.getCompilerData();
        int int15 = astRoot0.getPosition();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(astNodeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test02776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02776");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.lang.String str7 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = astRoot1.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.Comment comment9 = null;
        astRoot1.setJsDocNode(comment9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode11.setEncodedSourceBounds((int) (short) 100, 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        java.lang.String str20 = astRoot18.getSourceName();
        astRoot18.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = astRoot18.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setWarnTrailingComma(true);
        boolean boolean26 = compilerEnvirons23.isRecordingLocalJsDocComments();
        compilerEnvirons23.setWarnTrailingComma(false);
        compilerEnvirons23.setAllowSharpComments(false);
        boolean boolean31 = compilerEnvirons23.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        java.lang.String[] strArray44 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        compilerEnvirons32.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons23.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons49.setWarnTrailingComma(true);
        boolean boolean52 = compilerEnvirons49.isRecordingLocalJsDocComments();
        compilerEnvirons49.setWarnTrailingComma(false);
        compilerEnvirons49.setAllowSharpComments(false);
        boolean boolean57 = compilerEnvirons49.isGenerateDebugInfo();
        compilerEnvirons49.setIdeMode(false);
        compilerEnvirons49.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter65 = compilerEnvirons62.getErrorReporter();
        boolean boolean66 = compilerEnvirons62.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter67 = compilerEnvirons62.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser68 = new com.google.javascript.rhino.head.Parser(compilerEnvirons49, errorReporter67);
        com.google.javascript.rhino.head.IRFactory iRFactory69 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons23, errorReporter67);
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = iRFactory69.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot18.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot73);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getNextTempName();
        com.google.javascript.rhino.head.Node node77 = scriptNode75.target;
        int int78 = scriptNode75.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node79 = scriptNode75.getLastChild();
        scriptNode75.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap82 = null;
        scriptNode75.setSymbolTable(strMap82);
        astRoot73.setTop(scriptNode75);
        int int85 = astRoot73.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.addChildBefore((com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) astRoot73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(functionNode8);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(errorReporter65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(errorReporter67);
        org.junit.Assert.assertNotNull(astRoot73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "$0" + "'", str76, "$0");
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test02777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02777");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons12.getActivationNames();
        boolean boolean16 = compilerEnvirons12.recoverFromErrors();
        boolean boolean17 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons12.isXmlAvailable();
        compilerEnvirons12.setIdeMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setWarnTrailingComma(true);
        boolean boolean26 = compilerEnvirons23.isRecordingLocalJsDocComments();
        compilerEnvirons23.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser30 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12, errorReporter29);
        com.google.javascript.rhino.head.Parser parser31 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter29);
        compilerEnvirons0.setErrorReporter(errorReporter29);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException38 = errorReporter29.runtimeError("%", "com.google.javascript.rhino.head.EvaluatorException: $0 (                        {\n                        }\n#1)", (-8), "java.io.IOException: hi!", (-134670566));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -8");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorReporter29);
    }

    @Test
    public void test02778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02778");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode11.toSource(0);
        scriptNode11.clearParentScope();
        boolean boolean15 = scriptNode11.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = null;
        scriptNode11.setSymbolTable(strMap16);
        int int18 = scriptNode11.getRegexpCount();
        int int19 = scriptNode11.getRegexpCount();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        java.lang.String str21 = astRoot0.shortName();
        java.lang.String str22 = astRoot0.getSourceName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AstRoot" + "'", str21, "AstRoot");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test02779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02779");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setRelative((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02780");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean2 = scope1.hasChildren();
        java.lang.String str3 = scope1.shortName();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = scope1.getSymbol("                    ");
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList6 = scope1.getStatements();
        scope1.clearParentScope();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Scope" + "'", str3, "Scope");
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertNotNull(astNodeList6);
    }

    @Test
    public void test02781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02781");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = astRoot0.getChildScopes();
        boolean boolean5 = astRoot0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = astRoot0.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str13 = scriptNode10.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope16, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = astRoot19.getAstRoot();
        java.lang.String str21 = astRoot20.shortName();
        java.lang.String str22 = astRoot20.getSourceName();
        astRoot20.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = astRoot20.getSymbolTable();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) astRoot20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = astRoot26.getTop();
        int int30 = astRoot26.getParamCount();
        boolean boolean31 = astRoot26.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = astRoot26.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol34 = astRoot26.getSymbol("                                    ");
        boolean boolean35 = astRoot26.isInStrictMode();
        astRoot20.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot26);
        com.google.javascript.rhino.head.Node node37 = astRoot26.getLastSibling();
        com.google.javascript.rhino.head.Node node38 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node39 = node38.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getEndLineno();
        java.lang.Object obj45 = astRoot43.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray46 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet47, commentArray46);
        astRoot43.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet47);
        astRoot43.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getNextTempName();
        com.google.javascript.rhino.head.Node node53 = scriptNode51.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode51.getFunctions();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode51);
        boolean boolean56 = astRoot43.isInStrictMode();
        astRoot43.checkParentLinks();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) astRoot26, node39, (com.google.javascript.rhino.head.Node) astRoot43);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) astRoot26);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(astRoot20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AstRoot" + "'", str21, "AstRoot");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "136" + "'", str28, "136");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(symbol34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(commentArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test02782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02782");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node5 = scriptNode3.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02783");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Comment comment12 = scriptNode8.getJsDocNode();
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scriptNode8.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = scriptNode8.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor16 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot15.visit(nodeVisitor16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNull(astRoot15);
    }

    @Test
    public void test02784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02784");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.Comment comment4 = null;
        scriptNode1.setJsDocNode(comment4);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((-414560696), (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.Node node8 = com.google.javascript.rhino.head.Node.newString("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        node8.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator15 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        java.lang.String str18 = astRoot16.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode19.getSymbols();
        java.lang.String str21 = astRoot16.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        int int25 = positionComparator15.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode19, (com.google.javascript.rhino.head.ast.AstNode) scope22);
        scriptNode12.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        int int29 = scriptNode19.getIntProp((-484812922), (-738182430));
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "136" + "'", str18, "136");
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-738182430) + "'", int29 == (-738182430));
    }

    @Test
    public void test02785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02785");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int28 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setStrictMode(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test02786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02786");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        java.lang.Object obj11 = astRoot1.getCompilerData();
        astRoot1.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot1.getAstRoot();
        boolean boolean15 = astRoot14.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test02787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02787");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        scriptNode17.setBounds((int) (byte) -1, 23);
        int int23 = astRoot11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = scope25.new NodeIterator();
        scope25.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        java.lang.String str32 = astRoot30.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        java.lang.String str35 = astRoot30.toStringTree(scriptNode33);
        java.lang.String str37 = astRoot30.toSource(0);
        java.lang.String str39 = astRoot30.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        int int44 = scriptNode40.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getNextTempName();
        com.google.javascript.rhino.head.Node node47 = scriptNode45.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList48 = scriptNode45.getFunctions();
        int int49 = scriptNode45.getEncodedSourceEnd();
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode55 = astRoot54.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int60 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot52, scope61);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = astRoot52.getSymbolTable();
        scriptNode40.setSymbolTable(strMap64);
        astRoot30.setSymbolTable(strMap64);
        scope25.setSymbolTable(strMap64);
        astRoot11.setSymbolTable(strMap64);
        astRoot0.setSymbolTable(strMap64);
        java.lang.String str70 = astRoot0.debugPrint();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNotNull(functionNodeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str70, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test02788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02788");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope20.setTop(scriptNode22);
        java.lang.String str25 = scope20.toSource(12);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope20);
        astRoot6.setBaseLineno(19);
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot6.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope31 = astRoot30.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                        {\n                        }\n" + "'", str25, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(astRoot30);
    }

    @Test
    public void test02789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02789");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        astRoot7.removeProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = astRoot7.getTop();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode30.visit(nodeVisitor31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNotNull(scriptNode30);
    }

    @Test
    public void test02790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02790");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope25.setTop(scriptNode27);
        java.lang.String str30 = scope25.toSource(12);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope25.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scope7.setScope(scope32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                        {\n                        }\n" + "'", str30, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(scope32);
    }

    @Test
    public void test02791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02791");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGenerateObserverCount(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException17 = errorReporter11.runtimeError("                  ", "                          ", (-1282335040), "+=", 21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1282335040");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
    }

    @Test
    public void test02792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02792");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.lang.Object obj5 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = astRoot1.getAstRoot();
        com.google.javascript.rhino.head.Node node7 = astRoot6.getNext();
        astRoot6.setInStrictMode(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = astRoot6.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            astRoot6.setDouble((double) 630715541);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(astRoot6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test02793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02793");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setWarnTrailingComma(true);
        boolean boolean4 = compilerEnvirons1.isRecordingLocalJsDocComments();
        compilerEnvirons1.setWarnTrailingComma(false);
        compilerEnvirons1.setAllowSharpComments(false);
        boolean boolean9 = compilerEnvirons1.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setRecordingLocalJsDocComments(false);
        boolean boolean14 = compilerEnvirons11.isGeneratingSource();
        compilerEnvirons11.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        compilerEnvirons17.setWarnTrailingComma(false);
        compilerEnvirons17.setAllowSharpComments(false);
        boolean boolean25 = compilerEnvirons17.isGenerateDebugInfo();
        compilerEnvirons17.setIdeMode(false);
        compilerEnvirons17.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons30.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons30.getErrorReporter();
        boolean boolean34 = compilerEnvirons30.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter35 = compilerEnvirons30.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser36 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17, errorReporter35);
        compilerEnvirons11.setErrorReporter(errorReporter35);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1, errorReporter35);
        com.google.javascript.rhino.head.Parser parser39 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter35);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(errorReporter35);
    }

    @Test
    public void test02794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02794");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02795");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        astRoot4.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        int int15 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node16 = scriptNode12.getLastChild();
        int int17 = scriptNode12.getEndLineno();
        astRoot4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.lang.String str19 = scriptNode12.getSourceName();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode12, 6);
        java.lang.String str22 = scriptNode12.shortName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ScriptNode" + "'", str22, "ScriptNode");
    }

    @Test
    public void test02796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02796");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        astRoot10.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode1.getSymbols();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(symbolList16);
    }

    @Test
    public void test02797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02797");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        scriptNode0.setPosition(13);
        int int13 = scriptNode0.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node14 = scriptNode0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 12 + "'", int13 == 12);
    }

    @Test
    public void test02798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02798");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        astRoot1.setRelative((int) '4');
        astRoot1.setBounds(0, 3);
        com.google.javascript.rhino.head.Node node15 = astRoot1.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = node15.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test02799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02799");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        boolean boolean46 = astRoot42.hasSideEffects();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot42);
        java.lang.String str48 = node47.getJsDoc();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test02800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02800");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.removeProp((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.Node node10 = scriptNode0.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = node10.getFirstChild();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test02801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02801");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        int int15 = scriptNode11.getEncodedSourceEnd();
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.Node node17 = scriptNode3.getFirstChild();
        boolean boolean18 = node17.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj23 = node21.getProp((-52));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        int int26 = scriptNode24.depth();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = parser27.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray37 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet38 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet38, commentArray37);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        astRoot43.addChildScope(scope45);
        java.lang.String str49 = astRoot43.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode53.getSymbols();
        java.lang.String str55 = astRoot50.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope57.setTop(scriptNode59);
        java.lang.String str62 = scope57.toSource(12);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scope57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot65, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet69 = astRoot65.getComments();
        node63.addChildToBack((com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.Node node71 = astRoot65.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator72 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator73 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator74 = positionComparator72.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator73);
        com.google.javascript.rhino.head.Node node75 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node76 = node75.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        node75.addChildToFront((com.google.javascript.rhino.head.Node) scope77);
        int int79 = scope77.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol81 = scope77.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int84 = positionComparator73.compare((com.google.javascript.rhino.head.ast.AstNode) scope77, (com.google.javascript.rhino.head.ast.AstNode) astRoot83);
        node71.addChildToFront((com.google.javascript.rhino.head.Node) astRoot83);
        com.google.javascript.rhino.head.ast.AstRoot astRoot86 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int87 = astRoot86.getEndLineno();
        java.lang.Object obj88 = astRoot86.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray89 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet90 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet90, commentArray89);
        astRoot86.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot83.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node(22, node21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) astRoot31);
        int int97 = scriptNode24.getFunctionCount();
        java.lang.String str98 = node17.toStringTree(scriptNode24);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(commentArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                        {\n                        }\n" + "'", str62, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(commentSet69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(astNodeComparator74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(symbol81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-12) + "'", int84 == (-12));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(commentArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test02802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02802");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(374803108);
        com.google.javascript.rhino.head.ast.Comment comment2 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.addComment(comment2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02803");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        java.lang.Object obj18 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = scope20.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        scope20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode23, node24);
        scriptNode23.flattenSymbolTable(false);
        int int31 = scriptNode23.getType();
        java.lang.String str32 = scriptNode23.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        astRoot33.addChildScope(scope35);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = astRoot33.getChildScopes();
        scriptNode23.setCompilerData((java.lang.Object) scopeList38);
        int int40 = scriptNode23.getPosition();
        java.lang.String[] strArray41 = scriptNode23.getParamAndVarNames();
        astRoot12.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope43 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertNotNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test02804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02804");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException("", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException7);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException18 = errorReporter12.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        iOException8.addSuppressed((java.lang.Throwable) evaluatorException18);
        java.io.IOException iOException20 = new java.io.IOException("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", (java.lang.Throwable) evaluatorException18);
        java.lang.Throwable[] throwableArray21 = evaluatorException18.getSuppressed();
        java.lang.Throwable[] throwableArray22 = evaluatorException18.getSuppressed();
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertNotNull(evaluatorException18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test02805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02805");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        astRoot0.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean13 = astRoot12.hasSideEffects();
        int int14 = astRoot12.getParamCount();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode16.toSource(0);
        scriptNode16.setEncodedSourceBounds(12, 10);
        scriptNode16.setSourceName("");
        astRoot0.setTop(scriptNode16);
        astRoot0.setEndLineno(1246810839);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int28 = astRoot0.addFunction(functionNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
    }

    @Test
    public void test02806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02806");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = astRoot0.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.Node node14 = scope12.getFirstChild();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope12);
        scope12.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode18 = scope12.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol23 = astRoot19.getSymbol("java.io.IOException: ");
        astRoot19.setEncodedSourceStart(0);
        java.lang.String str27 = astRoot19.toSource(14);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode18, (com.google.javascript.rhino.head.Node) astRoot19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray31 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList32, symbolArray31);
        astRoot29.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList32);
        astRoot29.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getEndLineno();
        java.lang.Object obj40 = astRoot38.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        astRoot29.target = astRoot36;
        int int47 = astRoot36.getType();
        java.lang.String str48 = astRoot36.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = astRoot36.getFunctions();
        int int50 = astRoot36.getEncodedSourceEnd();
        astRoot0.addChildAfter(node28, (com.google.javascript.rhino.head.Node) astRoot36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getNextTempName();
        com.google.javascript.rhino.head.ast.Comment comment54 = scriptNode52.getJsDocNode();
        scriptNode52.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            astRoot36.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(astNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(symbol23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(symbolArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 136 + "'", int47 == 136);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str48, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(comment54);
    }

    @Test
    public void test02807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02807");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot0.getAstRoot();
        java.lang.String str10 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.debugPrint();
        astRoot12.clearParentScope();
        java.lang.Object obj16 = astRoot12.getCompilerData();
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        int int18 = astRoot0.getType();
        java.lang.Object obj20 = astRoot0.getProp(32);
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test02808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02808");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Comment comment12 = scriptNode8.getJsDocNode();
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scriptNode8.spliterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor15 = scriptNode8.iterator();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        scope18.setLength(0);
        int int21 = scriptNode8.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope18);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump22 = scriptNode8.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test02809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02809");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(0);
        scriptNode15.clearParentScope();
        boolean boolean19 = scriptNode15.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = scope23.spliterator();
        astRoot21.addChildScope(scope23);
        java.lang.String str27 = astRoot21.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode31.getSymbols();
        java.lang.String str33 = astRoot28.toStringTree(scriptNode31);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.setTop(scriptNode37);
        java.lang.String str40 = scope35.toSource(12);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scope35);
        astRoot21.setBaseLineno(19);
        scriptNode15.addChildToBack((com.google.javascript.rhino.head.Node) astRoot21);
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode15.getSymbols();
        scriptNode15.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str53 = scriptNode50.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scope56, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = astRoot59.getAstRoot();
        java.lang.String str61 = astRoot60.shortName();
        java.lang.String str62 = astRoot60.getSourceName();
        astRoot60.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = astRoot60.getSymbolTable();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope56, (com.google.javascript.rhino.head.Node) astRoot60);
        java.lang.Object obj66 = astRoot60.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scope67.addChild((com.google.javascript.rhino.head.ast.AstNode) scope68);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator70 = scope68.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node72 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node73 = node72.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        node72.addChildToFront((com.google.javascript.rhino.head.Node) scope74);
        scope68.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode71, node72);
        scriptNode71.flattenSymbolTable(false);
        int int79 = scriptNode71.getType();
        java.lang.String str80 = scriptNode71.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str82 = astRoot81.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator84 = scope83.spliterator();
        astRoot81.addChildScope(scope83);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList86 = astRoot81.getChildScopes();
        scriptNode71.setCompilerData((java.lang.Object) scopeList86);
        int int88 = scriptNode71.getPosition();
        java.lang.String[] strArray89 = scriptNode71.getParamAndVarNames();
        astRoot60.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode71);
        scriptNode15.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = astRoot60.getParamOrVarName(1403594947);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(symbolList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                        {\n                        }\n" + "'", str40, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNotNull(astRoot60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AstRoot" + "'", str61, "AstRoot");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 136 + "'", int79 == 136);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "136" + "'", str80, "136");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "$0" + "'", str82, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator84);
        org.junit.Assert.assertNotNull(scopeList86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test02810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02810");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getEndLineno();
        java.lang.Object obj10 = astRoot8.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol12 = astRoot8.getSymbol("java.io.IOException: ");
        astRoot8.setEncodedSourceStart(0);
        java.lang.String str16 = astRoot8.makeIndent(13);
        scriptNode4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot8);
        boolean boolean18 = astRoot8.hasSideEffects();
        com.google.javascript.rhino.head.ast.Comment comment19 = null;
        astRoot8.setJsDocNode(comment19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = astRoot8.getParamOrVarName((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(symbol12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                          " + "'", str16, "                          ");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02811");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.lang.String str7 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.Node node8 = astRoot1.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        astRoot9.checkParentLinks();
        int int16 = astRoot9.depth();
        astRoot9.setRelative((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node19 = node8.getChildBefore((com.google.javascript.rhino.head.Node) astRoot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test02812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02812");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = astRoot1.getTop();
        scriptNode5.setRelative(26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        scriptNode5.target = astRoot9;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = scriptNode5.getExistingIntProp(122705610);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode5);
    }

    @Test
    public void test02813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02813");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        java.lang.String str30 = scriptNode28.debugPrint();
        scriptNode28.setLineno((int) (byte) -1);
        scriptNode28.flattenSymbolTable(true);
        astRoot23.setTop(scriptNode28);
        astRoot23.clearParentScope();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        boolean boolean38 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        node40.putProp(0, (java.lang.Object) scriptNode45);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator48 = scriptNode45.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = scriptNode45.getFunctions();
        astRoot1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode45);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node51 = scriptNode45.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList49);
    }

    @Test
    public void test02814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02814");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        com.google.javascript.rhino.head.Parser parser36 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot41 = iRFactory37.parse("14\tSCRIPT 14 1\n", "java.io.IOException:                                                                 ", (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -8");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
    }

    @Test
    public void test02815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02815");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getAbsolutePosition();
        int int4 = scriptNode0.depth();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test02816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02816");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int28 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException38 = errorReporter32.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        errorReporter32.warning("                  ", "$1", 100, "AstRoot", 1);
        compilerEnvirons0.setErrorReporter(errorReporter32);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(938587703);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 938587703");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertNotNull(evaluatorException38);
    }

    @Test
    public void test02817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02817");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException2);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = compilerEnvirons5.getErrorReporter();
        boolean boolean9 = compilerEnvirons5.isGenerateObserverCount();
        boolean boolean10 = compilerEnvirons5.recoverFromErrors();
        java.util.Set<java.lang.String> strSet11 = compilerEnvirons5.getActivationNames();
        boolean boolean12 = compilerEnvirons5.reportWarningAsError();
        compilerEnvirons5.setWarnTrailingComma(false);
        boolean boolean15 = compilerEnvirons5.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory16 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons5);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        int int20 = compilerEnvirons17.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons24.getErrorReporter();
        compilerEnvirons21.setErrorReporter(errorReporter27);
        compilerEnvirons17.setErrorReporter(errorReporter27);
        com.google.javascript.rhino.head.Parser parser30 = new com.google.javascript.rhino.head.Parser(compilerEnvirons5, errorReporter27);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException36 = errorReporter27.runtimeError("775058292", "                          ", 15, "", 5);
        iOException2.addSuppressed((java.lang.Throwable) evaluatorException36);
        java.io.IOException iOException38 = new java.io.IOException("", (java.lang.Throwable) evaluatorException36);
        org.junit.Assert.assertNotNull(errorReporter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertNotNull(evaluatorException36);
    }

    @Test
    public void test02818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02818");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        node2.removeChildren();
        node2.removeChildren();
        node2.removeProp(25);
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test02819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02819");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean39 = compilerEnvirons0.isIdeMode();
        boolean boolean40 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setGenerateDebugInfo(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test02820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02820");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        astRoot20.setPosition((int) (short) -1);
        astRoot20.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope37 = astRoot20.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Comment comment38 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope37.setJsDocNode(comment38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(scope37);
    }

    @Test
    public void test02821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02821");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        astRoot21.setEncodedSource("                          ");
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.Node node40 = scope38.getFirstChild();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope38);
        int int42 = astRoot21.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode48.toSource(0);
        scriptNode48.setEncodedSourceBounds(12, 10);
        scriptNode46.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        java.lang.String str55 = scriptNode46.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = astRoot56.getAstRoot();
        java.lang.String str58 = astRoot57.shortName();
        java.lang.String str60 = astRoot57.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = astRoot57.getFunctions();
        astRoot57.checkParentLinks();
        boolean boolean63 = astRoot57.hasConsistentReturnUsage();
        int int64 = astRoot57.getRegexpCount();
        scriptNode46.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot57);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope38, (com.google.javascript.rhino.head.ast.Scope) astRoot57);
        // The following exception was thrown during execution in test generation
        try {
            scope38.setString("-1\t  SCRIPT 0 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(node40);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-423924631) + "'", int42 == (-423924631));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{\n}\n" + "'", str50, "{\n}\n");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(astRoot57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AstRoot" + "'", str58, "AstRoot");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test02822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02822");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        node1.putProp(0, (java.lang.Object) scriptNode6);
        com.google.javascript.rhino.head.Node node10 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        node10.putProp(0, (java.lang.Object) scriptNode15);
        int int18 = scriptNode15.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode15.getSymbols();
        scriptNode6.setSymbols(symbolList19);
        java.lang.Object obj22 = scriptNode6.getProp(22);
        com.google.javascript.rhino.head.ast.Scope scope23 = scriptNode6.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            double double24 = scriptNode6.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(scope23);
    }

    @Test
    public void test02823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02823");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int3 = astRoot2.getType();
        com.google.javascript.rhino.head.Parser parser4 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = parser4.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray14 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet15, commentArray14);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = scope22.spliterator();
        astRoot20.addChildScope(scope22);
        java.lang.String str26 = astRoot20.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        java.lang.String str29 = astRoot27.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode30.getSymbols();
        java.lang.String str32 = astRoot27.toStringTree(scriptNode30);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.lang.String str39 = scope34.toSource(12);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot42, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet46 = astRoot42.getComments();
        node40.addChildToBack((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node48 = astRoot42.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator49 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator50 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator51 = positionComparator49.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator50);
        com.google.javascript.rhino.head.Node node52 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node53 = node52.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        node52.addChildToFront((com.google.javascript.rhino.head.Node) scope54);
        int int56 = scope54.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol58 = scope54.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int61 = positionComparator50.compare((com.google.javascript.rhino.head.ast.AstNode) scope54, (com.google.javascript.rhino.head.ast.AstNode) astRoot60);
        node48.addChildToFront((com.google.javascript.rhino.head.Node) astRoot60);
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int64 = astRoot63.getEndLineno();
        java.lang.Object obj65 = astRoot63.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray66 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet67 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet67, commentArray66);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        astRoot60.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        java.lang.String str75 = astRoot2.toSource(136);
        int int76 = astRoot2.getLineno();
        java.lang.String str78 = astRoot2.toSource(191686611);
        astRoot2.setPosition(630715541);
        com.google.javascript.rhino.head.Node node81 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((-236001159), (com.google.javascript.rhino.head.Node) astRoot2, node81, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 136 + "'", int3 == 136);
        org.junit.Assert.assertNotNull(astRoot8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(commentArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertNotNull(symbolList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                        {\n                        }\n" + "'", str39, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(commentSet46);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(astNodeComparator51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(symbol58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-12) + "'", int61 == (-12));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(commentArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test02824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02824");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int16 = astRoot8.getParamCount();
        java.lang.String str17 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot30.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        astRoot53.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode61);
        astRoot30.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getNextTempName();
        java.lang.String str70 = scriptNode68.debugPrint();
        scriptNode68.setLineno((int) (byte) -1);
        scriptNode68.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode68.getTop();
        java.lang.String str77 = scriptNode68.toSource((-3));
        java.lang.String str78 = node67.toStringTree(scriptNode68);
        com.google.javascript.rhino.head.ast.Scope scope79 = scriptNode68.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str82 = scriptNode80.toSource(0);
        scriptNode80.removeProp((int) (short) 1);
        int int85 = scriptNode80.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Symbol symbol87 = scriptNode80.getSymbol("-3\tSCRIPT -3 1\n");
        scriptNode68.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode80);
        int int91 = scriptNode68.getIntProp((-1840907413), 15);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "$0" + "'", str69, "$0");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str70, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{\n}\n" + "'", str77, "{\n}\n");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(scope79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{\n}\n" + "'", str82, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(symbol87);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 15 + "'", int91 == 15);
    }

    @Test
    public void test02825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02825");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = scriptNode26.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str33 = astRoot31.getSourceName();
        astRoot31.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot31.getSymbolTable();
        java.lang.String str37 = astRoot31.makeIndent(32);
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) astRoot31);
        astRoot1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Symbol symbol42 = astRoot1.getSymbol("                        ");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                " + "'", str37, "                                                                ");
        org.junit.Assert.assertNull(symbol42);
    }

    @Test
    public void test02826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02826");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node7 = scope6.getNext();
        com.google.javascript.rhino.head.Node node8 = scriptNode1.getChildBefore(node7);
        java.lang.String str9 = scriptNode1.getEncodedSource();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        int int18 = scriptNode13.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = scriptNode13.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scope22.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node26 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node27 = node26.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        node26.addChildToFront((com.google.javascript.rhino.head.Node) scope28);
        scope22.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode25, node26);
        scope22.setRelative(5);
        scriptNode13.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = astRoot37.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int43 = astRoot35.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = astRoot35.spliterator();
        com.google.javascript.rhino.head.Node node46 = astRoot35.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator48 = scope47.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getNextTempName();
        scope47.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        scriptNode49.clearParentScope();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode13, node46, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((-443001414), (com.google.javascript.rhino.head.Node) scriptNode1, node54);
        // The following exception was thrown during execution in test generation
        try {
            node54.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(astNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeSpliterator48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNull(scopeList52);
    }

    @Test
    public void test02827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02827");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope7.setTop(scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        scriptNode9.setCompilerData((java.lang.Object) scope12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = astRoot15.getAstRoot();
        java.lang.String str17 = astRoot16.shortName();
        java.lang.String str18 = astRoot16.debugPrint();
        scope12.addChildToFront((com.google.javascript.rhino.head.Node) astRoot16);
        astRoot1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getEndLineno();
        boolean boolean23 = astRoot21.hasChildren();
        astRoot1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot21);
        java.lang.Class<?> wildcardClass25 = astRoot21.getClass();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(astRoot16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AstRoot" + "'", str17, "AstRoot");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02828");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.clearParentScope();
        boolean boolean2 = scope0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = astRoot7.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scriptNode9);
        int int13 = astRoot5.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot5, scope14);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope14);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        boolean boolean21 = scope18.hasSideEffects();
        int int22 = scope14.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope18);
        boolean boolean23 = scope18.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            scope0.setScope(scope18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 657527297 + "'", int22 == 657527297);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test02829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02829");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot1.getFunctions();
        astRoot1.checkParentLinks();
        boolean boolean7 = astRoot1.hasChildren();
        int int8 = astRoot1.getLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = null;
        astRoot1.setSymbolTable(strMap9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor33 = scope29.iterator();
        astRoot12.setParentScope(scope29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot12.getAstRoot();
        astRoot1.target = astRoot35;
        astRoot1.setLineno(18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = astRoot39.getAstRoot();
        java.lang.String str41 = astRoot40.shortName();
        java.lang.String str42 = astRoot40.debugPrint();
        com.google.javascript.rhino.head.Node node43 = astRoot40.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap44 = astRoot40.getSymbolTable();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap45 = astRoot40.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getEndLineno();
        java.lang.Object obj51 = astRoot49.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray52 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet53, commentArray52);
        astRoot49.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        astRoot49.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getNextTempName();
        com.google.javascript.rhino.head.Node node59 = scriptNode57.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList60 = scriptNode57.getFunctions();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int62 = astRoot47.getEncodedSourceStart();
        astRoot47.setRelative(100);
        boolean boolean65 = astRoot47.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot40, (com.google.javascript.rhino.head.ast.Scope) astRoot47);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setLoop((com.google.javascript.rhino.head.ast.Jump) astRoot47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(functionNodeList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(nodeItor33);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertNotNull(astRoot40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AstRoot" + "'", str41, "AstRoot");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str42, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(commentArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(functionNodeList60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test02830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02830");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        astRoot0.setInStrictMode(false);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot0.getFunctions();
        com.google.javascript.rhino.head.Node node6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int7 = astRoot0.getIndexForNameNode(node6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(functionNodeList5);
    }

    @Test
    public void test02831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02831");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            errorReporter9.error("                                                                ", "AstRoot", (-414560696), "-1", (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -414560696");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter9);
    }

    @Test
    public void test02832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02832");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(9);
        com.google.javascript.rhino.head.Node node2 = astRoot1.getFirstChild();
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test02833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02833");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.isXmlAvailable();
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test02834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02834");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        com.google.javascript.rhino.head.ast.Comment comment3 = null;
        scriptNode0.setJsDocNode(comment3);
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getLastSibling();
        scriptNode0.setRelative(1471166993);
        int int8 = scriptNode0.getPosition();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1471166994) + "'", int8 == (-1471166994));
    }

    @Test
    public void test02835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02835");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.lang.String str12 = scriptNode9.toSource(5);
        scriptNode9.putIntProp(0, 1);
        com.google.javascript.rhino.head.Node node16 = scriptNode9.target;
        java.lang.String str18 = scriptNode9.toSource((-557946458));
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setDefault((com.google.javascript.rhino.head.Node) scriptNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "          {\n          }\n" + "'", str12, "          {\n          }\n");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
    }

    @Test
    public void test02836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02836");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean16 = astRoot3.isInStrictMode();
        int int17 = astRoot3.depth();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator19 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = positionComparator18.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode25 = astRoot24.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int33 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) scope32);
        astRoot24.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = astRoot36.getAstRoot();
        astRoot24.putProp(18, (java.lang.Object) astRoot37);
        com.google.javascript.rhino.head.Node node40 = astRoot24.setType(15);
        java.lang.String str41 = astRoot24.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.setFinally((com.google.javascript.rhino.head.Node) astRoot24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(astNode25);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-3) + "'", int33 == (-3));
        org.junit.Assert.assertNotNull(astRoot37);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tLE -1 1\n" + "'", str41, "-1\tLE -1 1\n");
    }

    @Test
    public void test02837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02837");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(953557037);
        scriptNode2.setEndLineno(0);
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode2);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = scriptNode2.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node7 = nodeIterator6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02838");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = astRoot1.getTop();
        scriptNode5.setRelative(26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        scriptNode5.target = astRoot9;
        com.google.javascript.rhino.head.Node node11 = astRoot9.getFirstChild();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test02839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02839");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean12 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02840");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        astRoot1.setBaseLineno(19);
        int int24 = astRoot1.depth();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node25 = astRoot1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test02841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02841");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        com.google.javascript.rhino.head.Node node11 = astRoot4.getLastSibling();
        int int12 = node11.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        java.lang.String str20 = astRoot13.toSource(0);
        java.lang.String str22 = astRoot13.toSource(25);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope3, node11, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode28 = astRoot27.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode29.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) scriptNode29);
        astRoot27.setInStrictMode(true);
        int int35 = astRoot27.getBaseLineno();
        scope3.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray37 = astRoot27.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(astNode28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test02842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02842");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node7 = astRoot0.target;
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot12.setInStrictMode(true);
        astRoot12.checkParentLinks();
        astRoot0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        int int20 = scope19.getLineno();
        scope19.setBounds(1, 10);
        com.google.javascript.rhino.head.Node node24 = scope19.getLastChild();
        astRoot0.replaceWith(scope19);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = astRoot0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node24);
    }

    @Test
    public void test02843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02843");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.debugPrint();
        com.google.javascript.rhino.head.Node node5 = astRoot2.getFirstChild();
        boolean boolean6 = astRoot2.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        astRoot7.checkParentLinks();
        int int16 = astRoot7.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getEndLineno();
        java.lang.Object obj20 = astRoot18.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot18.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        com.google.javascript.rhino.head.Node node25 = astRoot18.getLastSibling();
        int int26 = node25.getType();
        astRoot7.putProp((int) ' ', (java.lang.Object) node25);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot7, 26);
        astRoot7.setInStrictMode(true);
        astRoot7.setBounds(1159083728, (int) ' ');
        int int35 = astRoot7.getBaseLineno();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test02844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02844");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot1, 4);
        astRoot1.removeChildren();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator6 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        int int16 = positionComparator6.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode10, (com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = astRoot17.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int34 = positionComparator6.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot17, (com.google.javascript.rhino.head.ast.AstNode) astRoot26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode42.toSource(0);
        scriptNode42.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) '#', node38, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode42, 2);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope51.setTop(scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        scriptNode53.setCompilerData((java.lang.Object) scope56);
        scriptNode53.setEncodedSourceEnd(0);
        int int61 = positionComparator6.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode42, (com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        scriptNode42.setLength((-78159348));
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = scriptNode42.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(functionNodeList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{\n}\n" + "'", str44, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test02845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02845");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-605534234), "");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test02846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02846");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.removeProp(8);
        com.google.javascript.rhino.head.ast.Scope scope31 = astRoot1.getParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor32 = null;
        astRoot1.visitComments(nodeVisitor32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode34.getFunctions();
        int int38 = scriptNode34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        int int43 = scriptNode39.getEncodedSourceEnd();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int54 = astRoot46.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot46, scope55);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = astRoot46.getSymbolTable();
        scriptNode34.setSymbolTable(strMap58);
        astRoot1.setSymbolTable(strMap58);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setWarnTrailingComma(true);
        boolean boolean65 = compilerEnvirons62.getWarnTrailingComma();
        astRoot1.putProp(7, (java.lang.Object) boolean65);
        java.lang.String str68 = astRoot1.toSource((-1468440406));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test02847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02847");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node7 = astRoot0.target;
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot12.setInStrictMode(true);
        astRoot12.checkParentLinks();
        astRoot0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        int int20 = scope19.getLineno();
        scope19.setBounds(1, 10);
        com.google.javascript.rhino.head.Node node24 = scope19.getLastChild();
        astRoot0.replaceWith(scope19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = astRoot0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node24);
    }

    @Test
    public void test02848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02848");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        int int4 = scriptNode0.depth();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = scriptNode0.new NodeIterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = scriptNode0.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = astRoot7.getSymbol("java.io.IOException: ");
        astRoot7.setSourceName("java.io.IOException: ");
        java.lang.String str15 = astRoot7.toSource(9);
        com.google.javascript.rhino.head.Node node16 = astRoot7.getFirstChild();
        com.google.javascript.rhino.head.Node node18 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        node18.putProp(0, (java.lang.Object) scriptNode23);
        com.google.javascript.rhino.head.Node node27 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        node27.putProp(0, (java.lang.Object) scriptNode32);
        int int35 = scriptNode32.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode32.getSymbols();
        scriptNode23.setSymbols(symbolList36);
        astRoot7.setSymbols(symbolList36);
        int int39 = astRoot7.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDefault((com.google.javascript.rhino.head.Node) astRoot7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(astRoot6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test02849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02849");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        java.lang.String str5 = astRoot0.toSource((int) (short) 0);
        astRoot0.setInStrictMode(false);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot0.new NodeIterator();
        boolean boolean9 = nodeIterator8.hasNext();
        boolean boolean10 = nodeIterator8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = nodeIterator8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02850");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.Node node5 = scope3.getFirstChild();
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope3);
        scope3.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode9 = scope3.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol14 = astRoot10.getSymbol("java.io.IOException: ");
        astRoot10.setEncodedSourceStart(0);
        java.lang.String str18 = astRoot10.toSource(14);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode9, (com.google.javascript.rhino.head.Node) astRoot10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor29 = null;
        astRoot21.visitComments(nodeVisitor29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope33.spliterator();
        astRoot31.addChildScope(scope33);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = astRoot31.getChildScopes();
        java.lang.String str37 = astRoot31.toString();
        astRoot21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot31);
        int int39 = astRoot31.getFunctionCount();
        java.lang.String str40 = astRoot31.toString();
        astRoot10.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot31);
        com.google.javascript.rhino.head.ast.Comment comment42 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot10.addComment(comment42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(astNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertNotNull(scopeList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "136" + "'", str37, "136");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "136" + "'", str40, "136");
    }

    @Test
    public void test02851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02851");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getParamCount();
        int int17 = astRoot3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope18 = astRoot3.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = scope18.makeIndent((-557946458));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scope18);
    }

    @Test
    public void test02852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02852");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        boolean boolean35 = compilerEnvirons32.isRecordingLocalJsDocComments();
        compilerEnvirons32.setWarnTrailingComma(false);
        compilerEnvirons32.setAllowSharpComments(false);
        boolean boolean40 = compilerEnvirons32.isGenerateDebugInfo();
        compilerEnvirons32.setIdeMode(false);
        compilerEnvirons32.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        boolean boolean49 = compilerEnvirons45.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons32, errorReporter50);
        com.google.javascript.rhino.head.IRFactory iRFactory52 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = iRFactory52.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        int int61 = scriptNode58.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node62 = scriptNode58.getLastChild();
        scriptNode58.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = null;
        scriptNode58.setSymbolTable(strMap65);
        astRoot56.setTop(scriptNode58);
        int int68 = astRoot56.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            astRoot56.labelId(1471166993);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test02853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02853");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        java.lang.String str7 = astRoot1.makeIndent(32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor17 = null;
        astRoot9.visitComments(nodeVisitor17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = astRoot19.getChildScopes();
        java.lang.String str25 = astRoot19.toString();
        astRoot9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot19);
        int int27 = astRoot19.getFunctionCount();
        astRoot1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot19);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator29 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator29.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int44 = positionComparator29.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot35, (com.google.javascript.rhino.head.ast.AstNode) scope43);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        java.lang.String str48 = astRoot46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = scriptNode49.getSymbols();
        java.lang.String str51 = astRoot46.toStringTree(scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        int int55 = positionComparator45.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode49, (com.google.javascript.rhino.head.ast.AstNode) scope52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator29.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int58 = astRoot57.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet59 = astRoot57.getComments();
        int int62 = astRoot57.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node63 = astRoot57.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        scope65.addChild((com.google.javascript.rhino.head.ast.AstNode) scope66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.Comment comment70 = null;
        scriptNode68.setJsDocNode(comment70);
        int int72 = scriptNode68.getLineno();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode68);
        int int74 = positionComparator45.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot57, (com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        int int75 = astRoot1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setBaseLineno((-932305774));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                " + "'", str7, "                                                                ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNotNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNotNull(symbolList50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(commentSet59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test02854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02854");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(9876721);
    }

    @Test
    public void test02855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02855");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = scriptNode2.target;
        int int5 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastChild();
        int int7 = scriptNode2.getEndLineno();
        scope1.setTop(scriptNode2);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node9 = scriptNode2.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test02856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02856");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment24 = null;
        astRoot17.setJsDocNode(comment24);
        astRoot17.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean30 = astRoot29.hasSideEffects();
        int int31 = astRoot29.getParamCount();
        astRoot17.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode33.toSource(0);
        scriptNode33.setEncodedSourceBounds(12, 10);
        scriptNode33.setSourceName("");
        astRoot17.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray44 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList45, symbolArray44);
        astRoot42.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList45);
        boolean boolean48 = astRoot42.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot42.getSymbolTable();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot42);
        astRoot2.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment53 = astRoot2.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int59 = astRoot58.getEndLineno();
        java.lang.Object obj60 = astRoot58.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray61 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet62 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet62, commentArray61);
        astRoot58.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet62);
        com.google.javascript.rhino.head.Node node65 = astRoot58.getLastSibling();
        int int66 = node65.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        java.lang.String str69 = astRoot67.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode70.getSymbols();
        java.lang.String str72 = astRoot67.toStringTree(scriptNode70);
        java.lang.String str74 = astRoot67.toSource(0);
        java.lang.String str76 = astRoot67.toSource(25);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope57, node65, (com.google.javascript.rhino.head.Node) astRoot67);
        int int80 = astRoot67.getIntProp(4, (-1593445669));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = astRoot67.getTop();
        // The following exception was thrown during execution in test generation
        try {
            comment53.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{\n}\n" + "'", str35, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(symbolArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(comment53);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(commentArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 136 + "'", int66 == 136);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "136" + "'", str69, "136");
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1593445669) + "'", int80 == (-1593445669));
        org.junit.Assert.assertNotNull(scriptNode81);
    }

    @Test
    public void test02857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02857");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        int int34 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setRecordingComments(false);
        compilerEnvirons0.setGenerateObserverCount(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test02858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02858");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isIdeMode();
        boolean boolean17 = compilerEnvirons0.isXmlAvailable();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion((-605534234));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: -605534234");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test02859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02859");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) -1);
        int int2 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = astRoot3.getAstRoot();
        java.lang.String str5 = astRoot4.shortName();
        java.lang.String str6 = astRoot4.debugPrint();
        com.google.javascript.rhino.head.Node node7 = astRoot4.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = astRoot4.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope10.setTop(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        scriptNode12.setCompilerData((java.lang.Object) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = astRoot18.getAstRoot();
        java.lang.String str20 = astRoot19.shortName();
        java.lang.String str21 = astRoot19.debugPrint();
        scope15.addChildToFront((com.google.javascript.rhino.head.Node) astRoot19);
        astRoot4.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot19);
        java.lang.String str24 = astRoot4.getSourceName();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) astRoot4);
        com.google.javascript.rhino.head.Node node26 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setFinally(node26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AstRoot" + "'", str5, "AstRoot");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(astRoot19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AstRoot" + "'", str20, "AstRoot");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str21, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test02860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02860");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1610320791));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02861");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator24 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator25 = positionComparator21.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str31 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope34, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = astRoot37.getAstRoot();
        java.lang.String str39 = astRoot38.shortName();
        java.lang.String str40 = astRoot38.getSourceName();
        astRoot38.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap42 = astRoot38.getSymbolTable();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) astRoot38);
        int int44 = scope34.getLineno();
        com.google.javascript.rhino.head.Node node45 = scope34.getLastSibling();
        int int46 = scope34.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray50 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList51, symbolArray50);
        astRoot48.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList51);
        boolean boolean54 = astRoot48.hasConsistentReturnUsage();
        astRoot48.setLineno((-3));
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) astRoot48);
        int int58 = positionComparator24.compare((com.google.javascript.rhino.head.ast.AstNode) scope34, (com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int61 = astRoot60.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getEndLineno();
        java.lang.Object obj64 = astRoot62.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray65 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet66, commentArray65);
        astRoot62.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot62.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getNextTempName();
        com.google.javascript.rhino.head.Node node72 = scriptNode70.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList73 = scriptNode70.getFunctions();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) scriptNode70);
        com.google.javascript.rhino.head.ast.Scope scope75 = scriptNode70.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str79 = astRoot78.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot80 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode81 = astRoot80.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode82.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot78, (com.google.javascript.rhino.head.Node) astRoot80, (com.google.javascript.rhino.head.Node) scriptNode82);
        int int86 = astRoot78.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope87 = new com.google.javascript.rhino.head.ast.Scope();
        scope87.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot78, scope87);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope87);
        com.google.javascript.rhino.head.ast.Scope scope91 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope92 = new com.google.javascript.rhino.head.ast.Scope();
        scope91.addChild((com.google.javascript.rhino.head.ast.AstNode) scope92);
        boolean boolean94 = scope91.hasSideEffects();
        int int95 = scope87.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope91);
        boolean boolean96 = scope91.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Symbol symbol98 = scope91.getSymbol("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        int int99 = positionComparator24.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode70, (com.google.javascript.rhino.head.ast.AstNode) scope91);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(astRoot38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AstRoot" + "'", str39, "AstRoot");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(symbolArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(commentArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(functionNodeList73);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "$0" + "'", str79, "$0");
        org.junit.Assert.assertNull(astNode81);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1693746091) + "'", int95 == (-1693746091));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNull(symbol98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test02862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02862");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot12.new NodeIterator();
        java.lang.String str31 = astRoot12.toSource(0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test02863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02863");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        int int3 = compilerEnvirons0.getLanguageVersion();
        int int4 = compilerEnvirons0.getLanguageVersion();
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        int int6 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons0.isGenerateDebugInfo();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(550287075);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 550287075");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test02864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02864");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        astRoot20.setPosition((int) (short) -1);
        astRoot20.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode42 = astRoot41.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scriptNode43);
        astRoot41.setInStrictMode(true);
        int int49 = astRoot41.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode53.getSymbols();
        java.lang.String str55 = astRoot50.toStringTree(scriptNode53);
        astRoot50.checkParentLinks();
        int int59 = astRoot50.getIntProp(11, 32);
        int int60 = astRoot50.getPosition();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((-738182430), (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot50, 2);
        com.google.javascript.rhino.head.Node node65 = com.google.javascript.rhino.head.Node.newString(13, "java.io.IOException: Scope");
        // The following exception was thrown during execution in test generation
        try {
            astRoot20.addChildBefore((com.google.javascript.rhino.head.Node) astRoot41, node65);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: newChild had siblings in addChildBefore");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(astNode42);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32 + "'", int59 == 32);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(node65);
    }

    @Test
    public void test02865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02865");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope25.setTop(scriptNode27);
        java.lang.String str30 = scope25.toSource(12);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot33, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot33.getComments();
        node31.addChildToBack((com.google.javascript.rhino.head.Node) astRoot33);
        com.google.javascript.rhino.head.Node node39 = astRoot33.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator40.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator41);
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node44 = node43.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        node43.addChildToFront((com.google.javascript.rhino.head.Node) scope45);
        int int47 = scope45.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scope45.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int52 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) scope45, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        node39.addChildToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setSourceName("{\n}\n");
        java.lang.String str65 = astRoot0.debugPrint();
        int int66 = astRoot0.depth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                        {\n                        }\n" + "'", str30, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-12) + "'", int52 == (-12));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str65, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test02866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02866");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1471166993);
        com.google.javascript.rhino.head.Node node2 = node1.getLastChild();
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test02867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02867");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Comment comment12 = scriptNode8.getJsDocNode();
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scriptNode8.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = scriptNode8.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = astRoot15.getAbsolutePosition();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNull(astRoot15);
    }

    @Test
    public void test02868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02868");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) '#', node34, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode38, 2);
        com.google.javascript.rhino.head.Node node46 = scope37.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getEndLineno();
        java.lang.Object obj52 = astRoot50.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        astRoot50.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode58.getFunctions();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int63 = astRoot48.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope65.setTop(scriptNode67);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = scope65.iterator();
        astRoot48.setParentScope(scope65);
        scope37.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot48);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        scope72.addChild((com.google.javascript.rhino.head.ast.AstNode) scope73);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = scope73.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node77 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node78 = node77.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        node77.addChildToFront((com.google.javascript.rhino.head.Node) scope79);
        scope73.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode76, node77);
        astRoot48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        scriptNode30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode76);
        java.lang.String str84 = scriptNode76.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node85 = scriptNode76.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test02869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02869");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        node14.putIntProp(1617122241, (-732722335));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
    }

    @Test
    public void test02870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02870");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        boolean boolean9 = scope6.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, scope10);
        astRoot0.replaceWith(scope6);
        scope6.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scope6.getSymbol("-1\tSCRIPT -1 1\n");
        boolean boolean19 = scope6.hasSideEffects();
        java.lang.String str21 = scope6.toSource((-100));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n{\n}\n}\n" + "'", str21, "{\n{\n}\n}\n");
    }

    @Test
    public void test02871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02871");
        java.io.IOException iOException3 = new java.io.IOException("136");
        java.io.IOException iOException4 = new java.io.IOException("java.io.IOException: 136", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("14\tSCRIPT 14 1\n", (java.lang.Throwable) iOException3);
    }

    @Test
    public void test02872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02872");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean3 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean4 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setRecordingComments(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test02873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02873");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        errorReporter16.warning("java.io.IOException: java.io.IOException", "14\tSCRIPT 14 1\n", 374803108, "{\n{\n}\n}\n", 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException28 = errorReporter16.runtimeError("java.io.IOException: 136", "typeof", (-605534234), "-1291599107\tSCRIPT -1291599107 1\n", 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -605534234");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
    }

    @Test
    public void test02874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02874");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = scriptNode2.target;
        int int5 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastChild();
        int int7 = scriptNode2.getEndLineno();
        scope1.setTop(scriptNode2);
        int int9 = scriptNode2.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = scriptNode2.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test02875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02875");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = astRoot4.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = astRoot4.getSymbols();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = astRoot18.getTop();
        com.google.javascript.rhino.head.Node node21 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node22 = node21.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        node21.addChildToFront((com.google.javascript.rhino.head.Node) scope23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = scope23.getAstRoot();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(437731425, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scope23, (int) (short) 100);
        astRoot4.setEncodedSourceEnd((int) (short) 10);
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(astRoot25);
    }

    @Test
    public void test02876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02876");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        java.lang.Object obj17 = astRoot2.getProp(129);
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.labelId((-738182430));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test02877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02877");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = scriptNode0.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        scope3.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        scope3.addChildToBack((com.google.javascript.rhino.head.Node) astRoot7);
        java.lang.String str9 = scope3.toString();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setContinue((com.google.javascript.rhino.head.Node) scope3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(astRoot2);
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
    }

    @Test
    public void test02878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02878");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean13 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons14.getErrorReporter();
        compilerEnvirons14.setRecordingLocalJsDocComments(true);
        boolean boolean22 = compilerEnvirons14.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean24 = compilerEnvirons23.recoverFromErrors();
        int int25 = compilerEnvirons23.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory28 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter26);
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean31 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setStrictMode(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test02879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02879");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList2 = scope1.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope6 = astRoot4.getDefiningScope("AstRoot");
        scope1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot4);
        com.google.javascript.rhino.head.ast.Symbol symbol9 = astRoot4.getSymbol("java.io.IOException");
        org.junit.Assert.assertNull(scopeList2);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(symbol9);
    }

    @Test
    public void test02880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02880");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getNextTempName();
        java.lang.String str9 = scriptNode7.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = scriptNode7.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node11 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node12 = node11.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode7, node12, (com.google.javascript.rhino.head.Node) astRoot14);
        int int16 = astRoot14.getEncodedSourceEnd();
        int int17 = astRoot14.getFunctionCount();
        astRoot14.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getEndLineno();
        java.lang.Object obj25 = astRoot23.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray26 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet27, commentArray26);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        astRoot23.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getNextTempName();
        com.google.javascript.rhino.head.Node node33 = scriptNode31.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode31.getFunctions();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode31);
        astRoot21.setEncodedSourceBounds(21, (int) (short) 10);
        astRoot21.setInStrictMode(true);
        astRoot14.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot21);
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) astRoot21);
        java.lang.String str44 = astRoot21.toSource((-1568335506));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray45 = astRoot21.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(commentArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test02881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02881");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        com.google.javascript.rhino.head.Node node39 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.Node node40 = astRoot32.target;
        astRoot12.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str44 = astRoot43.debugPrint();
        astRoot43.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment47 = null;
        astRoot43.setJsDocNode(comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = astRoot43.getChildScopes();
        java.lang.String str50 = astRoot43.debugPrint();
        boolean boolean51 = astRoot43.isInStrictMode();
        astRoot12.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = astRoot12.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray54 = astRoot12.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str44, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str50, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(astRoot53);
    }

    @Test
    public void test02882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02882");
        java.io.IOException iOException1 = new java.io.IOException("-1\t  BLOCK 0 1\n");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
    }

    @Test
    public void test02883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02883");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope25.setTop(scriptNode27);
        java.lang.String str30 = scope25.toSource(12);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot33, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot33.getComments();
        node31.addChildToBack((com.google.javascript.rhino.head.Node) astRoot33);
        com.google.javascript.rhino.head.Node node39 = astRoot33.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator40.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator41);
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node44 = node43.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        node43.addChildToFront((com.google.javascript.rhino.head.Node) scope45);
        int int47 = scope45.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scope45.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int52 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) scope45, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        node39.addChildToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        com.google.javascript.rhino.head.Node node63 = null;
        astRoot0.target = node63;
        boolean boolean65 = astRoot0.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setString("14\tSCRIPT 14 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                        {\n                        }\n" + "'", str30, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-12) + "'", int52 == (-12));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test02884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02884");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strSet7);
    }

    @Test
    public void test02885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02885");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        scriptNode1.removeProp(12);
        scriptNode1.setEncodedSourceBounds(953557037, (-1));
        // The following exception was thrown during execution in test generation
        try {
            double double21 = scriptNode1.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02886");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isGenerateDebugInfo();
        compilerEnvirons6.setIdeMode(false);
        compilerEnvirons6.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        boolean boolean23 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter24);
        compilerEnvirons0.setErrorReporter(errorReporter24);
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = iRFactory27.parse("  {\n  }\n", "                                                  ", 520361644);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot35 = iRFactory27.parse("java.io.IOException:                         {\n                        }\n", "-", 526823265);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: parser reused");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertNotNull(astRoot31);
    }

    @Test
    public void test02887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02887");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        boolean boolean11 = compilerEnvirons7.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons7.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException18 = errorReporter12.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons0.setErrorReporter(errorReporter12);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet25 = compilerEnvirons22.getActivationNames();
        boolean boolean26 = compilerEnvirons22.recoverFromErrors();
        boolean boolean27 = compilerEnvirons22.getWarnTrailingComma();
        boolean boolean28 = compilerEnvirons22.isIdeMode();
        boolean boolean29 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons30.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setWarnTrailingComma(true);
        boolean boolean36 = compilerEnvirons33.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons33.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser38 = new com.google.javascript.rhino.head.Parser(compilerEnvirons30, errorReporter37);
        com.google.javascript.rhino.head.Parser parser39 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter37);
        compilerEnvirons0.setErrorReporter(errorReporter37);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setWarnTrailingComma(true);
        boolean boolean44 = compilerEnvirons41.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons41.getErrorReporter();
        compilerEnvirons41.setGeneratingSource(false);
        int int48 = compilerEnvirons41.getOptimizationLevel();
        boolean boolean49 = compilerEnvirons41.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons50.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons50.getErrorReporter();
        boolean boolean54 = compilerEnvirons50.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = compilerEnvirons50.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException61 = errorReporter55.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter55.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser68 = new com.google.javascript.rhino.head.Parser(compilerEnvirons41, errorReporter55);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException74 = errorReporter55.runtimeError("14", "{\n{\n}\n}\n", 0, "java.io.IOException:                                                                 ", 170);
        com.google.javascript.rhino.head.Parser parser75 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter55);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException81 = errorReporter55.runtimeError("\210", "$2", (-547091060), "        {\n        }\n", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -547091060");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertNotNull(evaluatorException18);
        org.junit.Assert.assertNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(errorReporter55);
        org.junit.Assert.assertNotNull(evaluatorException61);
        org.junit.Assert.assertNotNull(evaluatorException74);
    }

    @Test
    public void test02888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02888");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        astRoot1.setBaseLineno(19);
        astRoot1.checkParentLinks();
        astRoot1.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor26 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
    }

    @Test
    public void test02889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02889");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(3);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.setEncodedSourceBounds(12, 10);
        scriptNode11.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = scriptNode11.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node23 = scriptNode11.setType((int) (short) 10);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(1246810839, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope4, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.lang.Class<?> wildcardClass25 = scriptNode11.getClass();
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02890");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        java.lang.String str36 = astRoot21.toSource(488584366);
        astRoot21.setInStrictMode(false);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump39 = astRoot21.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test02891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02891");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator35 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = positionComparator34.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator35);
        com.google.javascript.rhino.head.Node node37 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node38 = node37.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        node37.addChildToFront((com.google.javascript.rhino.head.Node) scope39);
        int int41 = scope39.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol43 = scope39.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int46 = positionComparator35.compare((com.google.javascript.rhino.head.ast.AstNode) scope39, (com.google.javascript.rhino.head.ast.AstNode) astRoot45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode51 = astRoot50.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode52);
        boolean boolean56 = astRoot48.isInStrictMode();
        astRoot48.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int60 = astRoot59.getEndLineno();
        java.lang.Object obj61 = astRoot59.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray62 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet63, commentArray62);
        astRoot59.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet63);
        astRoot59.checkParentLinks();
        int int67 = positionComparator35.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot48, (com.google.javascript.rhino.head.ast.AstNode) astRoot59);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str69 = astRoot68.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator71 = scope70.spliterator();
        astRoot68.addChildScope(scope70);
        java.lang.String str74 = astRoot68.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment75 = null;
        astRoot68.setJsDocNode(comment75);
        int int77 = astRoot68.getType();
        astRoot48.target = astRoot68;
        astRoot33.addChildToFront((com.google.javascript.rhino.head.Node) astRoot68);
        // The following exception was thrown during execution in test generation
        try {
            astRoot33.setEndLineno((-1593445669));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(symbol43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-12) + "'", int46 == (-12));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(astNode51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(commentArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-52) + "'", int67 == (-52));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "$0" + "'", str69, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 136 + "'", int77 == 136);
    }

    @Test
    public void test02892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02892");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.isRecordingComments();
        boolean boolean59 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setStrictMode(true);
        int int65 = compilerEnvirons62.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons66 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons66.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons69 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons69.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter72 = compilerEnvirons69.getErrorReporter();
        compilerEnvirons66.setErrorReporter(errorReporter72);
        compilerEnvirons62.setErrorReporter(errorReporter72);
        com.google.javascript.rhino.head.IRFactory iRFactory75 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter72);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot79 = iRFactory75.parse("-1291599107\tSCRIPT -1291599107 1\n", "java.io.IOException: -1\t  BLOCK 0 1\n", 365262889);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: missing ; before statement (java.io.IOException: -1?  BLOCK 0 1?#365262889)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(errorReporter72);
    }

    @Test
    public void test02893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02893");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node1 = node0.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        node0.addChildToFront((com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getNextTempName();
        com.google.javascript.rhino.head.Node node17 = scriptNode15.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = scriptNode15.getFunctions();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scriptNode15);
        int int20 = astRoot5.getEncodedSourceStart();
        astRoot5.setRelative(100);
        // The following exception was thrown during execution in test generation
        try {
            scope2.setLoop((com.google.javascript.rhino.head.ast.Jump) astRoot5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test02894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02894");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isAllowMemberExprAsFunctionName();
        compilerEnvirons5.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = iRFactory11.parse("{\n}\n", "java.io.IOException: java.io.IOException", (int) ' ');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot15.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode21 = astRoot20.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode22);
        astRoot20.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.Node node30 = scriptNode28.target;
        int int31 = scriptNode28.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node32 = scriptNode28.getLastChild();
        int int33 = scriptNode28.getEndLineno();
        astRoot20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot20.getSymbolTable();
        astRoot20.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot15, (com.google.javascript.rhino.head.ast.Scope) astRoot20);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDefault((com.google.javascript.rhino.head.Node) astRoot20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astRoot15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(astNode21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test02895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02895");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope1.getSymbol("-1\t  BLOCK 0 1\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope12 = scope1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(symbol11);
    }

    @Test
    public void test02896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02896");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        scriptNode29.removeChildren();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons31.getErrorReporter();
        boolean boolean35 = compilerEnvirons31.isGenerateObserverCount();
        boolean boolean36 = compilerEnvirons31.recoverFromErrors();
        java.util.Set<java.lang.String> strSet37 = compilerEnvirons31.getActivationNames();
        compilerEnvirons31.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser40 = new com.google.javascript.rhino.head.Parser(compilerEnvirons31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = parser40.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot44.setEncodedSourceEnd(4);
        java.lang.String str47 = astRoot44.debugPrint();
        com.google.javascript.rhino.head.ast.AstNode astNode48 = astRoot44.getParent();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.addChildToFront((com.google.javascript.rhino.head.Node) astNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strSet37);
        org.junit.Assert.assertNotNull(astRoot44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "0\tSCRIPT 0 0\n" + "'", str47, "0\tSCRIPT 0 0\n");
        org.junit.Assert.assertNull(astNode48);
    }

    @Test
    public void test02897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02897");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scope28.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node33 = node32.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        node32.addChildToFront((com.google.javascript.rhino.head.Node) scope34);
        scope28.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, node32);
        scriptNode31.flattenSymbolTable(false);
        int int39 = scriptNode31.getType();
        scriptNode31.setBaseLineno(5);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope43 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 239775099 + "'", int42 == 239775099);
    }

    @Test
    public void test02898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02898");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = scope10.spliterator();
        astRoot8.addChildScope(scope10);
        java.lang.String str14 = astRoot8.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment15 = null;
        astRoot8.setJsDocNode(comment15);
        astRoot8.setEncodedSourceStart(4);
        astRoot8.removeChildren();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot8);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot8.visit(nodeVisitor21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02899");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("", "-1\tSCRIPT -1 1\n", 19);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot4.getComments();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot4.new NodeIterator();
        astRoot4.checkParentLinks();
        astRoot4.putIntProp(1, 488584366);
        // The following exception was thrown during execution in test generation
        try {
            astRoot4.labelId(1330917185);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertNull(commentSet5);
    }

    @Test
    public void test02900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02900");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scope0.spliterator();
        scope0.setRelative((int) (short) 10);
        int int4 = scope0.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scope7.spliterator();
        astRoot5.addChildScope(scope7);
        java.lang.String str11 = astRoot5.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = astRoot5.getFunctions();
        java.lang.String str13 = astRoot5.toSource();
        int int14 = astRoot5.getFunctionCount();
        astRoot5.checkParentLinks();
        java.lang.String str16 = astRoot5.debugPrint();
        scope0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot5);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope18 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str16, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test02901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02901");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        int int10 = scriptNode4.getEncodedSourceEnd();
        java.lang.String str11 = scriptNode4.shortName();
        int int12 = scriptNode4.getEncodedSourceEnd();
        scriptNode4.setLineno((-1438167940));
        int int15 = scriptNode4.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = scriptNode4.getExistingIntProp(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02902");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(0, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator7 = scope6.spliterator();
        astRoot4.addChildScope(scope6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = astRoot4.getChildScopes();
        astRoot4.removeProp(520361644);
        com.google.javascript.rhino.head.Parser parser12 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = parser12.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        java.lang.String str37 = astRoot35.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode38.getSymbols();
        java.lang.String str40 = astRoot35.toStringTree(scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope42.setTop(scriptNode44);
        java.lang.String str47 = scope42.toSource(12);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot50, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = astRoot50.getComments();
        node48.addChildToBack((com.google.javascript.rhino.head.Node) astRoot50);
        com.google.javascript.rhino.head.Node node56 = astRoot50.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator57 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator58 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator59 = positionComparator57.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator58);
        com.google.javascript.rhino.head.Node node60 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node61 = node60.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        node60.addChildToFront((com.google.javascript.rhino.head.Node) scope62);
        int int64 = scope62.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol66 = scope62.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int69 = positionComparator58.compare((com.google.javascript.rhino.head.ast.AstNode) scope62, (com.google.javascript.rhino.head.ast.AstNode) astRoot68);
        node56.addChildToFront((com.google.javascript.rhino.head.Node) astRoot68);
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int72 = astRoot71.getEndLineno();
        java.lang.Object obj73 = astRoot71.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray74 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet75 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet75, commentArray74);
        astRoot71.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        astRoot68.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot82 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str83 = astRoot82.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode85 = astRoot84.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode86.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot82, (com.google.javascript.rhino.head.Node) astRoot84, (com.google.javascript.rhino.head.Node) scriptNode86);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList90 = scriptNode86.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList91 = scriptNode86.getFunctions();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode86);
        scope2.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot4);
        java.lang.String str94 = astRoot4.getSourceName();
        com.google.javascript.rhino.head.Node node96 = astRoot4.setType(541550340);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator7);
        org.junit.Assert.assertNotNull(scopeList9);
        org.junit.Assert.assertNotNull(astRoot16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "136" + "'", str37, "136");
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(commentSet54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(astNodeComparator59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(symbol66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-12) + "'", int69 == (-12));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(commentArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "$0" + "'", str83, "$0");
        org.junit.Assert.assertNull(astNode85);
        org.junit.Assert.assertNull(scopeList90);
        org.junit.Assert.assertNotNull(functionNodeList91);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(node96);
    }

    @Test
    public void test02903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02903");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-264283662), 11);
    }

    @Test
    public void test02904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02904");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        boolean boolean9 = scope6.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, scope10);
        astRoot0.replaceWith(scope6);
        com.google.javascript.rhino.head.Node node15 = scope6.target;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node16 = scope6.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test02905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02905");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        astRoot2.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons16.getErrorReporter();
        boolean boolean20 = compilerEnvirons16.isGenerateObserverCount();
        compilerEnvirons16.setRecordingComments(true);
        boolean boolean23 = compilerEnvirons16.isGenerateObserverCount();
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons27.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons16, errorReporter30);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        java.lang.String str39 = astRoot34.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        int int43 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode37, (com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = astRoot44.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int61 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) astRoot53);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, 24);
        astRoot53.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = iRFactory31.transformTree(astRoot53);
        int int66 = astRoot53.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot8, 7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode71.getSymbols();
        com.google.javascript.rhino.head.Node node73 = scriptNode71.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int75 = astRoot74.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray76 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList77, symbolArray76);
        astRoot74.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList77);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        scope80.addChild((com.google.javascript.rhino.head.ast.AstNode) scope81);
        astRoot74.addChildScope(scope81);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList84 = astRoot74.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = astRoot74.getSymbols();
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        java.lang.String str87 = scriptNode71.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(astRoot68);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(symbolArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(astNodeList84);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test02906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02906");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getNextTempName();
        com.google.javascript.rhino.head.Node node12 = scriptNode10.target;
        scriptNode10.setBounds((int) (byte) -1, 23);
        int int16 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode53.toSource(0);
        scriptNode53.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) '#', node49, (com.google.javascript.rhino.head.Node) scope52, (com.google.javascript.rhino.head.Node) scriptNode53, 2);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope62.setTop(scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        scriptNode64.setCompilerData((java.lang.Object) scope67);
        scriptNode64.setEncodedSourceEnd(0);
        int int72 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode53, (com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(526823265, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode64, 541550340);
        node74.removeChildren();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test02907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02907");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        int int9 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope7.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int14 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scope7, (com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        boolean boolean24 = astRoot16.isInStrictMode();
        astRoot16.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        astRoot27.checkParentLinks();
        int int35 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot16, (com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        int int40 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node41 = scriptNode37.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.Comment comment49 = null;
        scriptNode47.setJsDocNode(comment49);
        int int51 = scriptNode47.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scope53.getChildScopes();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope53, (int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode47.getChildScopes();
        int int58 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode37, (com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor59 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode47.visit(nodeVisitor59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-12) + "'", int14 == (-12));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-52) + "'", int35 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test02908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02908");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        com.google.javascript.rhino.head.ast.Comment comment3 = null;
        scriptNode0.setJsDocNode(comment3);
        int int5 = scriptNode0.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = scriptNode0.getRegexpString(441866554);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test02909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02909");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        int int5 = astRoot0.getPosition();
        int int6 = astRoot0.getPosition();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getLastSibling();
        java.lang.String str8 = astRoot0.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setBaseLineno((-738182430));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test02910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02910");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        int int3 = astRoot0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode9 = astRoot8.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) scriptNode10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        compilerEnvirons14.setRecordingComments(true);
        boolean boolean21 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean22 = compilerEnvirons14.isGenerateDebugInfo();
        compilerEnvirons14.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter28 = compilerEnvirons25.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory29 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter28);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        java.lang.String str34 = astRoot32.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        java.lang.String str37 = astRoot32.toStringTree(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        int int41 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode35, (com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = scope44.spliterator();
        astRoot42.addChildScope(scope44);
        java.lang.String str48 = astRoot42.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = astRoot42.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode54 = astRoot53.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode55);
        int int59 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot42, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot51, 24);
        astRoot51.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = iRFactory29.transformTree(astRoot51);
        int int64 = astRoot51.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot51);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot6);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node67 = astRoot6.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(astNode9);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(errorReporter28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "136" + "'", str34, "136");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(astNode54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test02911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02911");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        int int10 = scriptNode4.getEncodedSourceEnd();
        java.lang.String str11 = scriptNode4.shortName();
        int int12 = scriptNode4.getEncodedSourceEnd();
        scriptNode4.setPosition(0);
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode4.getParentScope();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scope15);
    }

    @Test
    public void test02912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02912");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node29 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator30.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator31);
        com.google.javascript.rhino.head.Node node33 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node34 = node33.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        node33.addChildToFront((com.google.javascript.rhino.head.Node) scope35);
        int int37 = scope35.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = scope35.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int42 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scope35, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        node29.addChildToFront((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.Node node44 = astRoot41.getLastSibling();
        boolean boolean45 = astRoot41.hasSideEffects();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons47 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons47.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet50 = compilerEnvirons47.getActivationNames();
        boolean boolean51 = compilerEnvirons47.recoverFromErrors();
        boolean boolean52 = compilerEnvirons47.getWarnTrailingComma();
        boolean boolean53 = compilerEnvirons47.isIdeMode();
        boolean boolean54 = compilerEnvirons47.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons55 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons55.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons58 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons58.setWarnTrailingComma(true);
        boolean boolean61 = compilerEnvirons58.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter62 = compilerEnvirons58.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser63 = new com.google.javascript.rhino.head.Parser(compilerEnvirons55, errorReporter62);
        com.google.javascript.rhino.head.Parser parser64 = new com.google.javascript.rhino.head.Parser(compilerEnvirons47, errorReporter62);
        boolean boolean65 = compilerEnvirons47.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons66 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons66.setWarnTrailingComma(true);
        boolean boolean69 = compilerEnvirons66.isRecordingLocalJsDocComments();
        compilerEnvirons66.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter72 = compilerEnvirons66.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException78 = errorReporter72.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser79 = new com.google.javascript.rhino.head.Parser(compilerEnvirons47, errorReporter72);
        astRoot41.putProp(9, (java.lang.Object) parser79);
        com.google.javascript.rhino.head.Node node81 = astRoot41.target;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node82 = node81.getLastSibling();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-12) + "'", int42 == (-12));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(errorReporter62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(errorReporter72);
        org.junit.Assert.assertNotNull(evaluatorException78);
        org.junit.Assert.assertNull(node81);
    }

    @Test
    public void test02913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02913");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setRecordingLocalJsDocComments(false);
        boolean boolean6 = compilerEnvirons3.isGeneratingSource();
        compilerEnvirons3.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setIdeMode(false);
        compilerEnvirons9.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons22.getErrorReporter();
        boolean boolean26 = compilerEnvirons22.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter27);
        compilerEnvirons3.setErrorReporter(errorReporter27);
        errorReporter27.warning("  {\n  }\n", "                                      {\n                                      }\n", 0, "8\tSCRIPT 8 1\n", (int) (short) 10);
        errorReporter27.warning("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)", "-1\tSCRIPT -1 1\n", 19, "21", 775058292);
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter27);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException48 = errorReporter27.runtimeError("hi!", "-", 0, "                    ", (-389600783));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -389600783");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorReporter27);
    }

    @Test
    public void test02914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02914");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(97, (-12));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node3 = scope2.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02915");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        astRoot1.checkParentLinks();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test02916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02916");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isGenerateDebugInfo();
        compilerEnvirons26.setIdeMode(false);
        compilerEnvirons26.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons39.getErrorReporter();
        boolean boolean43 = compilerEnvirons39.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons39.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser45 = new com.google.javascript.rhino.head.Parser(compilerEnvirons26, errorReporter44);
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = iRFactory46.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        // The following exception was thrown during execution in test generation
        try {
            astRoot50.setString("");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorReporter44);
        org.junit.Assert.assertNotNull(astRoot50);
    }

    @Test
    public void test02917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02917");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = astRoot1.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        int int14 = astRoot7.depth();
        int int15 = astRoot1.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot7);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet16 = astRoot1.getComments();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = astRoot1.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-819171390) + "'", int15 == (-819171390));
        org.junit.Assert.assertNull(commentSet16);
    }

    @Test
    public void test02918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02918");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getEndLineno();
        java.lang.Object obj10 = astRoot8.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray11 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet12 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet12, commentArray11);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet12);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        java.lang.String str26 = astRoot24.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode27.getSymbols();
        java.lang.String str29 = astRoot24.toStringTree(scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope31.setTop(scriptNode33);
        java.lang.String str36 = scope31.toSource(12);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot39, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = astRoot39.getComments();
        node37.addChildToBack((com.google.javascript.rhino.head.Node) astRoot39);
        com.google.javascript.rhino.head.Node node45 = astRoot39.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator48 = positionComparator46.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator47);
        com.google.javascript.rhino.head.Node node49 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node50 = node49.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        node49.addChildToFront((com.google.javascript.rhino.head.Node) scope51);
        int int53 = scope51.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol55 = scope51.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int58 = positionComparator47.compare((com.google.javascript.rhino.head.ast.AstNode) scope51, (com.google.javascript.rhino.head.ast.AstNode) astRoot57);
        node45.addChildToFront((com.google.javascript.rhino.head.Node) astRoot57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int61 = astRoot60.getEndLineno();
        java.lang.Object obj62 = astRoot60.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray63 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet64, commentArray63);
        astRoot60.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot57.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot1.setSourceName("                                                  ");
        java.lang.String str73 = astRoot1.toSource(20);
        int int74 = astRoot1.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setDouble((double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(commentArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "136" + "'", str26, "136");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                        {\n                        }\n" + "'", str36, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(commentSet43);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(astNodeComparator48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(symbol55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-12) + "'", int58 == (-12));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(commentArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test02919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02919");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(608130738, "");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test02920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02920");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode2 = astRoot1.getParent();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scope5);
        com.google.javascript.rhino.head.Node node7 = scope5.getFirstChild();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope5);
        astRoot1.target = node8;
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = astRoot1.getAstRoot();
        java.lang.String str11 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot12.getAstRoot();
        java.lang.String str14 = astRoot13.shortName();
        java.lang.String str15 = astRoot13.debugPrint();
        astRoot13.clearParentScope();
        java.lang.Object obj17 = astRoot13.getCompilerData();
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot13);
        int int19 = astRoot1.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = astRoot21.getAstRoot();
        java.lang.String str23 = astRoot22.shortName();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        int int28 = scope26.getLineno();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scope26, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = astRoot22.new NodeIterator();
        int int36 = astRoot22.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        java.lang.String str41 = astRoot39.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode42.getSymbols();
        java.lang.String str44 = astRoot39.toStringTree(scriptNode42);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        int int48 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode42, (com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = scope51.spliterator();
        astRoot49.addChildScope(scope51);
        java.lang.String str55 = astRoot49.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = astRoot49.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str59 = astRoot58.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode61 = astRoot60.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode62.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) scriptNode62);
        int int66 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot49, (com.google.javascript.rhino.head.ast.AstNode) astRoot58);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot58, 24);
        astRoot58.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = astRoot58.getAstRoot();
        int int71 = astRoot22.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot70);
        com.google.javascript.rhino.head.Node node72 = astRoot70.getNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-8), (com.google.javascript.rhino.head.Node) astRoot1, node72, (-55137080));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AstRoot" + "'", str14, "AstRoot");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str15, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertNotNull(astRoot22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AstRoot" + "'", str23, "AstRoot");
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "136" + "'", str41, "136");
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(astRoot70);
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1651616726 + "'", int71 == 1651616726);
        org.junit.Assert.assertNull(node72);
    }

    @Test
    public void test02921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02921");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        errorReporter6.warning("-1", "                                    ", (int) (short) 100, "129", 18);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter6.error("java.io.IOException: java.io.IOException: java.io.IOException: ", "89620153", (int) '#', "Scope", 122705610);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: java.io.IOException: java.io.IOException: java.io.IOException:  (89620153#35)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
    }

    @Test
    public void test02922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02922");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scope28.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node33 = node32.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        node32.addChildToFront((com.google.javascript.rhino.head.Node) scope34);
        scope28.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, node32);
        scriptNode31.flattenSymbolTable(false);
        int int39 = scriptNode31.getType();
        scriptNode31.setBaseLineno(5);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = astRoot0.getFunctions();
        int int44 = astRoot0.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump45 = astRoot0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-615849716) + "'", int42 == (-615849716));
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test02923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02923");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = astRoot37.getChildScopes();
        java.lang.String str51 = astRoot37.debugPrint();
        int int54 = astRoot37.getIntProp(129, (int) (short) 10);
        int int55 = astRoot37.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            astRoot37.setDouble((double) 1115693949);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str51, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test02924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02924");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = astRoot79.getTop();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet89 = astRoot79.getComments();
        int int90 = astRoot79.getEncodedSourceStart();
        java.lang.String str91 = astRoot79.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-138693843) + "'", int67 == (-138693843));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNull(commentSet89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "136" + "'", str91, "136");
    }

    @Test
    public void test02925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02925");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        int int17 = astRoot9.getParamCount();
        java.lang.String str18 = astRoot9.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray22 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList23, symbolArray22);
        astRoot20.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList23);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        astRoot20.addChildScope(scope27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getEndLineno();
        java.lang.Object obj35 = astRoot33.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot33.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        astRoot33.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = scriptNode41.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode41.getFunctions();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int46 = astRoot31.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot31);
        astRoot31.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot54.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = scriptNode62.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = scriptNode62.getFunctions();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode62);
        astRoot31.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot54);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot54);
        astRoot54.setEncodedSourceBounds((int) (short) -1, 13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor72 = null;
        astRoot54.visitComments(nodeVisitor72);
        boolean boolean74 = astRoot54.isInStrictMode();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str84 = scriptNode82.toSource(0);
        scriptNode82.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node((int) '#', node78, (com.google.javascript.rhino.head.Node) scope81, (com.google.javascript.rhino.head.Node) scriptNode82, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode90 = scriptNode82.getEnclosingFunction();
        int int91 = scriptNode82.getType();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((-1115328205), (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode82);
        astRoot54.setBaseLineno(0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(symbolArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{\n}\n" + "'", str84, "{\n}\n");
        org.junit.Assert.assertNull(functionNode90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 136 + "'", int91 == 136);
    }

    @Test
    public void test02926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02926");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        astRoot15.setBounds(11, 775058292);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        java.lang.String str49 = astRoot47.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode50.getSymbols();
        java.lang.String str52 = astRoot47.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        int int56 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode50, (com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator60 = scope59.spliterator();
        astRoot57.addChildScope(scope59);
        java.lang.String str63 = astRoot57.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = astRoot57.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str67 = astRoot66.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode69 = astRoot68.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) astRoot68, (com.google.javascript.rhino.head.Node) scriptNode70);
        int int74 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot57, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot66, 24);
        astRoot66.removeChildren();
        java.lang.String str78 = astRoot66.toString();
        astRoot15.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot66);
        astRoot15.setEncodedSourceEnd((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            astRoot15.setString("0\tSCRIPT 0 2\n0\t  EXPR_RESULT 0 2\n0\t    NAME 0 2 $0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "136" + "'", str49, "136");
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertNull(astNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "136" + "'", str78, "136");
    }

    @Test
    public void test02927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02927");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.removeProp(8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = astRoot31.getAstRoot();
        java.lang.String str33 = astRoot32.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = astRoot32.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray37 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList38, symbolArray37);
        astRoot35.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        scriptNode34.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        scriptNode34.setSourceName("$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AstRoot" + "'", str33, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(symbolArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test02928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02928");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.Node node29 = astRoot7.setType(20);
        java.lang.String str30 = node29.getJsDoc();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test02929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02929");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        java.lang.String str7 = astRoot1.makeIndent(32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor17 = null;
        astRoot9.visitComments(nodeVisitor17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = astRoot19.getChildScopes();
        java.lang.String str25 = astRoot19.toString();
        astRoot9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot19);
        int int27 = astRoot19.getFunctionCount();
        astRoot1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot19);
        java.lang.String str30 = astRoot1.makeIndent(10);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                " + "'", str7, "                                                                ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNotNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                    " + "'", str30, "                    ");
    }

    @Test
    public void test02930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02930");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1268796928));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02931");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot1.getSymbols();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = astRoot1.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        java.lang.String str27 = scriptNode25.debugPrint();
        scriptNode25.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getEndLineno();
        java.lang.Object obj42 = astRoot40.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray43 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet44, commentArray43);
        astRoot40.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        int int48 = astRoot38.getRegexpCount();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot38, 550287075);
        com.google.javascript.rhino.head.Node node51 = astRoot31.target;
        java.lang.String str52 = astRoot31.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        astRoot31.visitComments(nodeVisitor53);
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot31);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = astRoot1.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node57 = nodeIterator56.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(commentArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test02932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02932");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot2, 4);
        boolean boolean6 = node5.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((-52), node5, 1796887248);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test02933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02933");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        scriptNode9.setBounds((int) (byte) -1, 23);
        int int15 = astRoot3.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = scope17.new NodeIterator();
        scope17.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        java.lang.String str29 = astRoot22.toSource(0);
        java.lang.String str31 = astRoot22.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        int int36 = scriptNode32.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        int int41 = scriptNode37.getEncodedSourceEnd();
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode47 = astRoot46.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) scriptNode48);
        int int52 = astRoot44.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot44, scope53);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = astRoot44.getSymbolTable();
        scriptNode32.setSymbolTable(strMap56);
        astRoot22.setSymbolTable(strMap56);
        scope17.setSymbolTable(strMap56);
        astRoot3.setSymbolTable(strMap56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int65 = astRoot64.getEndLineno();
        java.lang.Object obj66 = astRoot64.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray67 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet68 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet68, commentArray67);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet68);
        astRoot64.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str73 = scriptNode72.getNextTempName();
        com.google.javascript.rhino.head.Node node74 = scriptNode72.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList75 = scriptNode72.getFunctions();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) scriptNode72);
        int int77 = astRoot62.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        scope78.addChild((com.google.javascript.rhino.head.ast.AstNode) scope79);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope79.setTop(scriptNode81);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor83 = scope79.iterator();
        astRoot62.setParentScope(scope79);
        java.lang.String str85 = scope79.toString();
        astRoot3.setParent((com.google.javascript.rhino.head.ast.AstNode) scope79);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = astRoot3.getExistingIntProp(703513808);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(commentArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(functionNodeList75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(nodeItor83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "129" + "'", str85, "129");
    }

    @Test
    public void test02934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02934");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(false);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean13 = compilerEnvirons0.isGenerateDebugInfo();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test02935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02935");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope19.setTop(scriptNode21);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scope19.iterator();
        astRoot2.setParentScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot2.getAstRoot();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) astRoot2, 526823265);
        int int28 = astRoot2.getLineno();
        astRoot2.setLength((-1285574509));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test02936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02936");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        astRoot1.setRelative((int) '4');
        int int12 = astRoot1.getEncodedSourceStart();
        java.lang.String str14 = astRoot1.toSource(1942790351);
        java.lang.String str15 = astRoot1.debugPrint();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-53\tSCRIPT -53 1\n" + "'", str15, "-53\tSCRIPT -53 1\n");
    }

    @Test
    public void test02937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02937");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor9 = null;
        astRoot1.visitComments(nodeVisitor9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = astRoot11.getChildScopes();
        java.lang.String str17 = astRoot11.toString();
        astRoot1.addChildToBack((com.google.javascript.rhino.head.Node) astRoot11);
        int int19 = astRoot11.getFunctionCount();
        java.lang.String str20 = astRoot11.toString();
        astRoot11.setBaseLineno(2);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor23 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot11.visit(nodeVisitor23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNotNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
    }

    @Test
    public void test02938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02938");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                      {\n                                      }\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test02939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02939");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode0.setEncodedSourceBounds((int) (short) 100, 10);
        int int8 = scriptNode0.getIntProp(0, 9);
        java.lang.String str10 = scriptNode0.toSource(17);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.setTop(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        scriptNode15.setCompilerData((java.lang.Object) scope18);
        scriptNode15.setEncodedSourceEnd(0);
        int int23 = scriptNode15.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        scriptNode15.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        scriptNode0.putProp(548641306, (java.lang.Object) astRoot24);
        int int33 = scriptNode0.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            double double34 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9 + "'", int8 == 9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                  {\n                                  }\n" + "'", str10, "                                  {\n                                  }\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 136 + "'", int23 == 136);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test02940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02940");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException26 = errorReporter20.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter20);
        errorReporter20.warning("2\tBLOCK 2 -1\n", "                                                                                                                                                                                                                                                                  ", (int) (short) 10, "775058292", 25);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(evaluatorException26);
    }

    @Test
    public void test02941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02941");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot13.getAstRoot();
        java.lang.String str15 = astRoot14.shortName();
        java.lang.String str17 = astRoot14.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot14.getFunctions();
        astRoot14.checkParentLinks();
        boolean boolean20 = astRoot14.hasConsistentReturnUsage();
        int int21 = astRoot14.getRegexpCount();
        scriptNode3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot14);
        int int25 = astRoot14.getIntProp(25, (int) (short) 0);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = astRoot14.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope27 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AstRoot" + "'", str15, "AstRoot");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator26);
    }

    @Test
    public void test02942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02942");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet12 = compilerEnvirons9.getActivationNames();
        boolean boolean13 = compilerEnvirons9.recoverFromErrors();
        boolean boolean14 = compilerEnvirons9.getWarnTrailingComma();
        boolean boolean15 = compilerEnvirons9.isIdeMode();
        boolean boolean16 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17, errorReporter24);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter24);
        boolean boolean27 = compilerEnvirons9.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setWarnTrailingComma(true);
        boolean boolean31 = compilerEnvirons28.isRecordingLocalJsDocComments();
        compilerEnvirons28.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException40 = errorReporter34.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter34);
        compilerEnvirons0.setErrorReporter(errorReporter34);
        compilerEnvirons0.setGenerateObserverCount(true);
        compilerEnvirons0.setAllowSharpComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory47 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        astRoot48.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = astRoot48.getAstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        java.lang.String str57 = astRoot55.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode58.getSymbols();
        java.lang.String str60 = astRoot55.toStringTree(scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        int int64 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode58, (com.google.javascript.rhino.head.ast.AstNode) scope61);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator68 = scope67.spliterator();
        astRoot65.addChildScope(scope67);
        java.lang.String str71 = astRoot65.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList72 = astRoot65.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot76.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot74, (com.google.javascript.rhino.head.Node) astRoot76, (com.google.javascript.rhino.head.Node) scriptNode78);
        int int82 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot65, (com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        astRoot52.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = iRFactory47.transformTree(astRoot74);
        java.lang.Class<?> wildcardClass85 = iRFactory47.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertNotNull(evaluatorException40);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(astRoot52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "136" + "'", str57, "136");
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(functionNodeList72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(scriptNode84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test02943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02943");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        astRoot6.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = astRoot6.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
    }

    @Test
    public void test02944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02944");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(23);
        scope1.removeProp(22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        astRoot4.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = astRoot4.getAstRoot();
        java.lang.String str9 = astRoot8.shortName();
        // The following exception was thrown during execution in test generation
        try {
            scope1.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(astRoot8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AstRoot" + "'", str9, "AstRoot");
    }

    @Test
    public void test02945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02945");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scope0.spliterator();
        scope0.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        scope0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        int int22 = astRoot9.getRegexpCount();
        com.google.javascript.rhino.head.Node node23 = astRoot9.getNext();
        astRoot9.setBaseLineno(10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isGenerateDebugInfo();
        compilerEnvirons26.setIdeMode(false);
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory41 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray45 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList46, symbolArray45);
        astRoot43.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        astRoot43.addChildScope(scope50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getEndLineno();
        java.lang.Object obj58 = astRoot56.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray59 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet60 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet60, commentArray59);
        astRoot56.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet60);
        astRoot56.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getNextTempName();
        com.google.javascript.rhino.head.Node node66 = scriptNode64.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode64.getFunctions();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode64);
        int int69 = astRoot54.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot54);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str80 = scriptNode78.toSource(0);
        scriptNode78.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node((int) '#', node74, (com.google.javascript.rhino.head.Node) scope77, (com.google.javascript.rhino.head.Node) scriptNode78, 2);
        com.google.javascript.rhino.head.Node node86 = scope77.getLastChild();
        com.google.javascript.rhino.head.Node node87 = astRoot43.getChildBefore(node86);
        java.lang.String str89 = astRoot43.toSource(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = iRFactory41.transformTree(astRoot43);
        java.lang.String str91 = scriptNode90.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            scope0.replaceChild((com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode90);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(symbolArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(commentArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{\n}\n" + "'", str80, "{\n}\n");
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertNull(node87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(scriptNode90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test02946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02946");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        astRoot0.setEncodedSourceBounds((int) 'a', (int) (short) 1);
        int int15 = astRoot0.getLineno();
        astRoot0.setEncodedSource("136");
        com.google.javascript.rhino.head.ast.Scope scope18 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addChildScope(scope18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test02947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02947");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        int int5 = astRoot1.getIntProp((int) (short) 1, (-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment13 = null;
        astRoot6.setJsDocNode(comment13);
        astRoot6.setEncodedSourceStart(4);
        astRoot6.removeChildren();
        astRoot6.flattenSymbolTable(true);
        java.lang.String str20 = astRoot1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode22 = astRoot21.getParent();
        astRoot21.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = astRoot21.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray28 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList29, symbolArray28);
        astRoot26.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList29);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        astRoot26.addChildScope(scope33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int38 = astRoot37.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int40 = astRoot39.getEndLineno();
        java.lang.Object obj41 = astRoot39.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray42 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet43, commentArray42);
        astRoot39.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet43);
        astRoot39.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = scriptNode47.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode47.getFunctions();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode47);
        int int52 = astRoot37.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot37);
        astRoot37.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int58 = astRoot57.getEndLineno();
        java.lang.Object obj59 = astRoot57.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray60 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet61 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet61, commentArray60);
        astRoot57.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet61);
        com.google.javascript.rhino.head.Node node64 = astRoot57.getLastSibling();
        com.google.javascript.rhino.head.Node node65 = astRoot57.target;
        astRoot37.addChildToBack((com.google.javascript.rhino.head.Node) astRoot57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str69 = astRoot68.debugPrint();
        astRoot68.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment72 = null;
        astRoot68.setJsDocNode(comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = astRoot68.getChildScopes();
        java.lang.String str75 = astRoot68.debugPrint();
        boolean boolean76 = astRoot68.isInStrictMode();
        astRoot37.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot68);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = astRoot37.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(astNode22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(symbolArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(commentArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(commentArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str69, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(scopeList74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str75, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(astRoot78);
    }

    @Test
    public void test02948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02948");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj4 = node2.getProp((-52));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        int int7 = scriptNode5.depth();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.lang.String str43 = scope38.toSource(12);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot46, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot46.getComments();
        node44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.Node node52 = astRoot46.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node57 = node56.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        node56.addChildToFront((com.google.javascript.rhino.head.Node) scope58);
        int int60 = scope58.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol62 = scope58.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int65 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scope58, (com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        node52.addChildToFront((com.google.javascript.rhino.head.Node) astRoot64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(22, node2, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot12);
        int int78 = scriptNode5.getFunctionCount();
        int int79 = scriptNode5.getPosition();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor80 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.visit(nodeVisitor80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                        {\n                        }\n" + "'", str43, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(commentSet50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(symbol62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-12) + "'", int65 == (-12));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test02949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02949");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(100);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope2 = scriptNode1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02950");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator29 = positionComparator28.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator30.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator31);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator35 = positionComparator33.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int48 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot39, (com.google.javascript.rhino.head.ast.AstNode) scope47);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = astNodeComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator33);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator50 = astNodeComparator49.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator51 = astNodeComparator49.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator52 = positionComparator28.thenComparing(astNodeComparator49);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode18.setCompilerData((java.lang.Object) astNodeComparator52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNotNull(astNodeComparator29);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(astNodeComparator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertNotNull(astNodeComparator50);
        org.junit.Assert.assertNotNull(astNodeComparator51);
        org.junit.Assert.assertNotNull(astNodeComparator52);
    }

    @Test
    public void test02951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02951");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        scriptNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot24.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        boolean boolean33 = scope30.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope30, scope34);
        astRoot24.replaceWith(scope30);
        int int39 = astRoot24.getEncodedSourceEnd();
        scriptNode17.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump42 = astRoot0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNotNull(scopeList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test02952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02952");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        boolean boolean11 = compilerEnvirons7.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons7.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException18 = errorReporter12.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons0.setErrorReporter(errorReporter12);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet25 = compilerEnvirons22.getActivationNames();
        boolean boolean26 = compilerEnvirons22.recoverFromErrors();
        boolean boolean27 = compilerEnvirons22.getWarnTrailingComma();
        boolean boolean28 = compilerEnvirons22.isIdeMode();
        boolean boolean29 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons30.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setWarnTrailingComma(true);
        boolean boolean36 = compilerEnvirons33.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons33.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser38 = new com.google.javascript.rhino.head.Parser(compilerEnvirons30, errorReporter37);
        com.google.javascript.rhino.head.Parser parser39 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter37);
        compilerEnvirons0.setErrorReporter(errorReporter37);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setWarnTrailingComma(true);
        boolean boolean44 = compilerEnvirons41.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons41.getErrorReporter();
        compilerEnvirons41.setGeneratingSource(false);
        int int48 = compilerEnvirons41.getOptimizationLevel();
        boolean boolean49 = compilerEnvirons41.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons50.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons50.getErrorReporter();
        boolean boolean54 = compilerEnvirons50.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = compilerEnvirons50.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException61 = errorReporter55.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter55.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser68 = new com.google.javascript.rhino.head.Parser(compilerEnvirons41, errorReporter55);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException74 = errorReporter55.runtimeError("14", "{\n{\n}\n}\n", 0, "java.io.IOException:                                                                 ", 170);
        com.google.javascript.rhino.head.Parser parser75 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter55);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException81 = errorReporter55.runtimeError("-1", "                                                                                                        {\n                                                                                                        }\n", (-846380080), "", (-131519396));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -846380080");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertNotNull(evaluatorException18);
        org.junit.Assert.assertNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(errorReporter55);
        org.junit.Assert.assertNotNull(evaluatorException61);
        org.junit.Assert.assertNotNull(evaluatorException74);
    }

    @Test
    public void test02953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02953");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean7 = compilerEnvirons0.isGeneratingSource();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(531785163);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 531785163");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test02954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02954");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scriptNode1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.clearParentScope();
        boolean boolean17 = scriptNode13.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = null;
        scriptNode13.setSymbolTable(strMap18);
        int int20 = scriptNode13.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = scriptNode13.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode22.toSource(0);
        scriptNode22.clearParentScope();
        boolean boolean26 = scriptNode22.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        java.lang.String str37 = astRoot35.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode38.getSymbols();
        java.lang.String str40 = astRoot35.toStringTree(scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope42.setTop(scriptNode44);
        java.lang.String str47 = scope42.toSource(12);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope42);
        astRoot28.setBaseLineno(19);
        scriptNode22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot28);
        astRoot28.removeChildren();
        int int53 = astRoot28.getEncodedSourceEnd();
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.Node node61 = scope59.getFirstChild();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope59);
        astRoot55.target = node62;
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = astRoot55.getAstRoot();
        boolean boolean65 = astRoot64.hasSideEffects();
        astRoot28.addChildToBack((com.google.javascript.rhino.head.Node) astRoot64);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = astRoot28.getRegexpFlags(488584366);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{\n}\n" + "'", str24, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "136" + "'", str37, "136");
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(astRoot64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test02955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02955");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = astRoot0.getChildScopes();
        boolean boolean5 = astRoot0.hasSideEffects();
        com.google.javascript.rhino.head.ast.Comment comment6 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addComment(comment6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02956");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons2 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons2.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons2.getActivationNames();
        boolean boolean6 = compilerEnvirons2.recoverFromErrors();
        boolean boolean7 = compilerEnvirons2.getWarnTrailingComma();
        boolean boolean8 = compilerEnvirons2.isIdeMode();
        boolean boolean9 = compilerEnvirons2.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setWarnTrailingComma(true);
        boolean boolean16 = compilerEnvirons13.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons13.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10, errorReporter17);
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser(compilerEnvirons2, errorReporter17);
        boolean boolean20 = compilerEnvirons2.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setWarnTrailingComma(true);
        boolean boolean24 = compilerEnvirons21.isRecordingLocalJsDocComments();
        compilerEnvirons21.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter27.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser34 = new com.google.javascript.rhino.head.Parser(compilerEnvirons2, errorReporter27);
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter27);
        errorReporter27.warning("-1", "java.io.IOException: java.io.IOException: ", (-414560696), "$1", 0);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter27.error("-1\t  BLOCK 0 1\n", "-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n", 968742650, "-1291599107\tSCRIPT -1291599107 1\n", 129);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: -1?  BLOCK 0 1? (-1?SCRIPT -1 1?-1?SCRIPT -1 1?#968742650)");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertNotNull(evaluatorException33);
    }

    @Test
    public void test02957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02957");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = astRoot2.getAstRoot();
        java.lang.String str4 = astRoot3.shortName();
        java.lang.String str6 = astRoot3.toSource(1);
        java.lang.Object obj7 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = astRoot3.getAstRoot();
        com.google.javascript.rhino.head.Node node9 = astRoot8.getNext();
        com.google.javascript.rhino.head.ast.Comment comment10 = astRoot8.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((-38688210), node1, (com.google.javascript.rhino.head.Node) astRoot8, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AstRoot" + "'", str4, "AstRoot");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(astRoot8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(comment10);
    }

    @Test
    public void test02958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02958");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.Node node15 = scope6.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot19.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int32 = astRoot17.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor38 = scope34.iterator();
        astRoot17.setParentScope(scope34);
        scope6.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot17);
        astRoot17.setLineno(7);
        astRoot17.setInStrictMode(true);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = astRoot17.getExistingIntProp((-11));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(nodeItor38);
    }

    @Test
    public void test02959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02959");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isGenerateDebugInfo();
        compilerEnvirons6.setIdeMode(false);
        compilerEnvirons6.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        boolean boolean23 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter24);
        compilerEnvirons0.setErrorReporter(errorReporter24);
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray31 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList32, symbolArray31);
        astRoot29.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList32);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        astRoot29.addChildScope(scope36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getEndLineno();
        java.lang.Object obj44 = astRoot42.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray45 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet46 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet46, commentArray45);
        astRoot42.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet46);
        astRoot42.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getNextTempName();
        com.google.javascript.rhino.head.Node node52 = scriptNode50.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode50.getFunctions();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int55 = astRoot40.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot40);
        astRoot29.removeProp(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = iRFactory27.transformTree(astRoot29);
        scriptNode59.removeChildren();
        java.lang.String str61 = scriptNode59.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(symbolArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(commentArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "136" + "'", str61, "136");
    }

    @Test
    public void test02960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02960");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node4 = scriptNode0.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode0.getSymbols();
        scriptNode0.setBaseLineno(19);
        com.google.javascript.rhino.head.ast.Scope scope8 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode15);
        int int19 = astRoot11.getParamCount();
        java.lang.String str20 = astRoot11.debugPrint();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = astRoot23.getAstRoot();
        java.lang.String str25 = astRoot24.shortName();
        java.lang.String str27 = astRoot24.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = astRoot24.getFunctions();
        astRoot24.checkParentLinks();
        boolean boolean30 = astRoot24.hasChildren();
        int int31 = astRoot24.getLineno();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot24, 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int44 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot36, scope45);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope45);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        boolean boolean52 = scope49.hasSideEffects();
        int int53 = scope45.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope49);
        boolean boolean54 = scope49.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode59 = astRoot58.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) scriptNode60);
        int int64 = astRoot56.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope65.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot56, scope65);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = astRoot56.getSymbolTable();
        scope49.setSymbolTable(strMap68);
        astRoot24.setSymbolTable(strMap68);
        astRoot11.setSymbolTable(strMap68);
        // The following exception was thrown during execution in test generation
        try {
            scope8.setSymbolTable(strMap68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AstRoot" + "'", str25, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 676312835 + "'", int53 == 676312835);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(astNode59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test02961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02961");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isGenerateDebugInfo();
        compilerEnvirons26.setIdeMode(false);
        compilerEnvirons26.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons39.getErrorReporter();
        boolean boolean43 = compilerEnvirons39.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons39.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser45 = new com.google.javascript.rhino.head.Parser(compilerEnvirons26, errorReporter44);
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = iRFactory46.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot50.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node54 = scriptNode52.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        java.lang.String str58 = scriptNode56.debugPrint();
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        scriptNode52.setEncodedSource("$0");
        scriptNode52.setPosition(0);
        // The following exception was thrown during execution in test generation
        try {
            astRoot50.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorReporter44);
        org.junit.Assert.assertNotNull(astRoot50);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str58, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test02962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02962");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel((-414560696));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: -414560696");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test02963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02963");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.lang.String str10 = astRoot1.debugPrint();
        boolean boolean11 = astRoot1.isInStrictMode();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = astRoot1.getSymbolTable();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str10, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test02964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02964");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        scriptNode0.setJsDocNode(comment5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = astRoot7.getParent();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.Node node13 = scope11.getFirstChild();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope11);
        astRoot7.target = node14;
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = astRoot7.getAstRoot();
        boolean boolean17 = astRoot7.hasChildren();
        astRoot7.setEndLineno(541550340);
        com.google.javascript.rhino.head.Node node20 = astRoot7.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = astRoot21.getAstRoot();
        java.lang.String str23 = astRoot22.shortName();
        java.lang.String str24 = astRoot22.debugPrint();
        com.google.javascript.rhino.head.Node node25 = astRoot22.getFirstChild();
        java.lang.Object obj27 = astRoot22.getProp(23);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.replaceChild(node20, (com.google.javascript.rhino.head.Node) astRoot22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(astRoot16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(astRoot22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AstRoot" + "'", str23, "AstRoot");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test02965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02965");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node3 = scope2.getNext();
        int int4 = scope2.getLineno();
        java.lang.String str6 = scope2.toSource((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            scope2.setDouble((double) (-1233410715));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str6, "                                                                                                        {\n                                                                                                        }\n");
    }

    @Test
    public void test02966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02966");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        java.lang.String str11 = astRoot0.getNextTempName();
        boolean boolean12 = astRoot0.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$1" + "'", str11, "$1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test02967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02967");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode2.toSource(0);
        scriptNode2.removeProp((int) (short) 1);
        int int7 = scriptNode2.getEncodedSourceStart();
        scriptNode2.putIntProp(526823265, (-11));
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode2);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode2.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{\n}\n" + "'", str4, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test02968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02968");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean16 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.ast.Comment comment17 = null;
        astRoot3.setJsDocNode(comment17);
        java.lang.String str19 = astRoot3.getEncodedSource();
        java.lang.String str21 = astRoot3.toSource(775058292);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope22 = astRoot3.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test02969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02969");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException("", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException7);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException18 = errorReporter12.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        iOException8.addSuppressed((java.lang.Throwable) evaluatorException18);
        java.io.IOException iOException20 = new java.io.IOException("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", (java.lang.Throwable) evaluatorException18);
        java.lang.Throwable[] throwableArray21 = iOException20.getSuppressed();
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertNotNull(evaluatorException18);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test02970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02970");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot1);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = astRoot1.spliterator();
        int int9 = astRoot1.getRegexpCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor13 = null;
        astRoot1.visitComments(nodeVisitor13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor15 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visitAll(nodeVisitor15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
    }

    @Test
    public void test02971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02971");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = astRoot0.spliterator();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
    }

    @Test
    public void test02972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02972");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.setLineno(0);
        int int21 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray24 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList25, symbolArray24);
        astRoot22.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList25);
        astRoot22.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot22.target = astRoot29;
        int int40 = astRoot29.getType();
        java.lang.String str41 = astRoot29.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) astRoot29);
        int int43 = astRoot1.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(symbolArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 136 + "'", int40 == 136);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test02973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02973");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        java.lang.String str7 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode8.getSymbols();
        com.google.javascript.rhino.head.Node node10 = scriptNode8.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = astRoot11.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot11.getSymbols();
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.Node node69 = astRoot66.getLastSibling();
        boolean boolean70 = astRoot66.hasSideEffects();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot66);
        scriptNode8.addChildrenToFront(node71);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-443001414), (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode8, (-1610320791));
        astRoot1.clearParentScope();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "136" + "'", str7, "136");
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test02974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02974");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        int int15 = scriptNode11.getEncodedSourceEnd();
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        scriptNode3.setBaseLineno(6);
        java.lang.String str19 = scriptNode3.getEncodedSource();
        java.lang.String str20 = scriptNode3.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        int int24 = scriptNode22.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = astRoot25.getAstRoot();
        java.lang.String str27 = astRoot26.shortName();
        java.lang.String str29 = astRoot26.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = astRoot26.getFunctions();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) astRoot26, 6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = scriptNode22.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode34.toSource(0);
        scriptNode34.clearParentScope();
        boolean boolean38 = scriptNode34.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode34.setSymbolTable(strMap39);
        int int41 = scriptNode34.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList42 = scriptNode34.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode43.toSource(0);
        scriptNode43.clearParentScope();
        boolean boolean47 = scriptNode43.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = scope51.spliterator();
        astRoot49.addChildScope(scope51);
        java.lang.String str55 = astRoot49.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        java.lang.String str58 = astRoot56.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode59.getSymbols();
        java.lang.String str61 = astRoot56.toStringTree(scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope63.setTop(scriptNode65);
        java.lang.String str68 = scope63.toSource(12);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope63);
        astRoot49.setBaseLineno(19);
        scriptNode43.addChildToBack((com.google.javascript.rhino.head.Node) astRoot49);
        astRoot49.removeChildren();
        int int74 = astRoot49.getEncodedSourceEnd();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot76.getParent();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        scope79.addChild((com.google.javascript.rhino.head.ast.AstNode) scope80);
        com.google.javascript.rhino.head.Node node82 = scope80.getFirstChild();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope80);
        astRoot76.target = node83;
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = astRoot76.getAstRoot();
        boolean boolean86 = astRoot85.hasSideEffects();
        astRoot49.addChildToBack((com.google.javascript.rhino.head.Node) astRoot85);
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        scriptNode3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = scriptNode3.getTop();
        java.lang.String str91 = scriptNode3.shortName();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AstRoot" + "'", str27, "AstRoot");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{\n}\n" + "'", str36, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astNodeList42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{\n}\n" + "'", str45, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "136" + "'", str58, "136");
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                        {\n                        }\n" + "'", str68, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNotNull(astRoot85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(scriptNode90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ScriptNode" + "'", str91, "ScriptNode");
    }

    @Test
    public void test02975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02975");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
    }

    @Test
    public void test02976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02976");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope16 = astRoot1.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertNull(scope16);
    }

    @Test
    public void test02977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02977");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        int int2 = scriptNode1.getLineno();
        scriptNode1.removeChildren();
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test02978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02978");
        java.io.IOException iOException3 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException("", (java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException12);
        iOException8.addSuppressed((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray15 = iOException12.getSuppressed();
        iOException6.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException("{\n  {\n  }\n}\n", (java.lang.Throwable) iOException12);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test02979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02979");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        com.google.javascript.rhino.head.Node node16 = nodeIterator15.next();
        boolean boolean17 = nodeIterator15.hasNext();
        nodeIterator15.remove();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test02980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02980");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.isGeneratingSource();
        boolean boolean6 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        java.lang.String[] strArray28 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerEnvirons16.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        compilerEnvirons7.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        compilerEnvirons7.setAllowMemberExprAsFunctionName(true);
        int int35 = compilerEnvirons7.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons36.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException45 = errorReporter39.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        errorReporter39.warning("                  ", "$1", 100, "AstRoot", 1);
        compilerEnvirons7.setErrorReporter(errorReporter39);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException58 = errorReporter39.runtimeError("2\tBLOCK 2 -1\n", "                        {\n                        }\n", 15, "                                            ", 9);
        com.google.javascript.rhino.head.IRFactory iRFactory59 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray64 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList65, symbolArray64);
        astRoot62.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList65);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scope68.addChild((com.google.javascript.rhino.head.ast.AstNode) scope69);
        astRoot62.addChildScope(scope69);
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int74 = astRoot73.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getEndLineno();
        java.lang.Object obj77 = astRoot75.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray78 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet79, commentArray78);
        astRoot75.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        astRoot75.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str84 = scriptNode83.getNextTempName();
        com.google.javascript.rhino.head.Node node85 = scriptNode83.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList86 = scriptNode83.getFunctions();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot73, (com.google.javascript.rhino.head.Node) astRoot75, (com.google.javascript.rhino.head.Node) scriptNode83);
        int int88 = astRoot73.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) astRoot73);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot73);
        int int91 = astRoot73.getParamCount();
        astRoot73.removeProp(21);
        java.lang.String str94 = astRoot73.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode95 = iRFactory59.transformTree(astRoot73);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral96 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot73.addRegExp(regExpLiteral96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(errorReporter39);
        org.junit.Assert.assertNotNull(evaluatorException45);
        org.junit.Assert.assertNotNull(evaluatorException58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(symbolArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(commentArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "$0" + "'", str84, "$0");
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNotNull(functionNodeList86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str94, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode95);
    }

    @Test
    public void test02981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02981");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        scope2.setRelative(4);
        boolean boolean5 = scope2.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump6 = scope2.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test02982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02982");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        scriptNode0.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.Symbol symbol7 = scriptNode0.getSymbol("");
        // The following exception was thrown during execution in test generation
        try {
            double double8 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(symbol7);
    }

    @Test
    public void test02983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02983");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(953557037);
        // The following exception was thrown during execution in test generation
        try {
            int int2 = scriptNode1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02984");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(23);
        java.lang.String str2 = scope1.debugPrint();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "23\tBLOCK 23 1\n" + "'", str2, "23\tBLOCK 23 1\n");
    }

    @Test
    public void test02985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02985");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getRegexpCount();
        com.google.javascript.rhino.head.Node node17 = astRoot3.getNext();
        astRoot3.setBaseLineno(10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = astRoot3.getComments();
        astRoot3.setLength((-12));
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot3.getParent();
        astRoot3.setBounds(775058292, 653625563);
        astRoot3.setEncodedSourceBounds((-1610320791), 1159083728);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.visitAll(nodeVisitor31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(commentSet20);
        org.junit.Assert.assertNull(astNode23);
    }

    @Test
    public void test02986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02986");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = scriptNode26.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str33 = astRoot31.getSourceName();
        astRoot31.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot31.getSymbolTable();
        java.lang.String str37 = astRoot31.makeIndent(32);
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.Comment comment39 = astRoot31.getJsDocNode();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral40 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot31.addRegExp(regExpLiteral40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                " + "'", str37, "                                                                ");
        org.junit.Assert.assertNull(comment39);
    }

    @Test
    public void test02987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02987");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstNode astNode3 = scope2.getParent();
        org.junit.Assert.assertNull(astNode3);
    }

    @Test
    public void test02988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02988");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = astRoot3.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = astRoot3.getSymbols();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot3);
        int int16 = scriptNode0.getAbsolutePosition();
        java.lang.String str17 = scriptNode0.getSourceName();
        boolean boolean18 = scriptNode0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = scriptNode0.addFunction(functionNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test02989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02989");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons2 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons2.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons2.getActivationNames();
        boolean boolean6 = compilerEnvirons2.recoverFromErrors();
        boolean boolean7 = compilerEnvirons2.getWarnTrailingComma();
        boolean boolean8 = compilerEnvirons2.isIdeMode();
        boolean boolean9 = compilerEnvirons2.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setWarnTrailingComma(true);
        boolean boolean16 = compilerEnvirons13.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons13.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10, errorReporter17);
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser(compilerEnvirons2, errorReporter17);
        boolean boolean20 = compilerEnvirons2.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setWarnTrailingComma(true);
        boolean boolean24 = compilerEnvirons21.isRecordingLocalJsDocComments();
        compilerEnvirons21.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter27.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser34 = new com.google.javascript.rhino.head.Parser(compilerEnvirons2, errorReporter27);
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter27);
        errorReporter27.warning("-1", "java.io.IOException: java.io.IOException: ", (-414560696), "$1", 0);
        errorReporter27.warning("-3\tSCRIPT -3 1\n", "java.io.IOException: hi!", (-538615178), "                          ", 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException53 = errorReporter27.runtimeError("java.io.IOException: java.io.IOException", "                ", 482118943, "    {\n    }\n", (-331679258));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -331679258");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertNotNull(evaluatorException33);
    }

    @Test
    public void test02990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02990");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Comment comment12 = scriptNode8.getJsDocNode();
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.lang.String str14 = scriptNode8.getNextTempName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor15 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode8.visit(nodeVisitor15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
    }

    @Test
    public void test02991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02991");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.setTop(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        scriptNode5.setCompilerData((java.lang.Object) scope8);
        scriptNode5.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode13.getFunctions();
        int int17 = scriptNode13.getEncodedSourceEnd();
        scriptNode5.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode5.setBaseLineno(6);
        java.lang.String str21 = scriptNode5.getEncodedSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray25 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList26, symbolArray25);
        astRoot23.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode33 = astRoot32.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode34.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode34);
        int int38 = astRoot30.getParamCount();
        java.lang.String str39 = astRoot30.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray43 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList44, symbolArray43);
        astRoot41.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList44);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        astRoot41.addChildScope(scope48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot54.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = scriptNode62.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = scriptNode62.getFunctions();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode62);
        int int67 = astRoot52.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot52);
        astRoot52.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int74 = astRoot73.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getEndLineno();
        java.lang.Object obj77 = astRoot75.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray78 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet79, commentArray78);
        astRoot75.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        astRoot75.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str84 = scriptNode83.getNextTempName();
        com.google.javascript.rhino.head.Node node85 = scriptNode83.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList86 = scriptNode83.getFunctions();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot73, (com.google.javascript.rhino.head.Node) astRoot75, (com.google.javascript.rhino.head.Node) scriptNode83);
        astRoot52.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot75);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot75);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((-8), node1, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot75, (-1435086895));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(symbolArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str39, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(symbolArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(commentArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "$0" + "'", str84, "$0");
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNotNull(functionNodeList86);
    }

    @Test
    public void test02992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02992");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean11 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test02993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02993");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.IRFactory iRFactory7 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02994");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        node1.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        int int18 = positionComparator8.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode12, (com.google.javascript.rhino.head.ast.AstNode) scope15);
        scriptNode5.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.isRecordingLocalJsDocComments();
        compilerEnvirons20.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons20.getErrorReporter();
        compilerEnvirons20.setGeneratingSource(true);
        compilerEnvirons20.setRecoverFromErrors(false);
        scriptNode12.setCompilerData((java.lang.Object) false);
        scriptNode12.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        astRoot34.addChildScope(scope36);
        java.lang.String str40 = astRoot34.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope48.setTop(scriptNode50);
        java.lang.String str53 = scope48.toSource(12);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope48);
        int int55 = astRoot34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        java.lang.String str58 = astRoot56.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode59.getSymbols();
        java.lang.String str61 = astRoot56.toStringTree(scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList62 = scriptNode59.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = astRoot63.getAstRoot();
        java.lang.String str65 = astRoot64.shortName();
        java.lang.String str66 = astRoot64.getSourceName();
        astRoot64.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = astRoot64.getSymbolTable();
        java.lang.String str70 = astRoot64.makeIndent(32);
        astRoot34.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) astRoot64);
        com.google.javascript.rhino.head.ast.Comment comment72 = astRoot64.getJsDocNode();
        java.lang.String str73 = astRoot64.getEncodedSource();
        com.google.javascript.rhino.head.Node node75 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        scope77.addChild((com.google.javascript.rhino.head.ast.AstNode) scope78);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope78.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode80);
        node75.putProp(0, (java.lang.Object) scriptNode80);
        int int83 = scriptNode80.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode80.getSymbols();
        astRoot64.setTop(scriptNode80);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode12.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                        {\n                        }\n" + "'", str53, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "136" + "'", str58, "136");
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(astNodeList62);
        org.junit.Assert.assertNotNull(astRoot64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AstRoot" + "'", str65, "AstRoot");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                                                " + "'", str70, "                                                                ");
        org.junit.Assert.assertNull(comment72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(symbolList84);
    }

    @Test
    public void test02995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02995");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.setEndLineno(0);
        com.google.javascript.rhino.head.IRFactory iRFactory22 = new com.google.javascript.rhino.head.IRFactory();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        java.lang.String str26 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = scriptNode24.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node28 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node29 = node28.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode24, node29, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = iRFactory22.transformTree(astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(11);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scope35);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, scope35);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope38 = astRoot1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(scriptNode33);
    }

    @Test
    public void test02996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02996");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.lang.String str17 = astRoot1.toSource(20);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = astRoot1.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test02997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02997");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        java.lang.String str7 = astRoot1.makeIndent(32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor17 = null;
        astRoot9.visitComments(nodeVisitor17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = astRoot19.getChildScopes();
        java.lang.String str25 = astRoot19.toString();
        astRoot9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot19);
        int int27 = astRoot19.getFunctionCount();
        astRoot1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = astRoot1.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump30 = scriptNode29.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                " + "'", str7, "                                                                ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNotNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
    }

    @Test
    public void test02998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02998");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        int int32 = astRoot12.getLineno();
        com.google.javascript.rhino.head.ast.Comment comment33 = astRoot12.getJsDocNode();
        com.google.javascript.rhino.head.Node node34 = astRoot12.target;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(comment33);
        org.junit.Assert.assertNull(node34);
    }

    @Test
    public void test02999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02999");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) '#', node13, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode17, 2);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        java.lang.String str26 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = astRoot27.getComments();
        astRoot27.setEncodedSourceEnd(11);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = astRoot0.getFunctions();
        java.lang.String str44 = astRoot0.getJsDoc();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(commentSet39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test03000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test03000");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        boolean boolean14 = astRoot10.hasSideEffects();
        java.lang.String str16 = astRoot10.toSource(100);
        int int17 = astRoot10.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.Node node23 = scope21.getFirstChild();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope21);
        scope21.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode27 = scope21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getEndLineno();
        java.lang.Object obj30 = astRoot28.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol32 = astRoot28.getSymbol("java.io.IOException: ");
        astRoot28.setEncodedSourceStart(0);
        java.lang.String str36 = astRoot28.toSource(14);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode27, (com.google.javascript.rhino.head.Node) astRoot28);
        astRoot10.target = astRoot28;
        int int39 = astRoot28.getPosition();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(astNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(symbol32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }
}
