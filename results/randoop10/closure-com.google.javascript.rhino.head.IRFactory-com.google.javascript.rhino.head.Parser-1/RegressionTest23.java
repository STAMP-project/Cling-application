import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.lang.String str7 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = astRoot1.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode15);
        int int19 = astRoot11.getParamCount();
        java.lang.String str20 = astRoot11.debugPrint();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = astRoot23.getAstRoot();
        java.lang.String str25 = astRoot24.shortName();
        java.lang.String str27 = astRoot24.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = astRoot24.getFunctions();
        astRoot24.checkParentLinks();
        boolean boolean30 = astRoot24.hasChildren();
        int int31 = astRoot24.getLineno();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot24, 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int44 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot36, scope45);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope45);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        boolean boolean52 = scope49.hasSideEffects();
        int int53 = scope45.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope49);
        boolean boolean54 = scope49.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode59 = astRoot58.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) scriptNode60);
        int int64 = astRoot56.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope65.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot56, scope65);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = astRoot56.getSymbolTable();
        scope49.setSymbolTable(strMap68);
        astRoot24.setSymbolTable(strMap68);
        astRoot11.setSymbolTable(strMap68);
        astRoot1.setSymbolTable(strMap68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = astRoot1.getSymbols();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(functionNode8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AstRoot" + "'", str25, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-229614213) + "'", int53 == (-229614213));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(astNode59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(symbolList73);
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getEndLineno();
        java.lang.Object obj7 = astRoot5.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray8 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet9, commentArray8);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet9);
        com.google.javascript.rhino.head.Node node12 = astRoot5.getLastSibling();
        int int13 = node12.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        java.lang.String str21 = astRoot14.toSource(0);
        java.lang.String str23 = astRoot14.toSource(25);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope4, node12, (com.google.javascript.rhino.head.Node) astRoot14);
        int int25 = astRoot14.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = astRoot26.getChildScopes();
        java.lang.String str32 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot14, (com.google.javascript.rhino.head.ast.Scope) astRoot26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray37 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList38, symbolArray37);
        astRoot35.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        boolean boolean41 = astRoot35.hasConsistentReturnUsage();
        astRoot35.setLineno((-3));
        astRoot35.setLength(13);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((-134670566), (com.google.javascript.rhino.head.Node) astRoot35, 6);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator51 = scope49.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node53 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node54 = node53.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        node53.addChildToFront((com.google.javascript.rhino.head.Node) scope55);
        scope49.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, node53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int59 = astRoot58.getParamCount();
        java.lang.String str60 = node53.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int62 = astRoot61.getEndLineno();
        java.lang.Object obj63 = astRoot61.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol65 = astRoot61.getSymbol("java.io.IOException: ");
        astRoot61.setEncodedSourceStart(0);
        astRoot58.setCompilerData((java.lang.Object) astRoot61);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = astRoot61.getChildScopes();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, node47, (com.google.javascript.rhino.head.Node) astRoot61);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap71 = astRoot61.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = astRoot61.getParamOrVarName(852409088);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(commentArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 136 + "'", int13 == 136);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertNotNull(scopeList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(symbolArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(symbol65);
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        astRoot1.setLineno((-3));
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) astRoot1);
        com.google.javascript.rhino.head.Node node11 = node10.getFirstChild();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(node11);
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = positionComparator21.reversed();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str30 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope33, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = astRoot36.getAstRoot();
        java.lang.String str38 = astRoot37.shortName();
        java.lang.String str39 = astRoot37.getSourceName();
        astRoot37.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap41 = astRoot37.getSymbolTable();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) astRoot37);
        java.lang.Object obj43 = astRoot37.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        astRoot48.setInStrictMode(true);
        int int56 = astRoot48.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        java.lang.String str59 = astRoot57.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode60.getSymbols();
        java.lang.String str62 = astRoot57.toStringTree(scriptNode60);
        astRoot57.checkParentLinks();
        int int66 = astRoot57.getIntProp(11, 32);
        int int67 = astRoot57.getPosition();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((-738182430), (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot57, 2);
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope(23);
        scope71.removeProp(22);
        astRoot37.addChildAfter((com.google.javascript.rhino.head.Node) astRoot57, (com.google.javascript.rhino.head.Node) scope71);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet77 = astRoot75.getComments();
        int int78 = astRoot75.getRegexpCount();
        int int79 = astRoot75.getEncodedSourceEnd();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons80 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        int int81 = compilerEnvirons80.getOptimizationLevel();
        boolean boolean82 = compilerEnvirons80.getWarnTrailingComma();
        boolean boolean83 = compilerEnvirons80.isXmlAvailable();
        astRoot75.setCompilerData((java.lang.Object) boolean83);
        int int85 = positionComparator21.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot37, (com.google.javascript.rhino.head.ast.AstNode) astRoot75);
        int int86 = astRoot37.getEncodedSourceStart();
        astRoot37.checkParentLinks();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(astRoot37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AstRoot" + "'", str38, "AstRoot");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "136" + "'", str59, "136");
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 32 + "'", int66 == 32);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(commentSet77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(compilerEnvirons80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        int int5 = astRoot1.getIntProp((int) (short) 1, (-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment13 = null;
        astRoot6.setJsDocNode(comment13);
        astRoot6.setEncodedSourceStart(4);
        astRoot6.removeChildren();
        astRoot6.flattenSymbolTable(true);
        java.lang.String str20 = astRoot1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot6);
        com.google.javascript.rhino.head.Node node21 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot6.removeChild(node21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        com.google.javascript.rhino.head.Node node7 = astRoot0.getLastSibling();
        int int8 = astRoot0.getEncodedSourceStart();
        java.lang.String str9 = astRoot0.debugPrint();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int16 = astRoot8.getParamCount();
        java.lang.String str17 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot30.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        astRoot53.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode61);
        astRoot30.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.Comment comment68 = null;
        astRoot8.setJsDocNode(comment68);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        scriptNode3.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet24 = compilerEnvirons20.getActivationNames();
        int int25 = compilerEnvirons20.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setWarnTrailingComma(true);
        boolean boolean32 = compilerEnvirons29.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser34 = new com.google.javascript.rhino.head.Parser(compilerEnvirons26, errorReporter33);
        boolean boolean35 = compilerEnvirons26.isReservedKeywordAsIdentifier();
        boolean boolean36 = compilerEnvirons26.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons37.setWarnTrailingComma(true);
        boolean boolean40 = compilerEnvirons37.isRecordingLocalJsDocComments();
        compilerEnvirons37.setWarnTrailingComma(false);
        compilerEnvirons37.setAllowSharpComments(false);
        boolean boolean45 = compilerEnvirons37.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons46 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons46.setWarnTrailingComma(true);
        java.lang.String[] strArray58 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        compilerEnvirons46.setActivationNames((java.util.Set<java.lang.String>) strSet59);
        compilerEnvirons37.setActivationNames((java.util.Set<java.lang.String>) strSet59);
        compilerEnvirons26.setActivationNames((java.util.Set<java.lang.String>) strSet59);
        compilerEnvirons20.setActivationNames((java.util.Set<java.lang.String>) strSet59);
        boolean boolean65 = compilerEnvirons20.isRecordingComments();
        compilerEnvirons20.setAllowMemberExprAsFunctionName(true);
        int int68 = compilerEnvirons20.getOptimizationLevel();
        compilerEnvirons20.setGenerateObserverCount(false);
        boolean boolean71 = compilerEnvirons20.isReservedKeywordAsIdentifier();
        astRoot12.setCompilerData((java.lang.Object) boolean71);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean13 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons14.getErrorReporter();
        compilerEnvirons14.setRecordingLocalJsDocComments(true);
        boolean boolean22 = compilerEnvirons14.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean24 = compilerEnvirons23.recoverFromErrors();
        int int25 = compilerEnvirons23.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory28 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory29 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList35 = astRoot30.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        boolean boolean39 = scope36.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope36, scope40);
        astRoot30.replaceWith(scope36);
        scope36.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol48 = scope36.getSymbol("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = scope51.spliterator();
        astRoot49.addChildScope(scope51);
        java.lang.String str55 = astRoot49.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment56 = null;
        astRoot49.setJsDocNode(comment56);
        int int58 = astRoot49.getType();
        java.lang.String str59 = astRoot49.getEncodedSource();
        int int60 = scope36.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = iRFactory29.transformTree(astRoot49);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(scopeList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(symbol48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 136 + "'", int58 == 136);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(scriptNode61);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = astRoot3.getAstRoot();
        java.lang.String str5 = astRoot4.shortName();
        java.lang.String str6 = astRoot4.getSourceName();
        astRoot4.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = astRoot4.getSymbolTable();
        astRoot0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int10 = astRoot4.getFunctionCount();
        boolean boolean11 = astRoot4.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot4.getAstRoot();
        java.lang.String str14 = astRoot12.toSource(910648842);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AstRoot" + "'", str5, "AstRoot");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int7 = scriptNode3.getIntProp((int) 'a', 19);
        scriptNode3.removeChildren();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) '#', node13, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode17, 2);
        com.google.javascript.rhino.head.Node node25 = scope16.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot29.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int42 = astRoot27.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope44.setTop(scriptNode46);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor48 = scope44.iterator();
        astRoot27.setParentScope(scope44);
        scope16.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot27);
        astRoot27.setLineno(7);
        astRoot27.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = astRoot55.getAstRoot();
        java.lang.String str57 = astRoot56.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = astRoot56.getTop();
        com.google.javascript.rhino.head.Node node59 = astRoot56.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int61 = astRoot60.getEndLineno();
        java.lang.Object obj62 = astRoot60.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray63 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet64, commentArray63);
        astRoot60.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot56.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot56, (-280309866));
        int int70 = astRoot56.getLineno();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator71 = astRoot56.spliterator();
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot56);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = astRoot56.getEnclosingFunction();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 19 + "'", int7 == 19);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AstRoot" + "'", str57, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(commentArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator71);
        org.junit.Assert.assertNull(functionNode73);
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        scriptNode1.setSourceName("/");
        com.google.javascript.rhino.head.ast.Comment comment14 = scriptNode1.getJsDocNode();
        int int15 = scriptNode1.getEncodedSourceStart();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(comment14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        java.util.Set<java.lang.String> strSet18 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setIdeMode(false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons10.getErrorReporter();
        compilerEnvirons7.setErrorReporter(errorReporter13);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter13);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons16.getErrorReporter();
        boolean boolean20 = compilerEnvirons16.isGenerateObserverCount();
        compilerEnvirons16.setRecordingComments(true);
        boolean boolean23 = compilerEnvirons16.isGenerateObserverCount();
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons27.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons16, errorReporter30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot33, scope42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = iRFactory31.transformTree(astRoot33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator49 = scope48.spliterator();
        astRoot46.addChildScope(scope48);
        java.lang.String str52 = astRoot46.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment53 = null;
        astRoot46.setJsDocNode(comment53);
        astRoot46.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean59 = astRoot58.hasSideEffects();
        int int60 = astRoot58.getParamCount();
        astRoot46.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot58);
        scriptNode45.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot58);
        astRoot58.setEndLineno(14);
        astRoot58.setLength((-1610320791));
        int int67 = astRoot58.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = iRFactory15.transformTree(astRoot58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(scriptNode68);
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-732722335), (-1010753011));
        java.lang.String str3 = scope2.debugPrint();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-732722335\tBLOCK -732722335 -1010753011\n" + "'", str3, "-732722335\tBLOCK -732722335 -1010753011\n");
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        scriptNode9.setBounds((int) (byte) -1, 23);
        int int15 = astRoot3.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = scope17.new NodeIterator();
        scope17.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        java.lang.String str29 = astRoot22.toSource(0);
        java.lang.String str31 = astRoot22.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        int int36 = scriptNode32.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        int int41 = scriptNode37.getEncodedSourceEnd();
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode47 = astRoot46.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) scriptNode48);
        int int52 = astRoot44.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot44, scope53);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = astRoot44.getSymbolTable();
        scriptNode32.setSymbolTable(strMap56);
        astRoot22.setSymbolTable(strMap56);
        scope17.setSymbolTable(strMap56);
        astRoot3.setSymbolTable(strMap56);
        java.lang.String str61 = astRoot3.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "136" + "'", str61, "136");
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(953557037);
        int int2 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        boolean boolean9 = astRoot3.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        astRoot10.addChildScope(scope12);
        java.lang.String str16 = astRoot10.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        astRoot10.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot17);
        astRoot17.setPosition(25);
        java.lang.String str24 = astRoot17.toSource(17);
        astRoot17.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        boolean boolean27 = scope26.hasSideEffects();
        astRoot3.addChildAfter((com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, scope26);
        java.lang.String str30 = scriptNode1.toSource();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        com.google.javascript.rhino.head.Node node42 = astRoot35.getLastSibling();
        int int43 = node42.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        java.lang.String str46 = astRoot44.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode47.getSymbols();
        java.lang.String str49 = astRoot44.toStringTree(scriptNode47);
        java.lang.String str51 = astRoot44.toSource(0);
        java.lang.String str53 = astRoot44.toSource(25);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope34, node42, (com.google.javascript.rhino.head.Node) astRoot44);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scope34);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList56 = scriptNode1.getStatements();
        java.lang.String str57 = scriptNode1.getNextTempName();
        int int58 = scriptNode1.getLength();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{\n}\n" + "'", str30, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 136 + "'", int43 == 136);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "136" + "'", str46, "136");
        org.junit.Assert.assertNotNull(symbolList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(astNodeList56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.lang.String str35 = scope30.toSource(12);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope30);
        astRoot16.setBaseLineno(19);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, 26);
        scope11.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot16, node42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        int int47 = scriptNode44.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastChild();
        int int49 = scriptNode44.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scriptNode44.getSymbolTable();
        astRoot16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.lang.String str52 = scriptNode44.shortName();
        scriptNode44.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope54 = scriptNode44.getParentScope();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                        {\n                        }\n" + "'", str35, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ScriptNode" + "'", str52, "ScriptNode");
        org.junit.Assert.assertNull(scope54);
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        int int8 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.Node node9 = scriptNode0.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope10 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("775058292");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        java.lang.String str11 = scope1.toSource((-443001414));
        java.lang.String str12 = scope1.getJsDoc();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-1010753011));
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-12));
        int int2 = scope1.getLength();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("!");
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.lang.Object obj8 = astRoot6.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray9 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet10 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet10, commentArray9);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet10);
        com.google.javascript.rhino.head.Node node13 = astRoot6.getLastSibling();
        int int14 = node13.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        java.lang.String str22 = astRoot15.toSource(0);
        java.lang.String str24 = astRoot15.toSource(25);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope5, node13, (com.google.javascript.rhino.head.Node) astRoot15);
        int int26 = astRoot15.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = astRoot27.getChildScopes();
        java.lang.String str33 = astRoot27.toString();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot15, (com.google.javascript.rhino.head.ast.Scope) astRoot27);
        java.lang.String str35 = node1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot15);
        java.lang.String str36 = astRoot15.shortName();
        com.google.javascript.rhino.head.ast.Scope scope37 = astRoot15.getParentScope();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(commentArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 136 + "'", int14 == 136);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertNotNull(scopeList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AstRoot" + "'", str36, "AstRoot");
        org.junit.Assert.assertNull(scope37);
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean11 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        scriptNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        java.lang.String str24 = scriptNode15.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = astRoot25.getAstRoot();
        java.lang.String str27 = astRoot26.shortName();
        java.lang.String str29 = astRoot26.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = astRoot26.getFunctions();
        astRoot26.checkParentLinks();
        boolean boolean32 = astRoot26.hasConsistentReturnUsage();
        int int33 = astRoot26.getRegexpCount();
        scriptNode15.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot26);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet39 = compilerEnvirons35.getActivationNames();
        int int40 = compilerEnvirons35.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons44.setWarnTrailingComma(true);
        boolean boolean47 = compilerEnvirons44.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons44.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser49 = new com.google.javascript.rhino.head.Parser(compilerEnvirons41, errorReporter48);
        boolean boolean50 = compilerEnvirons41.isReservedKeywordAsIdentifier();
        boolean boolean51 = compilerEnvirons41.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons52 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons52.setWarnTrailingComma(true);
        boolean boolean55 = compilerEnvirons52.isRecordingLocalJsDocComments();
        compilerEnvirons52.setWarnTrailingComma(false);
        compilerEnvirons52.setAllowSharpComments(false);
        boolean boolean60 = compilerEnvirons52.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons61 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons61.setWarnTrailingComma(true);
        java.lang.String[] strArray73 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet74 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet74, strArray73);
        compilerEnvirons61.setActivationNames((java.util.Set<java.lang.String>) strSet74);
        compilerEnvirons52.setActivationNames((java.util.Set<java.lang.String>) strSet74);
        compilerEnvirons41.setActivationNames((java.util.Set<java.lang.String>) strSet74);
        compilerEnvirons35.setActivationNames((java.util.Set<java.lang.String>) strSet74);
        scriptNode15.setCompilerData((java.lang.Object) strSet74);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet74);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AstRoot" + "'", str27, "AstRoot");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(136);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        java.lang.String str5 = astRoot3.debugPrint();
        java.lang.String str6 = astRoot3.getSourceName();
        int int7 = astRoot3.getLineno();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot3.new NodeIterator();
        astRoot1.putProp(1239469476, (java.lang.Object) astRoot3);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(0);
        scriptNode15.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        int int31 = positionComparator21.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode25, (com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator35 = scope34.spliterator();
        astRoot32.addChildScope(scope34);
        java.lang.String str38 = astRoot32.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = astRoot32.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = astRoot43.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int49 = positionComparator21.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot32, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        com.google.javascript.rhino.head.ast.Comment[] commentArray50 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet51, commentArray50);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet51);
        scope11.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) astRoot41);
        int int55 = astRoot41.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node56 = astRoot41.getLastSibling();
        java.lang.String str58 = astRoot41.toSource(1246810839);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot3, (com.google.javascript.rhino.head.ast.Scope) astRoot41);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(commentArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode50.toSource(0);
        scriptNode50.setEncodedSourceBounds(12, 10);
        astRoot37.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        int int57 = astRoot37.getRegexpCount();
        astRoot37.setLineno((-931416822));
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = astRoot5.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        scriptNode11.setBounds((int) (byte) -1, 23);
        int int17 = astRoot5.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode54.toSource(0);
        scriptNode54.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) '#', node50, (com.google.javascript.rhino.head.Node) scope53, (com.google.javascript.rhino.head.Node) scriptNode54, 2);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope63.setTop(scriptNode65);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scope67.addChild((com.google.javascript.rhino.head.ast.AstNode) scope68);
        scriptNode65.setCompilerData((java.lang.Object) scope68);
        scriptNode65.setEncodedSourceEnd(0);
        int int73 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode54, (com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(526823265, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode65, 541550340);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator76 = node75.new NodeIterator();
        com.google.javascript.rhino.head.Node node77 = nodeIterator76.next();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(662501102, node77, (-819749953));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(astNode6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{\n}\n" + "'", str56, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(node77);
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj4 = node2.getProp((-52));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        int int7 = scriptNode5.depth();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.lang.String str43 = scope38.toSource(12);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot46, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot46.getComments();
        node44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.Node node52 = astRoot46.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node57 = node56.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        node56.addChildToFront((com.google.javascript.rhino.head.Node) scope58);
        int int60 = scope58.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol62 = scope58.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int65 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scope58, (com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        node52.addChildToFront((com.google.javascript.rhino.head.Node) astRoot64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(22, node2, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot12);
        int int78 = scriptNode5.getFunctionCount();
        scriptNode5.setBaseLineno(558597394);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.setString("java.io.IOException: java.io.IOException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                        {\n                        }\n" + "'", str43, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(commentSet50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(symbol62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-12) + "'", int65 == (-12));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean11 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.util.Set<java.lang.String> strSet17 = compilerEnvirons14.getActivationNames();
        boolean boolean18 = compilerEnvirons14.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        boolean boolean23 = compilerEnvirons19.isRecordingComments();
        boolean boolean24 = compilerEnvirons19.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons26.getErrorReporter();
        boolean boolean30 = compilerEnvirons26.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException37 = errorReporter31.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons19.setErrorReporter(errorReporter31);
        compilerEnvirons19.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet44 = compilerEnvirons41.getActivationNames();
        boolean boolean45 = compilerEnvirons41.recoverFromErrors();
        boolean boolean46 = compilerEnvirons41.getWarnTrailingComma();
        boolean boolean47 = compilerEnvirons41.isIdeMode();
        boolean boolean48 = compilerEnvirons41.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons49.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons52 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons52.setWarnTrailingComma(true);
        boolean boolean55 = compilerEnvirons52.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter56 = compilerEnvirons52.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser57 = new com.google.javascript.rhino.head.Parser(compilerEnvirons49, errorReporter56);
        com.google.javascript.rhino.head.Parser parser58 = new com.google.javascript.rhino.head.Parser(compilerEnvirons41, errorReporter56);
        compilerEnvirons19.setErrorReporter(errorReporter56);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons60 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons60.setWarnTrailingComma(true);
        boolean boolean63 = compilerEnvirons60.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter64 = compilerEnvirons60.getErrorReporter();
        compilerEnvirons60.setGeneratingSource(false);
        int int67 = compilerEnvirons60.getOptimizationLevel();
        boolean boolean68 = compilerEnvirons60.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons69 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons69.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter72 = compilerEnvirons69.getErrorReporter();
        boolean boolean73 = compilerEnvirons69.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter74 = compilerEnvirons69.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException80 = errorReporter74.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter74.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser87 = new com.google.javascript.rhino.head.Parser(compilerEnvirons60, errorReporter74);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException93 = errorReporter74.runtimeError("14", "{\n{\n}\n}\n", 0, "java.io.IOException:                                                                 ", 170);
        com.google.javascript.rhino.head.Parser parser94 = new com.google.javascript.rhino.head.Parser(compilerEnvirons19, errorReporter74);
        com.google.javascript.rhino.head.IRFactory iRFactory95 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter74);
        com.google.javascript.rhino.head.Parser parser96 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter74);
        boolean boolean97 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertNotNull(evaluatorException37);
        org.junit.Assert.assertNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(errorReporter56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(errorReporter64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(errorReporter72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(errorReporter74);
        org.junit.Assert.assertNotNull(evaluatorException80);
        org.junit.Assert.assertNotNull(evaluatorException93);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode3.target;
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = scriptNode3.new NodeIterator();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        int int6 = scriptNode1.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scope10.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node15 = node14.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        node14.addChildToFront((com.google.javascript.rhino.head.Node) scope16);
        scope10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, node14);
        scope10.setRelative(5);
        scriptNode1.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = astRoot23.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = astRoot23.spliterator();
        com.google.javascript.rhino.head.Node node34 = astRoot23.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        scope35.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode37.getChildScopes();
        scriptNode37.clearParentScope();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode1, node34, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int43 = scriptNode37.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node44 = scriptNode37.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        int int6 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.Context context9 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot0.getFunctions();
        java.lang.String str8 = astRoot0.toSource();
        int int9 = astRoot0.getFunctionCount();
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        scope11.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode13);
        astRoot0.removeProp(437731425);
        astRoot0.setLineno((-53));
        java.lang.Object obj22 = astRoot0.getCompilerData();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode9 = astRoot8.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) scriptNode10);
        int int14 = astRoot6.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = astRoot6.spliterator();
        com.google.javascript.rhino.head.Node node17 = astRoot6.setType(550287075);
        int int18 = astRoot6.getPosition();
        java.lang.String str20 = astRoot6.toSource(13);
        scriptNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot6);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(903468300, (com.google.javascript.rhino.head.Node) scriptNode1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(astNode9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode7.getTop();
        com.google.javascript.rhino.head.ast.Comment comment16 = scriptNode15.getJsDocNode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        boolean boolean22 = compilerEnvirons17.recoverFromErrors();
        java.util.Set<java.lang.String> strSet23 = compilerEnvirons17.getActivationNames();
        compilerEnvirons17.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = parser26.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot30.setEncodedSourceEnd(4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = astRoot30.getFunctions();
        scriptNode15.setCompilerData((java.lang.Object) astRoot30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot30.getFunctions();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strSet23);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean9 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean16 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj3 = node1.getProp((-52));
        com.google.javascript.rhino.head.ast.Comment comment4 = node1.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = comment4.getIntProp(893335251, (-538615178));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(comment4);
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        scriptNode1.setBounds((int) (byte) 0, 3);
        boolean boolean9 = scriptNode1.hasSideEffects();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet13 = compilerEnvirons10.getActivationNames();
        boolean boolean14 = compilerEnvirons10.recoverFromErrors();
        boolean boolean15 = compilerEnvirons10.getWarnTrailingComma();
        boolean boolean16 = compilerEnvirons10.isIdeMode();
        boolean boolean17 = compilerEnvirons10.isRecordingLocalJsDocComments();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = astRoot21.getAstRoot();
        java.lang.String str23 = astRoot22.shortName();
        java.lang.String str24 = astRoot22.getSourceName();
        astRoot22.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = astRoot22.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = iRFactory20.transformTree(astRoot22);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot22);
        boolean boolean29 = astRoot22.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope33.spliterator();
        astRoot31.addChildScope(scope33);
        java.lang.String str37 = astRoot31.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        java.lang.String str40 = astRoot38.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode41.getSymbols();
        java.lang.String str43 = astRoot38.toStringTree(scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.setTop(scriptNode47);
        java.lang.String str50 = scope45.toSource(12);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scope45.getTop();
        int int53 = scriptNode52.getLength();
        int int54 = scriptNode52.getRegexpCount();
        astRoot22.setTop(scriptNode52);
        scriptNode52.setPosition((-638464135));
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) scriptNode52, 1743593615);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(astRoot22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AstRoot" + "'", str23, "AstRoot");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "136" + "'", str40, "136");
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                        {\n                        }\n" + "'", str50, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        astRoot4.setEncodedSourceEnd(6);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = astRoot4.getComments();
        int int15 = astRoot4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment23 = null;
        astRoot16.setJsDocNode(comment23);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor25 = null;
        astRoot16.visitComments(nodeVisitor25);
        astRoot16.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope30 = astRoot16.getDefiningScope("{\n  {\n  }\n}\n");
        int int31 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot16);
        com.google.javascript.rhino.head.ast.Comment comment32 = null;
        astRoot4.setJsDocNode(comment32);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral34 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot4.addRegExp(regExpLiteral34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(commentSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 6 + "'", int15 == 6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(scope30);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1407381340 + "'", int31 == 1407381340);
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        astRoot1.removeProp(520361644);
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = parser9.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.lang.String str31 = astRoot25.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        java.lang.String str34 = astRoot32.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        java.lang.String str37 = astRoot32.toStringTree(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope39.setTop(scriptNode41);
        java.lang.String str44 = scope39.toSource(12);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot47, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = astRoot47.getComments();
        node45.addChildToBack((com.google.javascript.rhino.head.Node) astRoot47);
        com.google.javascript.rhino.head.Node node53 = astRoot47.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator54.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator55);
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        int int61 = scope59.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol63 = scope59.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int66 = positionComparator55.compare((com.google.javascript.rhino.head.ast.AstNode) scope59, (com.google.javascript.rhino.head.ast.AstNode) astRoot65);
        node53.addChildToFront((com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int69 = astRoot68.getEndLineno();
        java.lang.Object obj70 = astRoot68.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray71 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet72 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet72, commentArray71);
        astRoot68.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode82 = astRoot81.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode83.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot79, (com.google.javascript.rhino.head.Node) astRoot81, (com.google.javascript.rhino.head.Node) scriptNode83);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList87 = scriptNode83.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList88 = scriptNode83.getFunctions();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode83);
        scriptNode83.setBaseLineno(0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "136" + "'", str34, "136");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                        {\n                        }\n" + "'", str44, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertNull(commentSet51);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(symbol63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-12) + "'", int66 == (-12));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(commentArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNull(astNode82);
        org.junit.Assert.assertNull(scopeList87);
        org.junit.Assert.assertNotNull(functionNodeList88);
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        astRoot0.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource(0);
        scriptNode18.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) '#', node14, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode18, 2);
        com.google.javascript.rhino.head.Node node26 = scope17.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        astRoot30.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        com.google.javascript.rhino.head.Node node40 = scriptNode38.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode38.getFunctions();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int43 = astRoot28.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.setTop(scriptNode47);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor49 = scope45.iterator();
        astRoot28.setParentScope(scope45);
        scope17.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot28);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scope53.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        scope53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode56, node57);
        astRoot28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot28);
        // The following exception was thrown during execution in test generation
        try {
            astRoot28.setEndLineno((-392589896));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(nodeItor49);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = astRoot0.getParamCount();
        boolean boolean5 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot0.getSymbol("                                    ");
        boolean boolean9 = astRoot0.isInStrictMode();
        astRoot0.checkParentLinks();
        astRoot0.removeChildren();
        int int12 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.Comment comment13 = astRoot0.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope15 = astRoot0.getDefiningScope("com.google.javascript.rhino.head.EvaluatorException:                                                                  (                  #10)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertNull(comment13);
        org.junit.Assert.assertNull(scope15);
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        java.io.IOException iOException1 = new java.io.IOException("                                      {\n                                      }\n");
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode1.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, (com.google.javascript.rhino.head.ast.Scope) scriptNode1);
        java.lang.String str15 = scriptNode1.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node16 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean39 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter40 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(errorReporter40);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getNext();
        java.lang.String str8 = astRoot0.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setString("com.google.javascript.rhino.head.EvaluatorException: 21 (                                    #32)");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        boolean boolean35 = compilerEnvirons32.isRecordingLocalJsDocComments();
        compilerEnvirons32.setWarnTrailingComma(false);
        compilerEnvirons32.setAllowSharpComments(false);
        boolean boolean40 = compilerEnvirons32.isGenerateDebugInfo();
        compilerEnvirons32.setIdeMode(false);
        compilerEnvirons32.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        boolean boolean49 = compilerEnvirons45.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons32, errorReporter50);
        com.google.javascript.rhino.head.IRFactory iRFactory52 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = iRFactory52.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = scope59.new NodeIterator();
        scope59.setRelative((int) (short) 100);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList64 = scope59.getStatements();
        astRoot56.target = scope59;
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = astRoot56.getComments();
        int int67 = astRoot56.getEndLineno();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertNotNull(astNodeList64);
        org.junit.Assert.assertNull(commentSet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 6 + "'", int67 == 6);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        astRoot3.checkParentLinks();
        int int12 = astRoot3.getIntProp(11, 32);
        int int13 = astRoot3.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.clearParentScope();
        boolean boolean18 = scriptNode14.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = null;
        scriptNode14.setSymbolTable(strMap19);
        int int21 = scriptNode14.getRegexpCount();
        int int22 = scriptNode14.getRegexpCount();
        astRoot3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot3, (-280309866));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = node25.new NodeIterator();
        boolean boolean27 = nodeIterator26.hasNext();
        com.google.javascript.rhino.head.Node node28 = nodeIterator26.next();
        com.google.javascript.rhino.head.Node node29 = nodeIterator26.next();
        nodeIterator26.remove();
        nodeIterator26.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node32 = nodeIterator26.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node29);
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        java.lang.String str12 = scriptNode1.shortName();
        int int13 = scriptNode1.getFunctionCount();
        int int14 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getNextTempName();
        java.lang.String str17 = scriptNode15.debugPrint();
        scriptNode15.setLineno((int) (byte) -1);
        int int20 = scriptNode15.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode15.getChildScopes();
        int int22 = scriptNode15.getEndLineno();
        java.lang.Object obj23 = scriptNode15.getCompilerData();
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = parser24.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        astRoot28.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot29);
        com.google.javascript.rhino.head.ast.Symbol symbol36 = astRoot29.getSymbol("                  ");
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator40 = scope38.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node43 = node42.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        node42.addChildToFront((com.google.javascript.rhino.head.Node) scope44);
        scope38.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode41, node42);
        int int47 = scriptNode41.getEncodedSourceEnd();
        astRoot29.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scriptNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.addChild((com.google.javascript.rhino.head.ast.AstNode) scope52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        int int58 = scriptNode54.getIntProp((int) 'a', 19);
        scriptNode54.removeChildren();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        scope60.addChild((com.google.javascript.rhino.head.ast.AstNode) scope61);
        boolean boolean63 = scope61.hasChildren();
        scope61.clearParentScope();
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scope61);
        com.google.javascript.rhino.head.ast.AstNode astNode66 = scope61.getParent();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) astNode66);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ScriptNode" + "'", str12, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(astRoot28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(symbol36);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 19 + "'", int58 == 19);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(astNode66);
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        int int12 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode6, (com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = scope15.spliterator();
        astRoot13.addChildScope(scope15);
        java.lang.String str19 = astRoot13.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = astRoot13.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode25 = astRoot24.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int30 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot13, (com.google.javascript.rhino.head.ast.AstNode) astRoot22);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot22, 24);
        astRoot22.removeChildren();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.Comment comment40 = null;
        scriptNode38.setJsDocNode(comment40);
        int int42 = scriptNode38.getLineno();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str44 = scriptNode38.getJsDoc();
        int int45 = scriptNode38.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode38, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode(26);
        com.google.javascript.rhino.head.ast.Symbol symbol51 = scriptNode49.getSymbol("");
        int int52 = scriptNode49.getEncodedSourceEnd();
        astRoot22.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor54 = scriptNode49.iterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(astNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(symbol51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(nodeItor54);
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = astRoot0.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = astRoot0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment36 = null;
        astRoot29.setJsDocNode(comment36);
        astRoot29.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean42 = astRoot41.hasSideEffects();
        int int43 = astRoot41.getParamCount();
        astRoot29.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode45.toSource(0);
        scriptNode45.setEncodedSourceBounds(12, 10);
        scriptNode45.setSourceName("");
        astRoot29.setTop(scriptNode45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray56 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList57, symbolArray56);
        astRoot54.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList57);
        boolean boolean60 = astRoot54.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = astRoot54.getSymbolTable();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot54);
        astRoot14.setInStrictMode(false);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList65 = astRoot14.getStatements();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot14);
        astRoot0.setEncodedSourceEnd(302294402);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(astNodeList10);
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{\n}\n" + "'", str47, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(symbolArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(astNodeList65);
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, scope10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap13 = astRoot1.getSymbolTable();
        astRoot1.setEncodedSourceEnd(7);
        java.lang.Object obj16 = astRoot1.getCompilerData();
        astRoot1.setEncodedSource("                                                {\n                                                }\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = astRoot7.getAstRoot();
        java.lang.String str9 = astRoot8.shortName();
        java.lang.String str11 = astRoot8.toSource(1);
        java.lang.Object obj12 = astRoot8.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.Node node14 = astRoot13.getNext();
        com.google.javascript.rhino.head.ast.Comment comment15 = astRoot13.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        java.lang.String str19 = scriptNode17.debugPrint();
        scriptNode17.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        int int40 = astRoot30.getRegexpCount();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot30, 550287075);
        com.google.javascript.rhino.head.Node node43 = astRoot23.target;
        java.lang.String str44 = astRoot23.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor45 = null;
        astRoot23.visitComments(nodeVisitor45);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(956959870, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot23, (-2110645446));
        java.lang.String str49 = astRoot13.shortName();
        int int52 = astRoot13.getIntProp((-214973135), (-419350393));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(astRoot8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AstRoot" + "'", str9, "AstRoot");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str19, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str44, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AstRoot" + "'", str49, "AstRoot");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-419350393) + "'", int52 == (-419350393));
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(168415131);
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isGenerateDebugInfo();
        compilerEnvirons6.setIdeMode(false);
        compilerEnvirons6.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        boolean boolean23 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter24);
        compilerEnvirons0.setErrorReporter(errorReporter24);
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean28 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setGenerateDebugInfo(true);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion((-379853048));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: -379853048");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean16 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.ast.Comment comment17 = null;
        astRoot3.setJsDocNode(comment17);
        java.lang.String str19 = astRoot3.getEncodedSource();
        astRoot3.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.lang.String str43 = scope38.toSource(12);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot46, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot46.getComments();
        node44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.Node node52 = astRoot46.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode57 = astRoot56.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor62 = null;
        astRoot54.visitComments(nodeVisitor62);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(526823265, node52, (com.google.javascript.rhino.head.Node) astRoot54, 1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator66 = astRoot54.new NodeIterator();
        astRoot3.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot54);
        java.lang.String str69 = astRoot54.toSource((-1592333374));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                        {\n                        }\n" + "'", str43, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(commentSet50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(astNode57);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setStrictMode(false);
        int int10 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot1.getNextTempName();
        int int4 = astRoot1.getFunctionCount();
        java.lang.String str5 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        int int14 = scriptNode10.getIntProp((int) 'a', 19);
        int int15 = scriptNode10.getFunctionCount();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-52), (com.google.javascript.rhino.head.Node) scriptNode10);
        astRoot1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons18.getErrorReporter();
        boolean boolean22 = compilerEnvirons18.isGenerateObserverCount();
        boolean boolean23 = compilerEnvirons18.recoverFromErrors();
        java.util.Set<java.lang.String> strSet24 = compilerEnvirons18.getActivationNames();
        boolean boolean25 = compilerEnvirons18.reportWarningAsError();
        compilerEnvirons18.setWarnTrailingComma(false);
        boolean boolean28 = compilerEnvirons18.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory29 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        java.lang.String str32 = astRoot30.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        java.lang.String str35 = astRoot30.toStringTree(scriptNode33);
        astRoot30.checkParentLinks();
        com.google.javascript.rhino.head.Node node37 = astRoot30.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        boolean boolean42 = compilerEnvirons39.recoverFromErrors();
        compilerEnvirons39.setRecordingComments(true);
        astRoot30.putProp(11, (java.lang.Object) true);
        astRoot30.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = iRFactory29.transformTree(astRoot30);
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator54 = scope53.spliterator();
        astRoot51.addChildScope(scope53);
        java.lang.String str57 = astRoot51.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str59 = astRoot58.getNextTempName();
        java.lang.String str60 = astRoot58.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = scriptNode61.getSymbols();
        java.lang.String str63 = astRoot58.toStringTree(scriptNode61);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope65.setTop(scriptNode67);
        java.lang.String str70 = scope65.toSource(12);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) scope65);
        int int72 = astRoot51.getEncodedSourceEnd();
        boolean boolean73 = astRoot51.isInStrictMode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator74 = astRoot51.spliterator();
        astRoot1.addChildToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((-1142433170), (com.google.javascript.rhino.head.Node) astRoot1);
        com.google.javascript.rhino.head.Node node78 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        scope80.addChild((com.google.javascript.rhino.head.ast.AstNode) scope81);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope81.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode83);
        node78.putProp(0, (java.lang.Object) scriptNode83);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator86 = scriptNode83.new NodeIterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot87 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int88 = astRoot87.getEndLineno();
        java.lang.Object obj89 = astRoot87.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol91 = astRoot87.getSymbol("java.io.IOException: ");
        scriptNode83.addChildToFront((com.google.javascript.rhino.head.Node) astRoot87);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setFinally((com.google.javascript.rhino.head.Node) astRoot87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 19 + "'", int14 == 19);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(errorReporter21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "136" + "'", str60, "136");
        org.junit.Assert.assertNotNull(symbolList62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                        {\n                        }\n" + "'", str70, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator74);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNull(symbol91);
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setStrictMode(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        java.lang.String str7 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode8.getSymbols();
        com.google.javascript.rhino.head.Node node10 = scriptNode8.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = astRoot11.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot11.getSymbols();
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.Node node69 = astRoot66.getLastSibling();
        boolean boolean70 = astRoot66.hasSideEffects();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot66);
        scriptNode8.addChildrenToFront(node71);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-443001414), (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode8, (-1610320791));
        java.lang.String str76 = scriptNode8.makeIndent((-852661786));
        com.google.javascript.rhino.head.ast.Scope scope77 = scriptNode8.getParentScope();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "136" + "'", str7, "136");
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(scope77);
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.IRFactory iRFactory7 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray14 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet15, commentArray14);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot11.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getNextTempName();
        com.google.javascript.rhino.head.Node node21 = scriptNode19.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList22 = scriptNode19.getFunctions();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str25 = astRoot9.toSource(20);
        boolean boolean26 = astRoot9.hasSideEffects();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = astRoot9.iterator();
        com.google.javascript.rhino.head.Node node28 = iRFactory7.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot9);
        int int29 = astRoot9.getType();
        astRoot9.removeChildren();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(commentArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(functionNodeList22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 136 + "'", int29 == 136);
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        java.lang.String str8 = astRoot6.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode9.getSymbols();
        java.lang.String str11 = astRoot6.toStringTree(scriptNode9);
        astRoot6.checkParentLinks();
        int int15 = astRoot6.getIntProp(11, 32);
        int int16 = astRoot6.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.clearParentScope();
        boolean boolean21 = scriptNode17.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = null;
        scriptNode17.setSymbolTable(strMap22);
        int int24 = scriptNode17.getRegexpCount();
        int int25 = scriptNode17.getRegexpCount();
        astRoot6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot0.setTop(scriptNode17);
        int int28 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str31 = astRoot30.debugPrint();
        astRoot30.setInStrictMode(false);
        java.lang.String str34 = astRoot30.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getEndLineno();
        java.lang.Object obj38 = astRoot36.getCompilerData();
        java.lang.String str40 = astRoot36.makeIndent(18);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot36, 526823265);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons43.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter46 = compilerEnvirons43.getErrorReporter();
        boolean boolean47 = compilerEnvirons43.isGenerateObserverCount();
        boolean boolean48 = compilerEnvirons43.recoverFromErrors();
        java.util.Set<java.lang.String> strSet49 = compilerEnvirons43.getActivationNames();
        compilerEnvirons43.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser52 = new com.google.javascript.rhino.head.Parser(compilerEnvirons43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = parser52.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot56.setEncodedSourceEnd(4);
        astRoot56.setEncodedSource("$0");
        astRoot30.addChildAfter((com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot56);
        int int62 = astRoot36.getBaseLineno();
        astRoot0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot36);
        com.google.javascript.rhino.head.ast.Scope scope64 = astRoot0.getParentScope();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str31, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                    " + "'", str40, "                                    ");
        org.junit.Assert.assertNotNull(errorReporter46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(strSet49);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(scope64);
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        boolean boolean5 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        java.lang.String str6 = scriptNode3.toSource(5);
        scriptNode3.putIntProp(0, 1);
        com.google.javascript.rhino.head.Node node10 = scriptNode3.target;
        java.lang.String str11 = scriptNode3.shortName();
        int int12 = scriptNode3.depth();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = scriptNode3.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "          {\n          }\n" + "'", str6, "          {\n          }\n");
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node7 = astRoot0.target;
        int int8 = astRoot0.getLineno();
        com.google.javascript.rhino.head.Node node9 = astRoot0.getLastSibling();
        astRoot0.checkParentLinks();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node9);
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        int int12 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node13 = scriptNode3.target;
        scriptNode3.clearParentScope();
        java.lang.String str15 = scriptNode3.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode3.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((-3));
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.isRecordingLocalJsDocComments();
        boolean boolean24 = compilerEnvirons20.isRecordingComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setWarnTrailingComma(true);
        boolean boolean28 = compilerEnvirons25.isRecordingLocalJsDocComments();
        compilerEnvirons25.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons25.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons20, errorReporter31);
        compilerEnvirons20.setOptimizationLevel(5);
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = iRFactory35.parse("                  ", "", 956776324);
        scriptNode18.setCompilerData((java.lang.Object) 956776324);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertNotNull(astRoot39);
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setRecordingLocalJsDocComments(false);
        boolean boolean21 = compilerEnvirons18.isGeneratingSource();
        compilerEnvirons18.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean25 = compilerEnvirons24.recoverFromErrors();
        int int26 = compilerEnvirons24.getLanguageVersion();
        compilerEnvirons24.setAllowMemberExprAsFunctionName(false);
        compilerEnvirons24.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setWarnTrailingComma(true);
        java.lang.String[] strArray43 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        compilerEnvirons31.setActivationNames((java.util.Set<java.lang.String>) strSet44);
        compilerEnvirons24.setActivationNames((java.util.Set<java.lang.String>) strSet44);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet44);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet44);
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory51 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        int int52 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str5 = astRoot2.toSource(1);
        java.lang.Object obj6 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot2.getAstRoot();
        astRoot2.setEncodedSource("775058292");
        int int10 = astRoot2.getBaseLineno();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((-508712079), (com.google.javascript.rhino.head.Node) astRoot2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot((int) (byte) 0);
        java.lang.Object obj15 = astRoot13.getProp(7);
        astRoot2.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.Scope scope17 = astRoot13.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource(0);
        scriptNode18.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node25 = scriptNode18.setType(0);
        java.lang.String str26 = scriptNode18.getSourceName();
        int int27 = scriptNode18.getLength();
        // The following exception was thrown during execution in test generation
        try {
            astRoot13.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getNextTempName();
        java.lang.String str47 = scriptNode45.debugPrint();
        scriptNode45.setLineno((int) (byte) -1);
        int int50 = scriptNode45.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode45.getChildScopes();
        int int52 = scriptNode45.getEndLineno();
        scriptNode45.setEncodedSourceEnd((-443001414));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList55 = scriptNode45.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            astRoot31.setDefault((com.google.javascript.rhino.head.Node) scriptNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str47, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(astNodeList55);
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons0.getErrorReporter();
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setRecordingComments(true);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot1.getSymbol("java.io.IOException: ");
        astRoot1.setEncodedSourceStart(0);
        java.lang.String str9 = astRoot1.makeIndent(13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray14 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList15, symbolArray14);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        astRoot12.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode33.getFunctions();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int38 = astRoot23.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node41 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scope53.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        scope53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode56, node57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        java.lang.String str64 = node57.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        java.lang.String str65 = astRoot62.getNextTempName();
        boolean boolean66 = astRoot62.hasSideEffects();
        java.lang.String str68 = astRoot62.toSource(100);
        node41.addChildAfter((com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot62);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot42);
        java.lang.String str72 = astRoot1.toSource(18);
        astRoot1.setInStrictMode(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                          " + "'", str9, "                          ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(symbolArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope20.setTop(scriptNode22);
        java.lang.String str25 = scope20.toSource(12);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope20);
        astRoot6.setBaseLineno(19);
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot6.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getNextTempName();
        com.google.javascript.rhino.head.Node node33 = scriptNode31.target;
        int int34 = scriptNode31.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node35 = scriptNode31.getLastChild();
        scriptNode31.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap38 = null;
        scriptNode31.setSymbolTable(strMap38);
        int int40 = scriptNode31.getEndLineno();
        astRoot30.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode31);
        java.lang.String str42 = astRoot30.debugPrint();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                        {\n                        }\n" + "'", str25, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1\tSCRIPT -1 1\n0\tSCRIPT 0 1\n" + "'", str42, "-1\tSCRIPT -1 1\n0\tSCRIPT 0 1\n");
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        scriptNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot24.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        boolean boolean33 = scope30.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope30, scope34);
        astRoot24.replaceWith(scope30);
        int int39 = astRoot24.getEncodedSourceEnd();
        scriptNode17.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = astRoot45.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getNextTempName();
        com.google.javascript.rhino.head.Node node53 = scriptNode51.target;
        scriptNode51.setBounds((int) (byte) -1, 23);
        int int57 = astRoot45.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode58.setEncodedSourceBounds((int) (short) 100, 10);
        int int66 = scriptNode58.getIntProp(0, 9);
        astRoot45.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str69 = astRoot68.getNextTempName();
        java.lang.String str70 = astRoot68.toSource();
        scriptNode58.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = astRoot68.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = astRoot73.getAstRoot();
        java.lang.String str75 = astRoot74.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = astRoot74.getTop();
        com.google.javascript.rhino.head.Node node77 = astRoot74.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int79 = astRoot78.getEndLineno();
        java.lang.Object obj80 = astRoot78.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray81 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet82 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet82, commentArray81);
        astRoot78.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot74.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot68.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        // The following exception was thrown during execution in test generation
        try {
            astRoot24.setDouble((double) 414966044);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNotNull(scopeList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 9 + "'", int66 == 9);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "$0" + "'", str69, "$0");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertNotNull(astRoot74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "AstRoot" + "'", str75, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(commentArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot0.getAstRoot();
        java.lang.String str10 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.debugPrint();
        astRoot12.clearParentScope();
        java.lang.Object obj16 = astRoot12.getCompilerData();
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        astRoot0.removeProp((-443001414));
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray23 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList24, symbolArray23);
        astRoot21.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        astRoot21.addChildScope(scope28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray37 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet38 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet38, commentArray37);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        astRoot34.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = scriptNode42.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode42.getFunctions();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int47 = astRoot32.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot32);
        astRoot32.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getEndLineno();
        java.lang.Object obj54 = astRoot52.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        com.google.javascript.rhino.head.Node node59 = astRoot52.getLastSibling();
        com.google.javascript.rhino.head.Node node60 = astRoot52.target;
        astRoot32.addChildToBack((com.google.javascript.rhino.head.Node) astRoot52);
        astRoot52.setEncodedSourceBounds(1942790351, (-289553421));
        java.lang.String str65 = astRoot52.debugPrint();
        astRoot0.addChildToFront((com.google.javascript.rhino.head.Node) astRoot52);
        int int67 = astRoot52.getEncodedSourceEnd();
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(symbolArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(commentArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str65, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-289553421) + "'", int67 == (-289553421));
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = astNodeComparator19.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator21.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator23 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator24 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator25 = positionComparator23.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator24);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator26 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator27 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator28 = positionComparator26.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode33 = astRoot32.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode34.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int41 = positionComparator26.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot32, (com.google.javascript.rhino.head.ast.AstNode) scope40);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = astNodeComparator25.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator26);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator43 = astNodeComparator42.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator44 = astNodeComparator42.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator45 = positionComparator21.thenComparing(astNodeComparator42);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator46 = astNodeComparator19.thenComparing(astNodeComparator45);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = positionComparator47.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator48);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator50 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator51 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator52 = positionComparator50.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode57 = astRoot56.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int65 = positionComparator50.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot56, (com.google.javascript.rhino.head.ast.AstNode) scope64);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator66 = astNodeComparator49.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator50);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator67 = positionComparator50.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator68 = positionComparator50.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator69 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator70 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator71 = positionComparator69.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator70);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator72 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator73 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator74 = positionComparator72.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator73);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str77 = astRoot76.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode79 = astRoot78.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode80.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot76, (com.google.javascript.rhino.head.Node) astRoot78, (com.google.javascript.rhino.head.Node) scriptNode80);
        com.google.javascript.rhino.head.ast.Scope scope86 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int87 = positionComparator72.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot78, (com.google.javascript.rhino.head.ast.AstNode) scope86);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator88 = astNodeComparator71.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator72);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator89 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator90 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator91 = positionComparator89.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator90);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator92 = astNodeComparator88.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator90);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator93 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator94 = astNodeComparator88.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator93);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator95 = astNodeComparator94.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator96 = positionComparator50.thenComparing(astNodeComparator94);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator97 = astNodeComparator46.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator50);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator25);
        org.junit.Assert.assertNotNull(astNodeComparator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(astNodeComparator43);
        org.junit.Assert.assertNotNull(astNodeComparator44);
        org.junit.Assert.assertNotNull(astNodeComparator45);
        org.junit.Assert.assertNotNull(astNodeComparator46);
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertNotNull(astNodeComparator52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(astNode57);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-3) + "'", int65 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator66);
        org.junit.Assert.assertNotNull(astNodeComparator67);
        org.junit.Assert.assertNotNull(astNodeComparator68);
        org.junit.Assert.assertNotNull(astNodeComparator71);
        org.junit.Assert.assertNotNull(astNodeComparator74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertNull(astNode79);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-3) + "'", int87 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator88);
        org.junit.Assert.assertNotNull(astNodeComparator91);
        org.junit.Assert.assertNotNull(astNodeComparator92);
        org.junit.Assert.assertNotNull(astNodeComparator94);
        org.junit.Assert.assertNotNull(astNodeComparator95);
        org.junit.Assert.assertNotNull(astNodeComparator96);
        org.junit.Assert.assertNotNull(astNodeComparator97);
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        java.lang.String str11 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.Node node12 = astRoot0.getLastChild();
        astRoot0.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = astRoot0.getParamOrVarName(122705610);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str11, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        java.lang.String str36 = astRoot21.toSource(488584366);
        astRoot21.setInStrictMode(false);
        int int39 = astRoot21.depth();
        astRoot21.setEncodedSourceEnd(1784619891);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot0.getAstRoot();
        java.lang.String str10 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.debugPrint();
        astRoot12.clearParentScope();
        java.lang.Object obj16 = astRoot12.getCompilerData();
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        java.lang.String str18 = astRoot0.getJsDoc();
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setGenerateObserverCount(false);
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean15 = compilerEnvirons12.isRecordingLocalJsDocComments();
        compilerEnvirons12.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException24 = errorReporter18.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException30 = errorReporter18.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException36 = errorReporter18.runtimeError("java.io.IOException: java.io.IOException: ", "{\n}\n", 520361644, "java.io.IOException: java.io.IOException", (int) (short) 10);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException42 = errorReporter18.runtimeError("java.io.IOException: java.io.IOException: hi!", "-1\t  BLOCK 0 1\n", (int) (byte) 0, "                  ", 6);
        com.google.javascript.rhino.head.IRFactory iRFactory43 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        errorReporter18.warning("-1\tSCRIPT -1 1\n", "java.io.IOException: /=", 761599885, "0\tSCRIPT 0 3\n", (-280309866));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertNotNull(evaluatorException24);
        org.junit.Assert.assertNotNull(evaluatorException30);
        org.junit.Assert.assertNotNull(evaluatorException36);
        org.junit.Assert.assertNotNull(evaluatorException42);
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot1.getFunctions();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor7 = null;
        astRoot1.visitComments(nodeVisitor7);
        int int9 = astRoot1.getLength();
        com.google.javascript.rhino.head.ast.Scope scope10 = null;
        astRoot1.replaceWith(scope10);
        java.lang.String str12 = astRoot1.getNextTempName();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(functionNodeList5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getNextTempName();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode3);
        java.lang.String str7 = scope1.makeIndent(22);
        boolean boolean8 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getNextTempName();
        java.lang.String str12 = scriptNode10.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = scriptNode10.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node15 = node14.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode10, node15, (com.google.javascript.rhino.head.Node) astRoot17);
        int int19 = astRoot17.getEncodedSourceEnd();
        int int20 = astRoot17.getFunctionCount();
        astRoot17.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getEndLineno();
        java.lang.Object obj28 = astRoot26.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot26.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        astRoot26.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode34.getFunctions();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode34);
        astRoot24.setEncodedSourceBounds(21, (int) (short) 10);
        astRoot24.setInStrictMode(true);
        astRoot17.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot24);
        java.lang.String str45 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((-255300984), (com.google.javascript.rhino.head.Node) scope1, (com.google.javascript.rhino.head.Node) astRoot24);
        org.junit.Assert.assertNotNull(nodeSpliterator2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                            " + "'", str7, "                                            ");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str12, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        astRoot0.setEncodedSourceStart(0);
        java.lang.String str8 = astRoot0.toSource(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = astRoot12.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray18 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList19, symbolArray18);
        scriptNode14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode14.getTop();
        int int23 = scriptNode22.getEncodedSourceEnd();
        astRoot0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode22.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode44.toSource(0);
        scriptNode44.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) '#', node40, (com.google.javascript.rhino.head.Node) scope43, (com.google.javascript.rhino.head.Node) scriptNode44, 2);
        astRoot27.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        java.lang.String str53 = astRoot27.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getEndLineno();
        java.lang.Object obj58 = astRoot56.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray59 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet60 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet60, commentArray59);
        astRoot56.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet60);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet60);
        astRoot54.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = astRoot54.getComments();
        astRoot54.setEncodedSourceEnd(11);
        int int69 = astRoot27.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot54);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator70 = astRoot54.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = astRoot54.getSymbols();
        scriptNode22.setSymbols(symbolList71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertNotNull(symbolArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{\n}\n" + "'", str46, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str53, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(commentArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(commentSet66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(symbolList71);
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str6 = scriptNode3.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope9, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot12.getAstRoot();
        java.lang.String str14 = astRoot13.shortName();
        java.lang.String str15 = astRoot13.getSourceName();
        astRoot13.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = astRoot13.getSymbolTable();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = astRoot19.getTop();
        int int23 = astRoot19.getParamCount();
        boolean boolean24 = astRoot19.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator25 = astRoot19.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol27 = astRoot19.getSymbol("                                    ");
        boolean boolean28 = astRoot19.isInStrictMode();
        astRoot13.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot19);
        com.google.javascript.rhino.head.Node node30 = astRoot19.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node32 = node31.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getEndLineno();
        java.lang.Object obj38 = astRoot36.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray39 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet40 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet40, commentArray39);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet40);
        astRoot36.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList47 = scriptNode44.getFunctions();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) scriptNode44);
        boolean boolean49 = astRoot36.isInStrictMode();
        astRoot36.checkParentLinks();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) astRoot19, node32, (com.google.javascript.rhino.head.Node) astRoot36);
        astRoot36.setRelative((-1593445669));
        java.lang.String str54 = astRoot36.getNextTempName();
        boolean boolean55 = astRoot36.isInStrictMode();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AstRoot" + "'", str14, "AstRoot");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(symbol27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(commentArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(functionNodeList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node7 = astRoot0.target;
        astRoot0.flattenSymbolTable(false);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = astRoot0.iterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode16 = astRoot15.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode17);
        int int21 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot13, scope22);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.lang.String str33 = astRoot27.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        java.lang.String str39 = astRoot34.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope41.setTop(scriptNode43);
        java.lang.String str46 = scope41.toSource(12);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope41);
        astRoot27.setBaseLineno(19);
        astRoot27.checkParentLinks();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(14, 26);
        scope22.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot27, node53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        int int58 = scriptNode55.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node59 = scriptNode55.getLastChild();
        int int60 = scriptNode55.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode55.getSymbolTable();
        astRoot27.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        astRoot27.removeChildren();
        boolean boolean64 = astRoot27.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = astRoot27.getTop();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                        {\n                        }\n" + "'", str46, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(scriptNode65);
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope7, 25);
        java.lang.Object obj11 = scriptNode1.getProp(0);
        scriptNode1.setEncodedSource("136");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump14 = scriptNode1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        java.lang.String str13 = astRoot4.toSource(1159083728);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int30 = astRoot17.getRegexpCount();
        com.google.javascript.rhino.head.Node node31 = astRoot17.getNext();
        astRoot17.setBaseLineno(10);
        astRoot17.setEncodedSourceBounds(136, 3);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot4, (com.google.javascript.rhino.head.ast.Scope) astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope41.spliterator();
        astRoot39.addChildScope(scope41);
        java.lang.String str45 = astRoot39.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        java.lang.String str48 = astRoot46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = scriptNode49.getSymbols();
        java.lang.String str51 = astRoot46.toStringTree(scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope53.setTop(scriptNode55);
        java.lang.String str58 = scope53.toSource(12);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) scope53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot61, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = astRoot61.getComments();
        node59.addChildToBack((com.google.javascript.rhino.head.Node) astRoot61);
        com.google.javascript.rhino.head.Node node67 = astRoot61.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator68 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator69 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator70 = positionComparator68.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator69);
        com.google.javascript.rhino.head.Node node71 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node72 = node71.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        node71.addChildToFront((com.google.javascript.rhino.head.Node) scope73);
        int int75 = scope73.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol77 = scope73.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int80 = positionComparator69.compare((com.google.javascript.rhino.head.ast.AstNode) scope73, (com.google.javascript.rhino.head.ast.AstNode) astRoot79);
        node67.addChildToFront((com.google.javascript.rhino.head.Node) astRoot79);
        java.lang.String str82 = astRoot4.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot79);
        com.google.javascript.rhino.head.ast.Scope scope86 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope86, 24);
        boolean boolean89 = node88.hasConsistentReturnUsage();
        astRoot4.addChildrenToFront(node88);
        com.google.javascript.rhino.head.ast.Comment comment91 = node88.getJsDocNode();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNotNull(symbolList50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                        {\n                        }\n" + "'", str58, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(commentSet65);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(astNodeComparator70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-12) + "'", int80 == (-12));
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(comment91);
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setRecordingLocalJsDocComments(false);
        boolean boolean4 = compilerEnvirons1.isGeneratingSource();
        compilerEnvirons1.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isGenerateDebugInfo();
        compilerEnvirons7.setIdeMode(false);
        compilerEnvirons7.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        boolean boolean24 = compilerEnvirons20.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons7, errorReporter25);
        compilerEnvirons1.setErrorReporter(errorReporter25);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter25.runtimeError("-1\tSCRIPT -1 1\n", "-1\t  BLOCK 0 1\n", 0, "                                                {\n                                                }\n", 129);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = astRoot34.getTop();
        int int38 = astRoot34.getParamCount();
        astRoot34.checkParentLinks();
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException42);
        astRoot34.putProp((-738182430), (java.lang.Object) iOException42);
        evaluatorException33.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException47 = new java.io.IOException("java.io.IOException: hi!", (java.lang.Throwable) iOException42);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException51 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray52 = iOException51.getSuppressed();
        java.io.IOException iOException54 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray55 = iOException54.getSuppressed();
        iOException51.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException("                                                {\n                                                }\n", (java.lang.Throwable) iOException54);
        iOException42.addSuppressed((java.lang.Throwable) iOException54);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        astRoot2.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = astRoot2.getTop();
        java.lang.String str7 = scriptNode6.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scriptNode6.getTop();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(1004037913, (com.google.javascript.rhino.head.Node) scriptNode6, (-1468440406));
        node10.removeProp((-539267496));
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(scriptNode8);
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        int int5 = astRoot0.getPosition();
        int int6 = astRoot0.getPosition();
        java.lang.String str7 = astRoot0.debugPrint();
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = astRoot12.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) scriptNode14);
        boolean boolean18 = astRoot10.isInStrictMode();
        astRoot10.setRelative((int) '4');
        int int21 = astRoot10.getEncodedSourceStart();
        astRoot10.setRelative(1159083728);
        astRoot0.target = astRoot10;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str7, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node4 = scriptNode0.getLastChild();
        int int5 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.lang.Object obj8 = astRoot6.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray9 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet10 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet10, commentArray9);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet10);
        astRoot6.removeProp((int) (short) 0);
        int int15 = astRoot6.getAbsolutePosition();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet17 = null;
        astRoot6.setComments(commentSet17);
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope22.setTop(scriptNode24);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator48 = scope47.spliterator();
        astRoot45.addChildScope(scope47);
        java.lang.String str51 = astRoot45.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment52 = null;
        astRoot45.setJsDocNode(comment52);
        astRoot45.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean58 = astRoot57.hasSideEffects();
        int int59 = astRoot57.getParamCount();
        astRoot45.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode61.toSource(0);
        scriptNode61.setEncodedSourceBounds(12, 10);
        scriptNode61.setSourceName("");
        astRoot45.setTop(scriptNode61);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray72 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList73, symbolArray72);
        astRoot70.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList73);
        boolean boolean76 = astRoot70.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap77 = astRoot70.getSymbolTable();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot70);
        int int79 = astRoot30.depth();
        int int80 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode24, node27, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot6.setTop(scriptNode24);
        java.lang.String str83 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.Node node84 = null;
        scriptNode24.target = node84;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(commentArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{\n}\n" + "'", str63, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(symbolArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str83, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str6 = scriptNode3.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope9, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot12.getAstRoot();
        java.lang.String str14 = astRoot13.shortName();
        java.lang.String str15 = astRoot13.getSourceName();
        astRoot13.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = astRoot13.getSymbolTable();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        astRoot21.checkParentLinks();
        scope19.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot21);
        java.lang.String str29 = astRoot21.getJsDoc();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray33 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList34, symbolArray33);
        astRoot31.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList34);
        boolean boolean37 = astRoot31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setWarnTrailingComma(true);
        boolean boolean41 = compilerEnvirons38.isRecordingLocalJsDocComments();
        compilerEnvirons38.setWarnTrailingComma(false);
        compilerEnvirons38.setAllowSharpComments(false);
        boolean boolean46 = compilerEnvirons38.isGenerateDebugInfo();
        astRoot31.setCompilerData((java.lang.Object) boolean46);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.Comment comment49 = null;
        astRoot31.setJsDocNode(comment49);
        java.lang.String str51 = astRoot31.toString();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((-645466284), (com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot31, 548641306);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons57 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons57.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet60 = compilerEnvirons57.getActivationNames();
        boolean boolean61 = compilerEnvirons57.recoverFromErrors();
        boolean boolean62 = compilerEnvirons57.getWarnTrailingComma();
        boolean boolean63 = compilerEnvirons57.isIdeMode();
        boolean boolean64 = compilerEnvirons57.isRecordingLocalJsDocComments();
        boolean boolean65 = compilerEnvirons57.isIdeMode();
        compilerEnvirons57.setRecoverFromErrors(true);
        compilerEnvirons57.setRecordingComments(false);
        scriptNode55.putProp(190277856, (java.lang.Object) false);
        // The following exception was thrown during execution in test generation
        try {
            astRoot21.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AstRoot" + "'", str14, "AstRoot");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(symbolArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "136" + "'", str51, "136");
        org.junit.Assert.assertNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons4.getErrorReporter();
        boolean boolean8 = compilerEnvirons4.isGenerateObserverCount();
        compilerEnvirons4.setRecordingComments(true);
        boolean boolean11 = compilerEnvirons4.isGenerateObserverCount();
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter18);
        boolean boolean20 = compilerEnvirons4.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons4.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        boolean boolean25 = compilerEnvirons22.isGeneratingSource();
        compilerEnvirons22.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter33.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter33.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter33);
        compilerEnvirons4.setErrorReporter(errorReporter33);
        com.google.javascript.rhino.head.Parser parser48 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter33);
        java.util.Set<java.lang.String> strSet49 = compilerEnvirons0.getActivationNames();
        boolean boolean50 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons0.getErrorReporter();
        boolean boolean52 = compilerEnvirons0.isGenerateObserverCount();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(319087888);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 319087888");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(errorReporter21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = astRoot0.iterator();
        astRoot0.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(nodeItor5);
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode16 = astRoot15.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        scriptNode17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode17.getSymbols();
        com.google.javascript.rhino.head.Node node26 = scriptNode17.getFirstChild();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        com.google.javascript.rhino.head.ast.Symbol symbol28 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode17.putSymbol(symbol28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(node26);
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.lang.String str35 = scope30.toSource(12);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope30);
        astRoot16.setBaseLineno(19);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, 26);
        scope11.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot16, node42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        int int47 = scriptNode44.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastChild();
        int int49 = scriptNode44.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scriptNode44.getSymbolTable();
        astRoot16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        astRoot16.removeChildren();
        boolean boolean53 = astRoot16.hasSideEffects();
        com.google.javascript.rhino.head.Node node54 = astRoot16.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = astRoot16.getSymbols();
        int int56 = astRoot16.getBaseLineno();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                        {\n                        }\n" + "'", str35, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 19 + "'", int56 == 19);
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        com.google.javascript.rhino.head.Node node39 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.Node node40 = astRoot32.target;
        astRoot12.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        int int42 = astRoot12.getPosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = astRoot1.getSymbolTable();
        astRoot1.checkParentLinks();
        java.lang.String str5 = astRoot1.shortName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AstRoot" + "'", str5, "AstRoot");
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean11 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        boolean boolean11 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        scriptNode7.setEncodedSource("java.io.IOException");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.labelId(143344698);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.lang.String str7 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = astRoot1.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode15);
        int int19 = astRoot11.getParamCount();
        java.lang.String str20 = astRoot11.debugPrint();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = astRoot23.getAstRoot();
        java.lang.String str25 = astRoot24.shortName();
        java.lang.String str27 = astRoot24.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = astRoot24.getFunctions();
        astRoot24.checkParentLinks();
        boolean boolean30 = astRoot24.hasChildren();
        int int31 = astRoot24.getLineno();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot24, 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int44 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot36, scope45);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope45);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        boolean boolean52 = scope49.hasSideEffects();
        int int53 = scope45.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope49);
        boolean boolean54 = scope49.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode59 = astRoot58.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) scriptNode60);
        int int64 = astRoot56.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope65.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot56, scope65);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = astRoot56.getSymbolTable();
        scope49.setSymbolTable(strMap68);
        astRoot24.setSymbolTable(strMap68);
        astRoot11.setSymbolTable(strMap68);
        astRoot1.setSymbolTable(strMap68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray73 = astRoot1.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(functionNode8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AstRoot" + "'", str25, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-598765328) + "'", int53 == (-598765328));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(astNode59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        java.lang.String str11 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor34 = scope30.iterator();
        astRoot13.setParentScope(scope30);
        java.lang.Object obj37 = scope30.getProp(375917932);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setStrictMode(true);
        boolean boolean41 = compilerEnvirons38.recoverFromErrors();
        compilerEnvirons38.setRecordingComments(true);
        boolean boolean44 = compilerEnvirons38.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        compilerEnvirons45.setErrorReporter(errorReporter51);
        com.google.javascript.rhino.head.IRFactory iRFactory53 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons38, errorReporter51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator58 = scope57.spliterator();
        astRoot55.addChildScope(scope57);
        java.lang.String str61 = astRoot55.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str63 = astRoot62.getNextTempName();
        java.lang.String str64 = astRoot62.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode65.getSymbols();
        java.lang.String str67 = astRoot62.toStringTree(scriptNode65);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scope68.addChild((com.google.javascript.rhino.head.ast.AstNode) scope69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope69.setTop(scriptNode71);
        java.lang.String str74 = scope69.toSource(12);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) scriptNode65, (com.google.javascript.rhino.head.Node) scope69);
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str78 = astRoot77.getNextTempName();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot77, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet81 = astRoot77.getComments();
        node75.addChildToBack((com.google.javascript.rhino.head.Node) astRoot77);
        com.google.javascript.rhino.head.Node node83 = astRoot77.getLastSibling();
        com.google.javascript.rhino.head.Node node84 = iRFactory53.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot77);
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot77);
        astRoot0.setCompilerData((java.lang.Object) astRoot77);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str11, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(nodeItor34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "136" + "'", str64, "136");
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                        {\n                        }\n" + "'", str74, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
        org.junit.Assert.assertNull(commentSet81);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(node84);
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int14 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.Comment comment15 = scriptNode0.getJsDocNode();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(comment15);
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator24 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator25 = positionComparator21.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator24);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator26 = positionComparator24.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator25);
        org.junit.Assert.assertNotNull(astNodeComparator26);
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        scriptNode5.setJsDocNode(comment7);
        int int9 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scope11.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope11, (int) (short) 10);
        java.lang.Object obj16 = scope11.getProp((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.Node node48 = astRoot30.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot49.getAstRoot();
        java.lang.String str51 = astRoot50.shortName();
        java.lang.String str53 = astRoot50.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = astRoot50.getFunctions();
        astRoot50.checkParentLinks();
        boolean boolean56 = astRoot50.hasChildren();
        int int57 = astRoot50.getLineno();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot50, (int) ' ');
        java.lang.Object obj61 = scope11.getProp((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(astRoot50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AstRoot" + "'", str51, "AstRoot");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingComments(true);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope25.setTop(scriptNode27);
        java.lang.String str30 = scope25.toSource(12);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot33, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot33.getComments();
        node31.addChildToBack((com.google.javascript.rhino.head.Node) astRoot33);
        com.google.javascript.rhino.head.Node node39 = astRoot33.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator40.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator41);
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node44 = node43.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        node43.addChildToFront((com.google.javascript.rhino.head.Node) scope45);
        int int47 = scope45.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scope45.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int52 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) scope45, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        node39.addChildToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setSourceName("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor67 = null;
        astRoot66.visitComments(nodeVisitor67);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList70 = astRoot0.getFunctions();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor71 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                        {\n                        }\n" + "'", str30, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-12) + "'", int52 == (-12));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(functionNodeList70);
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        int int15 = astRoot11.getType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = astRoot11.getParamOrVarName((-384667093));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 136 + "'", int15 == 136);
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator24 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator25 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator24);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = parser26.parse("", "-1\tSCRIPT -1 1\n", 19);
        com.google.javascript.rhino.head.ast.Comment comment31 = astRoot30.getJsDocNode();
        int int32 = astRoot30.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        scriptNode36.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator48 = scope47.spliterator();
        astRoot45.addChildScope(scope47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = astRoot45.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.addChild((com.google.javascript.rhino.head.ast.AstNode) scope52);
        boolean boolean54 = scope51.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope51, scope55);
        astRoot45.replaceWith(scope51);
        int int60 = astRoot45.getEncodedSourceEnd();
        scriptNode38.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot45);
        int int62 = positionComparator24.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot30, (com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        boolean boolean63 = astRoot30.hasChildren();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator25);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 19 + "'", int32 == 19);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator48);
        org.junit.Assert.assertNotNull(scopeList50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isGenerateDebugInfo();
        compilerEnvirons26.setIdeMode(false);
        compilerEnvirons26.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons39.getErrorReporter();
        boolean boolean43 = compilerEnvirons39.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons39.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser45 = new com.google.javascript.rhino.head.Parser(compilerEnvirons26, errorReporter44);
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = iRFactory46.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot50.setInStrictMode(false);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node53 = astRoot50.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorReporter44);
        org.junit.Assert.assertNotNull(astRoot50);
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot0.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = astRoot0.spliterator();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        int int5 = astRoot1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot7.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = astRoot7.getComments();
        astRoot1.target = astRoot7;
        int int29 = astRoot7.getIntProp(14, 22);
        int int30 = astRoot7.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        astRoot31.checkParentLinks();
        int int40 = astRoot31.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int54 = astRoot46.getParamCount();
        java.lang.String str55 = astRoot46.debugPrint();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot46);
        astRoot31.addChildAfter(node43, (com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = scope59.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node63 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node64 = node63.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        node63.addChildToFront((com.google.javascript.rhino.head.Node) scope65);
        scope59.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode62, node63);
        scriptNode62.flattenSymbolTable(false);
        int int70 = scriptNode62.getType();
        scriptNode62.setBaseLineno(5);
        int int73 = astRoot31.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray77 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList78, symbolArray77);
        astRoot75.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList78);
        astRoot75.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot82 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int83 = astRoot82.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int85 = astRoot84.getEndLineno();
        java.lang.Object obj86 = astRoot84.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray87 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet88 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet88, commentArray87);
        astRoot84.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet88);
        astRoot82.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet88);
        astRoot75.target = astRoot82;
        com.google.javascript.rhino.head.Node node93 = astRoot82.getNext();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) astRoot82);
        java.lang.String str95 = scriptNode62.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot82);
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertNull(commentSet25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 22 + "'", int29 == 22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str55, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 136 + "'", int70 == 136);
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-690536336) + "'", int73 == (-690536336));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(symbolArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(commentArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(node93);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setStrictMode(false);
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons0.getActivationNames();
        boolean boolean21 = compilerEnvirons0.isIdeMode();
        boolean boolean22 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        com.google.javascript.rhino.head.IRFactory iRFactory12 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean15 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet19 = compilerEnvirons16.getActivationNames();
        boolean boolean20 = compilerEnvirons16.recoverFromErrors();
        boolean boolean21 = compilerEnvirons16.getWarnTrailingComma();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean24 = compilerEnvirons16.isXmlAvailable();
        compilerEnvirons16.setGenerateDebugInfo(true);
        boolean boolean27 = compilerEnvirons16.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16);
        boolean boolean29 = compilerEnvirons16.getWarnTrailingComma();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setReservedKeywordAsIdentifier(false);
        compilerEnvirons16.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setWarnTrailingComma(true);
        boolean boolean39 = compilerEnvirons36.getWarnTrailingComma();
        compilerEnvirons36.setOptimizationLevel((int) (short) 0);
        boolean boolean42 = compilerEnvirons36.isXmlAvailable();
        boolean boolean43 = compilerEnvirons36.isGenerateDebugInfo();
        com.google.javascript.rhino.head.Parser parser44 = new com.google.javascript.rhino.head.Parser(compilerEnvirons36);
        java.util.Set<java.lang.String> strSet45 = compilerEnvirons36.getActivationNames();
        compilerEnvirons36.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet51 = compilerEnvirons48.getActivationNames();
        boolean boolean52 = compilerEnvirons48.recoverFromErrors();
        boolean boolean53 = compilerEnvirons48.getWarnTrailingComma();
        compilerEnvirons48.setWarnTrailingComma(true);
        java.util.Set<java.lang.String> strSet56 = compilerEnvirons48.getActivationNames();
        boolean boolean57 = compilerEnvirons48.recoverFromErrors();
        boolean boolean58 = compilerEnvirons48.isGenerateDebugInfo();
        com.google.javascript.rhino.head.Parser parser59 = new com.google.javascript.rhino.head.Parser(compilerEnvirons48);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons60 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons60.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter63 = compilerEnvirons60.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException69 = errorReporter63.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        errorReporter63.warning("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", "java.io.IOException: !", 129, "com.google.javascript.rhino.head.EvaluatorException: $0 (                        {\n                        }\n#1)", 965524926);
        com.google.javascript.rhino.head.IRFactory iRFactory76 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons48, errorReporter63);
        compilerEnvirons36.setErrorReporter(errorReporter63);
        compilerEnvirons16.setErrorReporter(errorReporter63);
        com.google.javascript.rhino.head.Parser parser79 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter63);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter63.error("26\tSCRIPT 26 1\n", "com.google.javascript.rhino.head.EvaluatorException:                                                                  (                  #10)", 1617122241, "typeof", (-379853048));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -379853048");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strSet45);
        org.junit.Assert.assertNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(errorReporter63);
        org.junit.Assert.assertNotNull(evaluatorException69);
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        java.lang.String str8 = astRoot6.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode9.getSymbols();
        java.lang.String str11 = astRoot6.toStringTree(scriptNode9);
        astRoot6.checkParentLinks();
        int int15 = astRoot6.getIntProp(11, 32);
        int int16 = astRoot6.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.clearParentScope();
        boolean boolean21 = scriptNode17.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = null;
        scriptNode17.setSymbolTable(strMap22);
        int int24 = scriptNode17.getRegexpCount();
        int int25 = scriptNode17.getRegexpCount();
        astRoot6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.AstNode astNode28 = scriptNode17.getParent();
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode17.getDefiningScope("                        {\n                        }\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node31 = scope30.getLastChild();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(astNode28);
        org.junit.Assert.assertNull(scope30);
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons0.setStrictMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons3.getActivationNames();
        int int8 = compilerEnvirons3.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean15 = compilerEnvirons12.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter16);
        boolean boolean18 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean19 = compilerEnvirons9.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.isRecordingLocalJsDocComments();
        compilerEnvirons20.setWarnTrailingComma(false);
        compilerEnvirons20.setAllowSharpComments(false);
        boolean boolean28 = compilerEnvirons20.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setWarnTrailingComma(true);
        java.lang.String[] strArray41 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        compilerEnvirons29.setActivationNames((java.util.Set<java.lang.String>) strSet42);
        compilerEnvirons20.setActivationNames((java.util.Set<java.lang.String>) strSet42);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet42);
        compilerEnvirons3.setActivationNames((java.util.Set<java.lang.String>) strSet42);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet42);
        boolean boolean49 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean50 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean51 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-738182430));
        astRoot1.setBounds((-665324045), 1205984638);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.addComment(comment5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        int int18 = scope8.getLineno();
        com.google.javascript.rhino.head.Node node19 = scope8.getLastSibling();
        int int20 = scope8.depth();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons21.getErrorReporter();
        boolean boolean25 = compilerEnvirons21.isGenerateObserverCount();
        boolean boolean26 = compilerEnvirons21.recoverFromErrors();
        java.util.Set<java.lang.String> strSet27 = compilerEnvirons21.getActivationNames();
        compilerEnvirons21.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser30 = new com.google.javascript.rhino.head.Parser(compilerEnvirons21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = parser30.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot34.setEncodedSourceEnd(4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = astRoot34.getFunctions();
        java.lang.String str38 = astRoot34.getSourceName();
        com.google.javascript.rhino.head.Node node39 = null;
        scope8.addChildBefore((com.google.javascript.rhino.head.Node) astRoot34, node39);
        com.google.javascript.rhino.head.Node node41 = scope8.target;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strSet27);
        org.junit.Assert.assertNotNull(astRoot34);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str38, "java.io.IOException: java.io.IOException: ");
        org.junit.Assert.assertNull(node41);
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scope5);
        int int7 = scope5.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope5.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int12 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope5, (com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        boolean boolean22 = astRoot14.isInStrictMode();
        astRoot14.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        int int33 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot25);
        java.lang.String str34 = astRoot14.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot14.getFunctions();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-12) + "'", int12 == (-12));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-52) + "'", int33 == (-52));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$1" + "'", str34, "$1");
        org.junit.Assert.assertNotNull(functionNodeList35);
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot0.getFunctions();
        java.lang.String str8 = astRoot0.toSource();
        int int9 = astRoot0.getFunctionCount();
        int int12 = astRoot0.getIntProp(0, 1051569336);
        java.lang.String str13 = astRoot0.debugPrint();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1051569336 + "'", int12 == 1051569336);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.isIdeMode();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        astRoot1.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        int int15 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node16 = scriptNode12.getLastChild();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        int int20 = scriptNode12.getIntProp((-1438167940), 437731425);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope22.setTop(scriptNode24);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor26 = scope22.iterator();
        scriptNode12.setCompilerData((java.lang.Object) nodeItor26);
        int int28 = scriptNode12.getLength();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 437731425 + "'", int20 == 437731425);
        org.junit.Assert.assertNotNull(nodeItor26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        int int11 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        int int23 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode17, (com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = astRoot24.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot33, 24);
        astRoot33.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot33.getAstRoot();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        boolean boolean47 = scriptNode0.hasConsistentReturnUsage();
        int int48 = scriptNode0.getEncodedSourceEnd();
        scriptNode0.setLength(5);
        int int51 = scriptNode0.getParamCount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        com.google.javascript.rhino.head.IRFactory iRFactory12 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean15 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean16 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = astRoot18.getTop();
        int int22 = astRoot18.getParamCount();
        boolean boolean23 = astRoot18.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = astRoot18.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol26 = astRoot18.getSymbol("                                    ");
        boolean boolean27 = astRoot18.isInStrictMode();
        astRoot12.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        com.google.javascript.rhino.head.Node node29 = astRoot18.getLastSibling();
        java.lang.String str30 = astRoot18.getEncodedSource();
        java.lang.String str31 = astRoot18.getNextTempName();
        java.lang.String str32 = astRoot18.getEncodedSource();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(symbol26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$1" + "'", str31, "$1");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.Node node15 = scope6.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot19.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int32 = astRoot17.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor38 = scope34.iterator();
        astRoot17.setParentScope(scope34);
        scope6.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot17);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = scope42.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node46 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node47 = node46.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        node46.addChildToFront((com.google.javascript.rhino.head.Node) scope48);
        scope42.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode45, node46);
        astRoot17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        astRoot17.setPosition((-78159348));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = astRoot17.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(nodeItor38);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(node47);
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        astRoot10.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot10);
        java.lang.String str16 = astRoot10.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = astRoot10.getSymbolTable();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean19 = compilerEnvirons0.recoverFromErrors();
        boolean boolean20 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode6.toSource(0);
        scriptNode6.setEncodedSourceBounds(12, 10);
        scriptNode4.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = scope15.spliterator();
        astRoot13.addChildScope(scope15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = astRoot13.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        boolean boolean22 = scope19.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope19, scope23);
        astRoot13.replaceWith(scope19);
        int int28 = astRoot13.getEncodedSourceEnd();
        scriptNode6.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot13);
        astRoot13.setEncodedSourceBounds(8, 1471166993);
        int int33 = astRoot13.getEndLineno();
        com.google.javascript.rhino.head.Node node36 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        node36.putProp(0, (java.lang.Object) scriptNode41);
        com.google.javascript.rhino.head.Node node45 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        node45.putProp(0, (java.lang.Object) scriptNode50);
        int int53 = scriptNode50.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode50.getSymbols();
        scriptNode41.setSymbols(symbolList54);
        int int56 = scriptNode41.getFunctionCount();
        astRoot13.putProp(640372901, (java.lang.Object) int56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = astRoot13.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode60.toSource(0);
        scriptNode60.removeProp((int) (short) 1);
        int int65 = scriptNode60.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int67 = astRoot66.getEndLineno();
        java.lang.Object obj68 = astRoot66.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray69 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet70, commentArray69);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        astRoot66.checkParentLinks();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode60, (com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.Node node75 = scriptNode60.getLastSibling();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode60);
        // The following exception was thrown during execution in test generation
        try {
            node76.setString("                  ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertNotNull(scopeList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(astRoot58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{\n}\n" + "'", str62, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(commentArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node75);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.lang.String str7 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.Node node8 = astRoot1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.Node node19 = scope17.getFirstChild();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope17);
        astRoot13.target = node20;
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot13, (com.google.javascript.rhino.head.ast.Scope) astRoot23);
        astRoot13.setPosition(531785163);
        java.lang.String str28 = astRoot13.getNextTempName();
        int int29 = astRoot1.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        com.google.javascript.rhino.head.ast.Comment comment30 = null;
        astRoot13.setJsDocNode(comment30);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        int int11 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        int int23 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode17, (com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = astRoot24.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot33, 24);
        astRoot33.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot33.getAstRoot();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        int int47 = astRoot33.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = astRoot33.getLastSibling();
        int int49 = node48.getType();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 136 + "'", int49 == 136);
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(1239469476, 133048113);
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        int int5 = astRoot1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot7.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = astRoot7.getComments();
        astRoot1.target = astRoot7;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope27 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertNull(commentSet25);
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.isIdeMode();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel((-178186533));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: -178186533");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-21), (-814774565));
        com.google.javascript.rhino.head.Node node3 = scope2.getLastChild();
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        astRoot0.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = astRoot0.getSymbolTable();
        java.lang.Object obj4 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.getWarnTrailingComma();
        compilerEnvirons5.setGeneratingSource(true);
        compilerEnvirons5.setIdeMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory13 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons5);
        astRoot0.setCompilerData((java.lang.Object) iRFactory13);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node15 = astRoot0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.lang.String str35 = scope30.toSource(12);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope30);
        astRoot16.setBaseLineno(19);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, 26);
        scope11.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot16, node42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        int int47 = scriptNode44.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastChild();
        int int49 = scriptNode44.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scriptNode44.getSymbolTable();
        astRoot16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        astRoot16.removeChildren();
        int int53 = astRoot16.getLength();
        java.lang.String str54 = astRoot16.getJsDoc();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                        {\n                        }\n" + "'", str35, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        int int10 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode1, node13, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray18 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList19, symbolArray18);
        astRoot16.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList19);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        astRoot16.addChildScope(scope23);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList26 = astRoot16.getStatements();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot16);
        boolean boolean28 = scriptNode1.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(symbolArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(astNodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        int int11 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setAllowSharpComments(true);
        com.google.javascript.rhino.head.Context context16 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((-543879055));
        astRoot7.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot12);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator15 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        java.lang.String str18 = astRoot16.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode19.getSymbols();
        java.lang.String str21 = astRoot16.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        int int25 = positionComparator15.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode19, (com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = astRoot26.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = astRoot37.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int43 = positionComparator15.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot26, (com.google.javascript.rhino.head.ast.AstNode) astRoot35);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot35, 24);
        astRoot35.removeChildren();
        com.google.javascript.rhino.head.ast.Comment comment47 = astRoot35.getJsDocNode();
        astRoot35.checkParentLinks();
        astRoot7.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot35);
        astRoot35.clearParentScope();
        java.lang.String str51 = astRoot35.debugPrint();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "136" + "'", str18, "136");
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(astNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(comment47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str51, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        java.lang.String str7 = scriptNode1.toSource(24);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator19 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        java.lang.String str22 = astRoot20.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode23.getSymbols();
        java.lang.String str25 = astRoot20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        int int29 = positionComparator19.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode23, (com.google.javascript.rhino.head.ast.AstNode) scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = astRoot30.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode42 = astRoot41.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scriptNode43);
        int int47 = positionComparator19.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot30, (com.google.javascript.rhino.head.ast.AstNode) astRoot39);
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot39.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        scope9.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot39);
        int int53 = astRoot39.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node54 = astRoot39.getLastSibling();
        scriptNode1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot39);
        com.google.javascript.rhino.head.Node node56 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = scriptNode1.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                {\n                                                }\n" + "'", str7, "                                                {\n                                                }\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "136" + "'", str22, "136");
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(astNode42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(functionNode58);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = astNodeComparator19.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = astNodeComparator20.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator22 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator23 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = positionComparator22.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator23);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator25 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator26 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator25.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode32 = astRoot31.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int40 = positionComparator25.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot31, (com.google.javascript.rhino.head.ast.AstNode) scope39);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator41 = astNodeComparator24.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator25);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator25.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator43 = positionComparator25.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator44 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator46 = positionComparator44.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator45);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = positionComparator47.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode54 = astRoot53.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode55);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int62 = positionComparator47.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot53, (com.google.javascript.rhino.head.ast.AstNode) scope61);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator63 = astNodeComparator46.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator47);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator64 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator65 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator66 = positionComparator64.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator65);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator67 = astNodeComparator63.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator65);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator68 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator69 = astNodeComparator63.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator68);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator70 = astNodeComparator69.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator71 = positionComparator25.thenComparing(astNodeComparator69);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator72 = positionComparator25.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator73 = astNodeComparator21.thenComparing(astNodeComparator72);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator74 = astNodeComparator72.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator75 = astNodeComparator74.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator41);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(astNodeComparator43);
        org.junit.Assert.assertNotNull(astNodeComparator46);
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(astNode54);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-3) + "'", int62 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator63);
        org.junit.Assert.assertNotNull(astNodeComparator66);
        org.junit.Assert.assertNotNull(astNodeComparator67);
        org.junit.Assert.assertNotNull(astNodeComparator69);
        org.junit.Assert.assertNotNull(astNodeComparator70);
        org.junit.Assert.assertNotNull(astNodeComparator71);
        org.junit.Assert.assertNotNull(astNodeComparator72);
        org.junit.Assert.assertNotNull(astNodeComparator73);
        org.junit.Assert.assertNotNull(astNodeComparator74);
        org.junit.Assert.assertNotNull(astNodeComparator75);
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowSharpComments(false);
        java.util.Set<java.lang.String> strSet8 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet8);
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode0.makeIndent((-1840907413));
        java.lang.String str5 = scriptNode0.getSourceName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        boolean boolean14 = astRoot10.hasSideEffects();
        java.lang.String str16 = astRoot10.toSource(100);
        int int17 = astRoot10.getParamCount();
        astRoot10.setSourceName("                        ");
        astRoot10.removeChildren();
        int int21 = astRoot10.getFunctionCount();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        astRoot4.setEncodedSourceEnd(6);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = astRoot4.getComments();
        int int15 = astRoot4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment23 = null;
        astRoot16.setJsDocNode(comment23);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor25 = null;
        astRoot16.visitComments(nodeVisitor25);
        astRoot16.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope30 = astRoot16.getDefiningScope("{\n  {\n  }\n}\n");
        int int31 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot16);
        com.google.javascript.rhino.head.ast.Symbol symbol33 = astRoot4.getSymbol("-3\tSCRIPT -3 1\n");
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(commentSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 6 + "'", int15 == 6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(scope30);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1408129537 + "'", int31 == 1408129537);
        org.junit.Assert.assertNull(symbol33);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser5 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setXmlAvailable(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory13 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter12);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        int int4 = scriptNode2.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = astRoot5.getAstRoot();
        java.lang.String str7 = astRoot6.shortName();
        java.lang.String str9 = astRoot6.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = astRoot6.getFunctions();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot6, 6);
        astRoot6.removeProp((-852661786));
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        astRoot17.checkParentLinks();
        scope15.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot(23);
        scope15.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = astRoot28.getTop();
        int int32 = astRoot28.getParamCount();
        boolean boolean33 = astRoot28.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator34 = astRoot28.new NodeIterator();
        astRoot28.checkParentLinks();
        int int36 = astRoot28.getRegexpCount();
        astRoot28.setEncodedSourceBounds(653625563, 441866554);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(852409088, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, 8);
        com.google.javascript.rhino.head.Node node42 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot6.addChildToFront(node42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(astRoot6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AstRoot" + "'", str7, "AstRoot");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot0.getFunctions();
        java.lang.String str8 = astRoot0.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scope11.spliterator();
        astRoot9.addChildScope(scope11);
        java.lang.String str15 = astRoot9.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment16 = null;
        astRoot9.setJsDocNode(comment16);
        int int18 = astRoot9.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor19 = null;
        astRoot9.visitComments(nodeVisitor19);
        astRoot9.setEncodedSourceBounds((int) 'a', (int) (short) 1);
        int int24 = astRoot9.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        com.google.javascript.rhino.head.ast.Scope scope34 = astRoot0.getEnclosingScope();
        java.lang.String str36 = astRoot0.toSource(627479866);
        int int37 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope39.setTop(scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        scriptNode41.setCompilerData((java.lang.Object) scope44);
        scriptNode41.setEncodedSourceEnd(0);
        int int49 = scriptNode41.getType();
        int int50 = scriptNode41.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node51 = scriptNode41.target;
        scriptNode41.clearParentScope();
        java.lang.String str53 = scriptNode41.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode41.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.removeChild((com.google.javascript.rhino.head.Node) scriptNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 136 + "'", int49 == 136);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNotNull(functionNodeList54);
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.lang.String[] strArray29 = new java.lang.String[] { "  {\n  }\n", "/", "                        {\n                        }\n", "/", "2", "java.io.IOException: java.io.IOException", "java.io.IOException: hi!", "-1\tSCRIPT -1 1\n", "                        {\n                        }\n", "/", "/", "{\n}\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", "                  ", "136", "$0", "                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", "java.io.IOException: ", "AstRoot", "$0", "2" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean35 = compilerEnvirons0.isStrictMode();
        boolean boolean36 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setRecoverFromErrors(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean2 = scope1.hasChildren();
        scope1.putIntProp((-484812922), 550287075);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getNextTempName();
        java.lang.String str9 = scriptNode7.debugPrint();
        scriptNode7.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getEndLineno();
        java.lang.Object obj24 = astRoot22.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray25 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet26, commentArray25);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        int int30 = astRoot20.getRegexpCount();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot20, 550287075);
        com.google.javascript.rhino.head.Node node33 = astRoot13.target;
        java.lang.String str34 = astRoot13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = astRoot13.getTop();
        java.lang.String str36 = astRoot13.toSource();
        astRoot13.setBounds((-1610320791), 526823265);
        int int40 = astRoot13.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        java.lang.String str43 = astRoot41.debugPrint();
        astRoot41.setInStrictMode(true);
        scope1.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot41);
        int int47 = scope1.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str50 = astRoot49.debugPrint();
        astRoot49.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment53 = null;
        astRoot49.setJsDocNode(comment53);
        java.lang.String str55 = astRoot49.getSourceName();
        com.google.javascript.rhino.head.Node node56 = astRoot49.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = astRoot57.getAstRoot();
        java.lang.String str59 = astRoot58.shortName();
        java.lang.String str60 = astRoot58.getSourceName();
        int int61 = astRoot58.getAbsolutePosition();
        int int62 = astRoot58.getPosition();
        astRoot49.addChildToFront((com.google.javascript.rhino.head.Node) astRoot58);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) astRoot58);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = astRoot58.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(commentArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str43, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 24 + "'", int47 == 24);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str50, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(astRoot58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AstRoot" + "'", str59, "AstRoot");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        int int15 = scriptNode11.getEncodedSourceEnd();
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        scriptNode3.setBaseLineno(6);
        java.lang.String str19 = scriptNode3.getEncodedSource();
        java.lang.String str20 = scriptNode3.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        int int24 = scriptNode22.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = astRoot25.getAstRoot();
        java.lang.String str27 = astRoot26.shortName();
        java.lang.String str29 = astRoot26.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = astRoot26.getFunctions();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) astRoot26, 6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = scriptNode22.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode34.toSource(0);
        scriptNode34.clearParentScope();
        boolean boolean38 = scriptNode34.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode34.setSymbolTable(strMap39);
        int int41 = scriptNode34.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList42 = scriptNode34.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode43.toSource(0);
        scriptNode43.clearParentScope();
        boolean boolean47 = scriptNode43.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = scope51.spliterator();
        astRoot49.addChildScope(scope51);
        java.lang.String str55 = astRoot49.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        java.lang.String str58 = astRoot56.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode59.getSymbols();
        java.lang.String str61 = astRoot56.toStringTree(scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope63.setTop(scriptNode65);
        java.lang.String str68 = scope63.toSource(12);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope63);
        astRoot49.setBaseLineno(19);
        scriptNode43.addChildToBack((com.google.javascript.rhino.head.Node) astRoot49);
        astRoot49.removeChildren();
        int int74 = astRoot49.getEncodedSourceEnd();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot76.getParent();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        scope79.addChild((com.google.javascript.rhino.head.ast.AstNode) scope80);
        com.google.javascript.rhino.head.Node node82 = scope80.getFirstChild();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope80);
        astRoot76.target = node83;
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = astRoot76.getAstRoot();
        boolean boolean86 = astRoot85.hasSideEffects();
        astRoot49.addChildToBack((com.google.javascript.rhino.head.Node) astRoot85);
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        scriptNode3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = scriptNode3.getTop();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor91 = scriptNode90.iterator();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AstRoot" + "'", str27, "AstRoot");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{\n}\n" + "'", str36, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astNodeList42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{\n}\n" + "'", str45, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "136" + "'", str58, "136");
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                        {\n                        }\n" + "'", str68, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNotNull(astRoot85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(scriptNode90);
        org.junit.Assert.assertNotNull(nodeItor91);
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot0.getAstRoot();
        astRoot0.setPosition(24);
        int int12 = astRoot0.getLength();
        astRoot0.flattenSymbolTable(true);
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        int int32 = astRoot12.getLineno();
        com.google.javascript.rhino.head.ast.Comment comment33 = astRoot12.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode34.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        java.lang.String str40 = scriptNode38.debugPrint();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        scriptNode34.setEncodedSource("$0");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str49 = scriptNode46.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope52, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = astRoot55.getAstRoot();
        java.lang.String str57 = astRoot56.shortName();
        java.lang.String str58 = astRoot56.getSourceName();
        astRoot56.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap60 = astRoot56.getSymbolTable();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope52, (com.google.javascript.rhino.head.Node) astRoot56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str63 = astRoot62.getNextTempName();
        java.lang.String str64 = astRoot62.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = astRoot62.getTop();
        int int66 = astRoot62.getParamCount();
        boolean boolean67 = astRoot62.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot62.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol70 = astRoot62.getSymbol("                                    ");
        boolean boolean71 = astRoot62.isInStrictMode();
        astRoot56.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot62);
        com.google.javascript.rhino.head.Node node73 = astRoot62.getLastSibling();
        scriptNode34.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot62);
        int int75 = astRoot62.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            comment33.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(comment33);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str40, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AstRoot" + "'", str57, "AstRoot");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "136" + "'", str64, "136");
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(symbol70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        int int5 = astRoot1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot7.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = astRoot7.getComments();
        astRoot1.target = astRoot7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = astRoot28.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        boolean boolean37 = scope34.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope34, scope38);
        astRoot28.replaceWith(scope34);
        java.lang.String str44 = astRoot28.toSource(26);
        astRoot28.setCompilerData((java.lang.Object) 20);
        astRoot1.putProp(871104031, (java.lang.Object) 20);
        astRoot1.setLength(25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = astRoot50.getTop();
        int int54 = astRoot50.getParamCount();
        astRoot50.checkParentLinks();
        java.io.IOException iOException58 = new java.io.IOException();
        java.io.IOException iOException59 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException58);
        astRoot50.putProp((-738182430), (java.lang.Object) iOException58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = astRoot50.getAstRoot();
        astRoot1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot50);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertNull(commentSet25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNotNull(scopeList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(astRoot62);
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scope2.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope7 = astRoot5.getDefiningScope("AstRoot");
        scope2.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot5);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        com.google.javascript.rhino.head.ast.Comment comment14 = null;
        scriptNode12.setJsDocNode(comment14);
        java.lang.String str17 = scriptNode12.toSource((-379853048));
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = astRoot47.getAstRoot();
        java.lang.String str49 = astRoot48.shortName();
        java.lang.String str50 = astRoot48.debugPrint();
        int int51 = astRoot19.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        com.google.javascript.rhino.head.ast.Scope scope52 = astRoot48.getParentScope();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(242344114, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = astRoot5.getTop();
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(astRoot48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AstRoot" + "'", str49, "AstRoot");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 589811264 + "'", int51 == 589811264);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNotNull(scriptNode54);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        com.google.javascript.rhino.head.ast.Comment comment19 = null;
        astRoot1.setJsDocNode(comment19);
        com.google.javascript.rhino.head.ast.Scope scope21 = astRoot1.getParentScope();
        java.lang.String str23 = astRoot1.toSource(65536);
        int int24 = astRoot1.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-1610320791));
        boolean boolean2 = astRoot1.hasChildren();
        java.lang.Class<?> wildcardClass3 = astRoot1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean11 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.util.Set<java.lang.String> strSet17 = compilerEnvirons14.getActivationNames();
        boolean boolean18 = compilerEnvirons14.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        boolean boolean23 = compilerEnvirons19.isRecordingComments();
        boolean boolean24 = compilerEnvirons19.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons26.getErrorReporter();
        boolean boolean30 = compilerEnvirons26.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException37 = errorReporter31.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons19.setErrorReporter(errorReporter31);
        compilerEnvirons19.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet44 = compilerEnvirons41.getActivationNames();
        boolean boolean45 = compilerEnvirons41.recoverFromErrors();
        boolean boolean46 = compilerEnvirons41.getWarnTrailingComma();
        boolean boolean47 = compilerEnvirons41.isIdeMode();
        boolean boolean48 = compilerEnvirons41.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons49.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons52 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons52.setWarnTrailingComma(true);
        boolean boolean55 = compilerEnvirons52.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter56 = compilerEnvirons52.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser57 = new com.google.javascript.rhino.head.Parser(compilerEnvirons49, errorReporter56);
        com.google.javascript.rhino.head.Parser parser58 = new com.google.javascript.rhino.head.Parser(compilerEnvirons41, errorReporter56);
        compilerEnvirons19.setErrorReporter(errorReporter56);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons60 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons60.setWarnTrailingComma(true);
        boolean boolean63 = compilerEnvirons60.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter64 = compilerEnvirons60.getErrorReporter();
        compilerEnvirons60.setGeneratingSource(false);
        int int67 = compilerEnvirons60.getOptimizationLevel();
        boolean boolean68 = compilerEnvirons60.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons69 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons69.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter72 = compilerEnvirons69.getErrorReporter();
        boolean boolean73 = compilerEnvirons69.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter74 = compilerEnvirons69.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException80 = errorReporter74.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter74.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser87 = new com.google.javascript.rhino.head.Parser(compilerEnvirons60, errorReporter74);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException93 = errorReporter74.runtimeError("14", "{\n{\n}\n}\n", 0, "java.io.IOException:                                                                 ", 170);
        com.google.javascript.rhino.head.Parser parser94 = new com.google.javascript.rhino.head.Parser(compilerEnvirons19, errorReporter74);
        com.google.javascript.rhino.head.IRFactory iRFactory95 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter74);
        com.google.javascript.rhino.head.Parser parser96 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter74);
        com.google.javascript.rhino.head.Parser parser97 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertNotNull(evaluatorException37);
        org.junit.Assert.assertNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(errorReporter56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(errorReporter64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(errorReporter72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(errorReporter74);
        org.junit.Assert.assertNotNull(evaluatorException80);
        org.junit.Assert.assertNotNull(evaluatorException93);
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        int int13 = astRoot2.getEncodedSourceStart();
        java.lang.String str15 = astRoot2.toSource(1942790351);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1233410715), (com.google.javascript.rhino.head.Node) astRoot2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = astRoot2.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor18 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.visitAll(nodeVisitor18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(astRoot17);
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope41.spliterator();
        astRoot39.addChildScope(scope41);
        java.lang.String str45 = astRoot39.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment46 = null;
        astRoot39.setJsDocNode(comment46);
        int int48 = astRoot39.getType();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = astRoot39.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = iRFactory38.transformTree(astRoot39);
        com.google.javascript.rhino.head.ast.Comment comment51 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot39.addComment(comment51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 136 + "'", int48 == 136);
        org.junit.Assert.assertNotNull(scopeList49);
        org.junit.Assert.assertNotNull(scriptNode50);
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.isRecordingComments();
        boolean boolean59 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setStrictMode(true);
        int int65 = compilerEnvirons62.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons66 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons66.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons69 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons69.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter72 = compilerEnvirons69.getErrorReporter();
        compilerEnvirons66.setErrorReporter(errorReporter72);
        compilerEnvirons62.setErrorReporter(errorReporter72);
        com.google.javascript.rhino.head.IRFactory iRFactory75 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter72);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean80 = compilerEnvirons0.isGenerateDebugInfo();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(errorReporter72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot1.getFunctions();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot1.getAstRoot();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = astRoot1.getStatements();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(functionNodeList5);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertNotNull(astNodeList8);
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        scriptNode30.setRelative((-78159348));
        scriptNode30.setEndLineno(17);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = scope36.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node41 = node40.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        node40.addChildToFront((com.google.javascript.rhino.head.Node) scope42);
        scope36.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode39, node40);
        scriptNode39.flattenSymbolTable(false);
        int int47 = scriptNode39.getType();
        java.lang.String str48 = scriptNode39.toString();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = scriptNode39.getSymbolTable();
        java.lang.String str50 = scriptNode39.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode30, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        int int52 = scriptNode30.getLineno();
        scriptNode30.setEncodedSourceEnd(73688713);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 136 + "'", int47 == 136);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(1111059691);
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean19 = compilerEnvirons0.recoverFromErrors();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean22 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setWarnTrailingComma(true);
        boolean boolean4 = compilerEnvirons1.isRecordingLocalJsDocComments();
        compilerEnvirons1.setWarnTrailingComma(false);
        compilerEnvirons1.setAllowSharpComments(false);
        boolean boolean9 = compilerEnvirons1.isGenerateDebugInfo();
        compilerEnvirons1.setIdeMode(false);
        compilerEnvirons1.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons14.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser20 = new com.google.javascript.rhino.head.Parser(compilerEnvirons1, errorReporter19);
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot29);
        astRoot29.setPosition(25);
        astRoot29.setEncodedSourceStart(10);
        astRoot29.clearParentScope();
        com.google.javascript.rhino.head.Node node38 = iRFactory21.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot29);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = scriptNode41.target;
        int int44 = scriptNode41.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node45 = scriptNode41.getLastChild();
        int int46 = scriptNode41.getEndLineno();
        scope40.setTop(scriptNode41);
        java.lang.String str48 = scriptNode41.getSourceName();
        astRoot29.target = scriptNode41;
        com.google.javascript.rhino.head.ast.AstNode astNode50 = scriptNode41.getParent();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator51 = scriptNode41.spliterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(astNode50);
        org.junit.Assert.assertNotNull(nodeSpliterator51);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.setLineno(0);
        int int21 = astRoot1.getEncodedSourceEnd();
        int int24 = astRoot1.getIntProp((-738182430), 2108309913);
        int int25 = astRoot1.getPosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2108309913 + "'", int24 == 2108309913);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean9 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        scriptNode5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode5.getSymbols();
        scriptNode5.setRelative(953557037);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = scriptNode5.getTop();
        java.lang.Object obj18 = scriptNode16.getProp((-646030097));
        scriptNode16.setEncodedSourceBounds((-1382980901), (-882907488));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList2 = scope1.getStatements();
        java.lang.String str3 = scope1.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.lang.Object obj8 = astRoot6.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray9 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet10 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet10, commentArray9);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet10);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot37, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = astRoot37.getComments();
        node35.addChildToBack((com.google.javascript.rhino.head.Node) astRoot37);
        com.google.javascript.rhino.head.Node node43 = astRoot37.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator44 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator46 = positionComparator44.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator45);
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node48 = node47.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        node47.addChildToFront((com.google.javascript.rhino.head.Node) scope49);
        int int51 = scope49.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol53 = scope49.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int56 = positionComparator45.compare((com.google.javascript.rhino.head.ast.AstNode) scope49, (com.google.javascript.rhino.head.ast.AstNode) astRoot55);
        node43.addChildToFront((com.google.javascript.rhino.head.Node) astRoot55);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int59 = astRoot58.getEndLineno();
        java.lang.Object obj60 = astRoot58.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray61 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet62 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet62, commentArray61);
        astRoot58.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet62);
        astRoot55.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet62);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet62);
        astRoot4.setSourceName("{\n}\n");
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot4);
        com.google.javascript.rhino.head.Node node70 = astRoot4.getLastSibling();
        org.junit.Assert.assertNotNull(astNodeList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "129" + "'", str3, "129");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(commentArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(commentSet41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(astNodeComparator46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(symbol53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-12) + "'", int56 == (-12));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(commentArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node70);
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setWarnTrailingComma(true);
        compilerEnvirons0.setGeneratingSource(true);
        int int10 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator16 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        int int26 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode20, (com.google.javascript.rhino.head.ast.AstNode) scope23);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator16);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator28 = positionComparator0.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator29 = astNodeComparator28.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertNotNull(astNodeComparator28);
        org.junit.Assert.assertNotNull(astNodeComparator29);
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setRecordingComments(false);
        compilerEnvirons0.setXmlAvailable(false);
        boolean boolean9 = compilerEnvirons0.recoverFromErrors();
        boolean boolean10 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean11 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope20.setTop(scriptNode22);
        java.lang.String str25 = scope20.toSource(12);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope20);
        astRoot6.setBaseLineno(19);
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot6);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator34 = scope32.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node36 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node37 = node36.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        node36.addChildToFront((com.google.javascript.rhino.head.Node) scope38);
        scope32.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode35, node36);
        scriptNode35.flattenSymbolTable(false);
        boolean[] booleanArray43 = scriptNode35.getParamAndVarConst();
        astRoot6.putProp(16, (java.lang.Object) scriptNode35);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor45 = null;
        astRoot6.visitComments(nodeVisitor45);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                        {\n                        }\n" + "'", str25, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[]");
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        int int13 = astRoot2.getEncodedSourceStart();
        java.lang.String str15 = astRoot2.toSource(1942790351);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1233410715), (com.google.javascript.rhino.head.Node) astRoot2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = astRoot2.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode22 = astRoot21.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int27 = astRoot19.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = astRoot19.spliterator();
        java.lang.Object obj29 = astRoot19.getCompilerData();
        astRoot19.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = astRoot19.getAstRoot();
        int int33 = astRoot19.getType();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getNextTempName();
        com.google.javascript.rhino.head.Node node37 = scriptNode35.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode35.getFunctions();
        int int39 = scriptNode35.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        int int44 = scriptNode40.getEncodedSourceEnd();
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        scriptNode35.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope34, (com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        java.lang.String str49 = scriptNode35.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope50 = scriptNode35.getEnclosingScope();
        astRoot19.addChildToBack((com.google.javascript.rhino.head.Node) scope50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) scriptNode57);
        astRoot55.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getNextTempName();
        com.google.javascript.rhino.head.Node node65 = scriptNode63.target;
        int int66 = scriptNode63.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node67 = scriptNode63.getLastChild();
        int int68 = scriptNode63.getEndLineno();
        astRoot55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap70 = astRoot55.getSymbolTable();
        int int71 = astRoot55.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor72 = null;
        astRoot55.visitComments(nodeVisitor72);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator74 = astRoot55.new NodeIterator();
        astRoot19.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot55);
        // The following exception was thrown during execution in test generation
        try {
            astRoot17.setContinue((com.google.javascript.rhino.head.Node) astRoot19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(astRoot17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(astNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 136 + "'", int33 == 136);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(scope50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 136 + "'", int71 == 136);
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.Node node28 = astRoot7.target;
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet32 = compilerEnvirons29.getActivationNames();
        boolean boolean33 = compilerEnvirons29.recoverFromErrors();
        boolean boolean34 = compilerEnvirons29.getWarnTrailingComma();
        boolean boolean35 = compilerEnvirons29.isIdeMode();
        boolean boolean36 = compilerEnvirons29.isRecordingLocalJsDocComments();
        compilerEnvirons29.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory39 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = astRoot40.getAstRoot();
        java.lang.String str42 = astRoot41.shortName();
        java.lang.String str43 = astRoot41.getSourceName();
        astRoot41.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap45 = astRoot41.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = iRFactory39.transformTree(astRoot41);
        com.google.javascript.rhino.head.Node node48 = scriptNode46.setType((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray52 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList53, symbolArray52);
        astRoot50.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList53);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        astRoot50.addChildScope(scope57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int62 = astRoot61.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int64 = astRoot63.getEndLineno();
        java.lang.Object obj65 = astRoot63.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray66 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet67 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet67, commentArray66);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        astRoot63.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getNextTempName();
        com.google.javascript.rhino.head.Node node73 = scriptNode71.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = scriptNode71.getFunctions();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot61, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) scriptNode71);
        int int76 = astRoot61.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot61);
        scriptNode46.addChildToBack(node77);
        astRoot7.setCompilerData((java.lang.Object) node77);
        astRoot7.setBaseLineno(1051569336);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AstRoot" + "'", str42, "AstRoot");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(symbolArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(commentArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(functionNodeList74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet12 = compilerEnvirons9.getActivationNames();
        boolean boolean13 = compilerEnvirons9.recoverFromErrors();
        boolean boolean14 = compilerEnvirons9.getWarnTrailingComma();
        boolean boolean15 = compilerEnvirons9.isIdeMode();
        boolean boolean16 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17, errorReporter24);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter24);
        boolean boolean27 = compilerEnvirons9.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setWarnTrailingComma(true);
        boolean boolean31 = compilerEnvirons28.isRecordingLocalJsDocComments();
        compilerEnvirons28.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException40 = errorReporter34.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter34);
        compilerEnvirons0.setErrorReporter(errorReporter34);
        compilerEnvirons0.setGenerateObserverCount(true);
        compilerEnvirons0.setAllowSharpComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory47 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        astRoot48.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = astRoot48.getAstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        java.lang.String str57 = astRoot55.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode58.getSymbols();
        java.lang.String str60 = astRoot55.toStringTree(scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        int int64 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode58, (com.google.javascript.rhino.head.ast.AstNode) scope61);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator68 = scope67.spliterator();
        astRoot65.addChildScope(scope67);
        java.lang.String str71 = astRoot65.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList72 = astRoot65.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot76.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot74, (com.google.javascript.rhino.head.Node) astRoot76, (com.google.javascript.rhino.head.Node) scriptNode78);
        int int82 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot65, (com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        astRoot52.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = iRFactory47.transformTree(astRoot74);
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = scriptNode84.getAstRoot();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertNotNull(evaluatorException40);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(astRoot52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "136" + "'", str57, "136");
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(functionNodeList72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(scriptNode84);
        org.junit.Assert.assertNotNull(astRoot85);
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = astRoot4.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = astRoot4.getSymbols();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope18.setTop(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        scriptNode20.setCompilerData((java.lang.Object) scope23);
        scriptNode20.setEncodedSourceEnd(0);
        int int28 = scriptNode20.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        scriptNode20.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode37.toSource(0);
        scriptNode37.setPosition((int) 'a');
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        java.lang.String str53 = astRoot51.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode54.getSymbols();
        java.lang.String str56 = astRoot51.toStringTree(scriptNode54);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope57.addChild((com.google.javascript.rhino.head.ast.AstNode) scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope58.setTop(scriptNode60);
        java.lang.String str63 = scope58.toSource(12);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) scope58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str67 = astRoot66.getNextTempName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot66, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = astRoot66.getComments();
        node64.addChildToBack((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.Node node72 = astRoot66.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator73 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator74 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator75 = positionComparator73.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator74);
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node77 = node76.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        node76.addChildToFront((com.google.javascript.rhino.head.Node) scope78);
        int int80 = scope78.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol82 = scope78.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int85 = positionComparator74.compare((com.google.javascript.rhino.head.ast.AstNode) scope78, (com.google.javascript.rhino.head.ast.AstNode) astRoot84);
        node72.addChildToFront((com.google.javascript.rhino.head.Node) astRoot84);
        com.google.javascript.rhino.head.ast.AstRoot astRoot87 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int88 = astRoot87.getEndLineno();
        java.lang.Object obj89 = astRoot87.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray90 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet91 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet91, commentArray90);
        astRoot87.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet91);
        astRoot84.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet91);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet91);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor96 = null;
        astRoot4.visitComments(nodeVisitor96);
        java.lang.String str98 = astRoot4.debugPrint();
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 136 + "'", int28 == 136);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{\n}\n" + "'", str39, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "136" + "'", str53, "136");
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        {\n                        }\n" + "'", str63, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertNull(commentSet70);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(astNodeComparator75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(symbol82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-12) + "'", int85 == (-12));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(commentArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str98, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray10 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList11, symbolArray10);
        scriptNode6.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode6.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor17 = null;
        astRoot16.visitComments(nodeVisitor17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray22 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList23, symbolArray22);
        astRoot20.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList23);
        boolean boolean26 = astRoot20.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setWarnTrailingComma(true);
        boolean boolean30 = compilerEnvirons27.isRecordingLocalJsDocComments();
        compilerEnvirons27.setWarnTrailingComma(false);
        compilerEnvirons27.setAllowSharpComments(false);
        boolean boolean35 = compilerEnvirons27.isGenerateDebugInfo();
        astRoot20.setCompilerData((java.lang.Object) boolean35);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot20);
        astRoot16.addChildrenToBack(node37);
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getEndLineno();
        java.lang.Object obj42 = astRoot40.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol44 = astRoot40.getSymbol("java.io.IOException: ");
        astRoot40.setSourceName("java.io.IOException: ");
        boolean boolean47 = astRoot40.isInStrictMode();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot40);
        astRoot40.setPosition(19);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = astRoot40.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = astRoot52.getComments();
        int int57 = astRoot52.getIntProp(0, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode58.toSource(0);
        scriptNode58.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node65 = scriptNode58.setType(0);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope67.setTop(scriptNode69);
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        scope71.addChild((com.google.javascript.rhino.head.ast.AstNode) scope72);
        scriptNode69.setCompilerData((java.lang.Object) scope72);
        scriptNode69.setEncodedSourceEnd(0);
        int int77 = scriptNode69.getType();
        int int78 = scriptNode69.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node79 = scriptNode69.target;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = scriptNode69.getSymbols();
        scriptNode58.setSymbols(symbolList80);
        astRoot52.setSymbols(symbolList80);
        astRoot52.setEncodedSourceBounds(375917932, (-791309074));
        // The following exception was thrown during execution in test generation
        try {
            astRoot40.setContinue((com.google.javascript.rhino.head.Node) astRoot52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNotNull(symbolArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(symbolArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(commentSet54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{\n}\n" + "'", str60, "{\n}\n");
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 136 + "'", int77 == 136);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNotNull(symbolList80);
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        boolean boolean33 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.IRFactory iRFactory34 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode8.toSource(0);
        scriptNode8.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) '#', node4, (com.google.javascript.rhino.head.Node) scope7, (com.google.javascript.rhino.head.Node) scriptNode8, 2);
        com.google.javascript.rhino.head.Node node16 = scope7.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getEndLineno();
        java.lang.Object obj22 = astRoot20.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        astRoot20.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.Node node30 = scriptNode28.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = scriptNode28.getFunctions();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int33 = astRoot18.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.setTop(scriptNode37);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor39 = scope35.iterator();
        astRoot18.setParentScope(scope35);
        scope7.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        astRoot18.setLineno(7);
        astRoot18.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = astRoot46.getAstRoot();
        java.lang.String str48 = astRoot47.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = astRoot47.getTop();
        com.google.javascript.rhino.head.Node node50 = astRoot47.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getEndLineno();
        java.lang.Object obj53 = astRoot51.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray54 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet55 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet55, commentArray54);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet55);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet55);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot47, (-280309866));
        int int61 = astRoot47.getLineno();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator62 = astRoot47.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int65 = astRoot64.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int67 = astRoot66.getEndLineno();
        java.lang.Object obj68 = astRoot66.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray69 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet70, commentArray69);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        astRoot66.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getNextTempName();
        com.google.javascript.rhino.head.Node node76 = scriptNode74.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode74.getFunctions();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) scriptNode74);
        int int79 = astRoot64.getEncodedSourceStart();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet80 = astRoot64.getComments();
        java.lang.String str81 = astRoot64.getSourceName();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = astRoot64.getSymbols();
        astRoot47.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot64);
        java.lang.String str84 = astRoot47.debugPrint();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(nodeItor39);
        org.junit.Assert.assertNotNull(astRoot47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AstRoot" + "'", str48, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(commentArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(commentArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(commentSet80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(symbolList82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str84, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean10 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.lang.String str10 = astRoot1.debugPrint();
        int int11 = astRoot1.getEndLineno();
        int int12 = astRoot1.getAbsolutePosition();
        int int15 = astRoot1.getIntProp((int) (short) 10, (int) (short) 0);
        astRoot1.setBaseLineno(441866554);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot1.getAstRoot();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str10, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(astRoot18);
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.isIdeMode();
        java.util.Set<java.lang.String> strSet11 = compilerEnvirons0.getActivationNames();
        boolean boolean12 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean13 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = astRoot1.getTop();
        scriptNode5.setRelative(26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode5.getStatements();
        java.lang.Object obj10 = scriptNode5.getProp((-791309074));
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        astRoot11.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = astRoot11.getSymbolTable();
        java.lang.Object obj15 = astRoot11.getCompilerData();
        astRoot11.setEncodedSourceEnd(717979331);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = astRoot19.getAstRoot();
        java.lang.String str21 = astRoot20.shortName();
        com.google.javascript.rhino.head.Node node22 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node23 = node22.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        node22.addChildToFront((com.google.javascript.rhino.head.Node) scope24);
        int int26 = scope24.getLineno();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scope24, (int) ' ');
        astRoot11.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot20);
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        boolean boolean31 = scriptNode5.hasSideEffects();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(astRoot20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AstRoot" + "'", str21, "AstRoot");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getNext();
        java.lang.Object obj8 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.Node node10 = com.google.javascript.rhino.head.Node.newString("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        node10.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        scriptNode14.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        astRoot0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.AstNode astNode30 = astRoot0.getParent();
        int int31 = astNode30.getLength();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(astNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.io.Reader reader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot13 = parser9.parse(reader10, "21\tSCRIPT 21 -21\n", (-419350393));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons4.getErrorReporter();
        boolean boolean8 = compilerEnvirons4.isGenerateObserverCount();
        compilerEnvirons4.setRecordingComments(true);
        boolean boolean11 = compilerEnvirons4.isGenerateObserverCount();
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter18);
        boolean boolean20 = compilerEnvirons4.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons4.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        boolean boolean25 = compilerEnvirons22.isGeneratingSource();
        compilerEnvirons22.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter33.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter33.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter33);
        compilerEnvirons4.setErrorReporter(errorReporter33);
        com.google.javascript.rhino.head.Parser parser48 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter33);
        com.google.javascript.rhino.head.Parser parser49 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setStrictMode(true);
        java.util.Set<java.lang.String> strSet52 = compilerEnvirons0.getActivationNames();
        boolean boolean53 = compilerEnvirons0.isGeneratingSource();
        boolean boolean54 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator57 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str59 = astRoot58.getNextTempName();
        java.lang.String str60 = astRoot58.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = scriptNode61.getSymbols();
        java.lang.String str63 = astRoot58.toStringTree(scriptNode61);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        int int67 = positionComparator57.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode61, (com.google.javascript.rhino.head.ast.AstNode) scope64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str69 = astRoot68.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator71 = scope70.spliterator();
        astRoot68.addChildScope(scope70);
        java.lang.String str74 = astRoot68.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList75 = astRoot68.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str78 = astRoot77.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode80 = astRoot79.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode81.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot77, (com.google.javascript.rhino.head.Node) astRoot79, (com.google.javascript.rhino.head.Node) scriptNode81);
        int int85 = positionComparator57.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot68, (com.google.javascript.rhino.head.ast.AstNode) astRoot77);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot77, 24);
        java.lang.String str89 = astRoot77.toSource((int) (short) -1);
        astRoot77.setEncodedSourceEnd((-538615178));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = iRFactory55.transformTree(astRoot77);
        scriptNode92.setBaseLineno((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(errorReporter21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "136" + "'", str60, "136");
        org.junit.Assert.assertNotNull(symbolList62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "$0" + "'", str69, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(functionNodeList75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
        org.junit.Assert.assertNull(astNode80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(scriptNode92);
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (byte) 1);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.Node node15 = scope6.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot19.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int32 = astRoot17.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor38 = scope34.iterator();
        astRoot17.setParentScope(scope34);
        scope6.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot17);
        astRoot17.setLineno(7);
        astRoot17.flattenSymbolTable(true);
        boolean boolean45 = astRoot17.hasChildren();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral46 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot17.addRegExp(regExpLiteral46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(nodeItor38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException");
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = node1.iterator();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeItor2);
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        astRoot50.setRelative(550287075);
        astRoot50.setRelative(328069054);
        int int56 = astRoot50.getLength();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot50.putSymbol(symbol57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1288607832 + "'", int51 == 1288607832);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        java.util.Set<java.lang.String> strSet57 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setGeneratingSource(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertNull(strSet57);
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isRecordingComments();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        int int10 = scriptNode4.getEncodedSourceEnd();
        java.lang.String str11 = scriptNode4.shortName();
        int int12 = scriptNode4.getEncodedSourceEnd();
        scriptNode4.setLineno((-1438167940));
        int int15 = scriptNode4.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        java.lang.String str20 = astRoot18.getSourceName();
        astRoot18.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = astRoot26.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter35 = compilerEnvirons32.getErrorReporter();
        boolean boolean36 = compilerEnvirons32.isGenerateObserverCount();
        compilerEnvirons32.setRecordingComments(true);
        boolean boolean39 = compilerEnvirons32.isGenerateObserverCount();
        boolean boolean40 = compilerEnvirons32.isGenerateDebugInfo();
        compilerEnvirons32.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons43.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter46 = compilerEnvirons43.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory47 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons32, errorReporter46);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator49 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode53.getSymbols();
        java.lang.String str55 = astRoot50.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        int int59 = positionComparator49.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode53, (com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator63 = scope62.spliterator();
        astRoot60.addChildScope(scope62);
        java.lang.String str66 = astRoot60.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = astRoot60.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str70 = astRoot69.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode72 = astRoot71.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode73.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) astRoot71, (com.google.javascript.rhino.head.Node) scriptNode73);
        int int77 = positionComparator49.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot60, (com.google.javascript.rhino.head.ast.AstNode) astRoot69);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot69, 24);
        astRoot69.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = iRFactory47.transformTree(astRoot69);
        int int82 = astRoot69.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot69);
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = astRoot24.getAstRoot();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot24, 7);
        scriptNode4.addChildToFront((com.google.javascript.rhino.head.Node) astRoot24);
        scriptNode4.removeChildren();
        scriptNode4.setBounds(743606641, 891951792);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(astNode27);
        org.junit.Assert.assertNotNull(errorReporter35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "$0" + "'", str70, "$0");
        org.junit.Assert.assertNull(astNode72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(astRoot84);
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot4.getRegexpCount();
        com.google.javascript.rhino.head.Node node18 = astRoot4.getNext();
        astRoot4.setBaseLineno(10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = astRoot4.getComments();
        astRoot4.setLength((-12));
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot4.getParent();
        astRoot4.setBounds(775058292, 653625563);
        astRoot4.setEncodedSourceBounds((-1610320791), 1159083728);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot32.getAstRoot();
        java.lang.String str34 = astRoot33.shortName();
        com.google.javascript.rhino.head.Node node35 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node36 = node35.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        node35.addChildToFront((com.google.javascript.rhino.head.Node) scope37);
        int int39 = scope37.getLineno();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scope37, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getEndLineno();
        java.lang.Object obj44 = astRoot42.getCompilerData();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        int int46 = scope37.getLineno();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scope37);
        astRoot4.setInStrictMode(false);
        java.lang.String str51 = astRoot4.toSource(1051569336);
        com.google.javascript.rhino.head.ast.Scope scope52 = astRoot4.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(commentSet21);
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AstRoot" + "'", str34, "AstRoot");
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(scope52);
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode50.toSource(0);
        scriptNode50.setEncodedSourceBounds(12, 10);
        astRoot37.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode50.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump58 = scriptNode50.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(scopeList57);
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-52));
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        java.lang.String str5 = astRoot0.toSource((int) (short) 0);
        astRoot0.setBaseLineno(18);
        int int8 = astRoot0.getType();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = astRoot0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 136 + "'", int8 == 136);
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        scriptNode9.setBounds((int) (byte) -1, 23);
        int int15 = astRoot3.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode16.setEncodedSourceBounds((int) (short) 100, 10);
        int int24 = scriptNode16.getIntProp(0, 9);
        astRoot3.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toSource();
        scriptNode16.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = astRoot26.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope33.spliterator();
        astRoot31.addChildScope(scope33);
        java.lang.String str37 = astRoot31.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getEndLineno();
        java.lang.Object obj40 = astRoot38.getCompilerData();
        astRoot31.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot38);
        astRoot38.setPosition(25);
        java.lang.String str45 = astRoot38.toSource(17);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        int int49 = scope48.getLineno();
        astRoot38.addChildScope(scope48);
        scriptNode30.addChildToBack((com.google.javascript.rhino.head.Node) scope48);
        boolean boolean52 = scriptNode30.hasSideEffects();
        java.lang.String str53 = scriptNode30.getEncodedSource();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 9 + "'", int24 == 9);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingComments(true);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setIdeMode(true);
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean15 = compilerEnvirons12.isRecordingLocalJsDocComments();
        compilerEnvirons12.setWarnTrailingComma(false);
        compilerEnvirons12.setAllowSharpComments(false);
        boolean boolean20 = compilerEnvirons12.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setWarnTrailingComma(true);
        boolean boolean24 = compilerEnvirons21.isRecordingLocalJsDocComments();
        compilerEnvirons21.setWarnTrailingComma(false);
        compilerEnvirons21.setAllowSharpComments(false);
        boolean boolean29 = compilerEnvirons21.isGenerateDebugInfo();
        compilerEnvirons21.setIdeMode(false);
        compilerEnvirons21.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons34.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons34.getErrorReporter();
        boolean boolean38 = compilerEnvirons34.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons34.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser40 = new com.google.javascript.rhino.head.Parser(compilerEnvirons21, errorReporter39);
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12, errorReporter39);
        errorReporter39.warning("-1", "21", 24, "", (-17617447));
        com.google.javascript.rhino.head.Parser parser48 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter39);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot52 = parser48.parse("ScriptNode", "-1\tSCRIPT -1 1\n-1\t  SCRIPT 0 1\n", (-1355535815));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(errorReporter39);
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean16 = compilerEnvirons0.isXmlAvailable();
        boolean boolean17 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean18 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateObserverCount(true);
        java.util.Set<java.lang.String> strSet21 = compilerEnvirons0.getActivationNames();
        boolean boolean22 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        java.util.Set<java.lang.String> strSet11 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons12.getActivationNames();
        boolean boolean16 = compilerEnvirons12.recoverFromErrors();
        boolean boolean17 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons12.isXmlAvailable();
        compilerEnvirons12.setGenerateDebugInfo(true);
        boolean boolean23 = compilerEnvirons12.isAllowMemberExprAsFunctionName();
        compilerEnvirons12.setIdeMode(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode31.getSymbols();
        java.lang.String str33 = astRoot28.toStringTree(scriptNode31);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str37 = scope36.toString();
        astRoot28.addChildrenToBack((com.google.javascript.rhino.head.Node) scope36);
        int int39 = astRoot28.getFunctionCount();
        java.lang.String str40 = astRoot28.getSourceName();
        astRoot28.setRelative(1034001328);
        com.google.javascript.rhino.head.Node node43 = iRFactory27.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(symbolList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "129" + "'", str37, "129");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(node43);
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '#', node32, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode36, 2);
        com.google.javascript.rhino.head.Node node44 = scope35.getLastChild();
        com.google.javascript.rhino.head.Node node45 = astRoot1.getChildBefore(node44);
        astRoot1.setEncodedSource("          {\n          }\n");
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Comment comment50 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.addComment(comment50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(strMap49);
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.Comment comment6 = null;
        scriptNode4.setJsDocNode(comment6);
        int int8 = scriptNode4.getLineno();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getNextTempName();
        java.lang.String str12 = scriptNode10.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = scriptNode10.getEnclosingFunction();
        java.lang.String str14 = node9.toStringTree(scriptNode10);
        scriptNode10.setEncodedSourceEnd(8);
        java.lang.Object obj18 = scriptNode10.getProp((-483073311));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str12, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        int int11 = scope6.getLength();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = scope6.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump13 = functionNode12.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(functionNode12);
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.Node node9 = astRoot1.getLastSibling();
        java.lang.String str11 = astRoot1.toSource(0);
        java.lang.String str12 = astRoot1.toSource();
        astRoot1.setInStrictMode(false);
        java.lang.String str15 = astRoot1.getEncodedSource();
        com.google.javascript.rhino.head.Node node16 = astRoot1.target;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        int int13 = scriptNode11.depth();
        astRoot0.setCompilerData((java.lang.Object) scriptNode11);
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.removeProp((int) (short) 1);
        int int22 = scriptNode17.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getEndLineno();
        java.lang.Object obj25 = astRoot23.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray26 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet27, commentArray26);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        astRoot23.checkParentLinks();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) astRoot23);
        java.lang.String str32 = astRoot23.shortName();
        astRoot23.checkParentLinks();
        int int36 = astRoot23.getIntProp(1205984638, 32);
        int int37 = scriptNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = scriptNode11.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(commentArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-591711722) + "'", int37 == (-591711722));
        org.junit.Assert.assertNull(functionNode38);
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = scriptNode2.target;
        int int5 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastChild();
        scriptNode2.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = null;
        scriptNode2.setSymbolTable(strMap9);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        boolean boolean15 = compilerEnvirons11.isGenerateObserverCount();
        compilerEnvirons11.setRecordingComments(true);
        boolean boolean18 = compilerEnvirons11.isGenerateObserverCount();
        boolean boolean19 = compilerEnvirons11.isGenerateDebugInfo();
        compilerEnvirons11.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory26 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons11, errorReporter25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode31 = astRoot30.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int36 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot28, scope37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = iRFactory26.transformTree(astRoot28);
        scriptNode40.removeChildren();
        scriptNode40.setEncodedSourceStart(1942790351);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode2, (com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        java.lang.String str47 = astRoot45.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode48.getSymbols();
        java.lang.String str50 = astRoot45.toStringTree(scriptNode48);
        astRoot45.checkParentLinks();
        int int54 = astRoot45.getIntProp(11, 32);
        java.lang.String str55 = astRoot45.toString();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot45);
        // The following exception was thrown during execution in test generation
        try {
            scope1.setContinue((com.google.javascript.rhino.head.Node) astRoot45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(astNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "136" + "'", str55, "136");
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException21 = errorReporter15.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException27 = errorReporter15.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter15.runtimeError("java.io.IOException: java.io.IOException: ", "{\n}\n", 520361644, "java.io.IOException: java.io.IOException", (int) (short) 10);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter15.runtimeError("java.io.IOException: java.io.IOException: hi!", "-1\t  BLOCK 0 1\n", (int) (byte) 0, "                  ", 6);
        compilerEnvirons0.setErrorReporter(errorReporter15);
        compilerEnvirons0.setRecoverFromErrors(true);
        java.util.Set<java.lang.String> strSet43 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertNotNull(evaluatorException21);
        org.junit.Assert.assertNotNull(evaluatorException27);
        org.junit.Assert.assertNotNull(evaluatorException33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertNull(strSet43);
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        java.lang.String str10 = astRoot0.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = astRoot0.getFirstChild();
        java.lang.String str13 = astRoot0.toSource((-766081488));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visitAll(nodeVisitor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot1, 4);
        astRoot1.removeChildren();
        astRoot1.setEncodedSourceBounds((-717691128), (-55137080));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor9 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean21 = compilerEnvirons0.isRecordingComments();
        boolean boolean22 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean25 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean26 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        int int17 = astRoot9.getParamCount();
        java.lang.String str18 = astRoot9.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray22 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList23, symbolArray22);
        astRoot20.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList23);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        astRoot20.addChildScope(scope27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getEndLineno();
        java.lang.Object obj35 = astRoot33.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot33.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        astRoot33.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = scriptNode41.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode41.getFunctions();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int46 = astRoot31.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot31);
        astRoot31.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot54.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = scriptNode62.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = scriptNode62.getFunctions();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode62);
        astRoot31.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot54);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot54);
        astRoot54.setEncodedSourceBounds((int) (short) -1, 13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor72 = null;
        astRoot54.visitComments(nodeVisitor72);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap74 = astRoot54.getSymbolTable();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(520361644, (com.google.javascript.rhino.head.Node) astRoot54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int77 = astRoot54.addFunction(functionNode76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(symbolArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        int int9 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope7.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int14 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scope7, (com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        boolean boolean24 = astRoot16.isInStrictMode();
        astRoot16.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        astRoot27.checkParentLinks();
        int int35 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot16, (com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        int int40 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node41 = scriptNode37.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.Comment comment49 = null;
        scriptNode47.setJsDocNode(comment49);
        int int51 = scriptNode47.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scope53.getChildScopes();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope53, (int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode47.getChildScopes();
        int int58 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode37, (com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator60 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        java.lang.String str63 = astRoot61.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode64.getSymbols();
        java.lang.String str66 = astRoot61.toStringTree(scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scope67.addChild((com.google.javascript.rhino.head.ast.AstNode) scope68);
        int int70 = positionComparator60.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode64, (com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str72 = astRoot71.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator74 = scope73.spliterator();
        astRoot71.addChildScope(scope73);
        java.lang.String str77 = astRoot71.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList78 = astRoot71.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot80 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str81 = astRoot80.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot82 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode83 = astRoot82.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode84.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot80, (com.google.javascript.rhino.head.Node) astRoot82, (com.google.javascript.rhino.head.Node) scriptNode84);
        int int88 = positionComparator60.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot71, (com.google.javascript.rhino.head.ast.AstNode) astRoot80);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot80, 24);
        astRoot80.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot92 = astRoot80.getAstRoot();
        int int95 = astRoot80.getIntProp(761599885, 136);
        com.google.javascript.rhino.head.ast.Symbol symbol97 = astRoot80.getSymbol("{\n  {\n  }\n}\n");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode37, (com.google.javascript.rhino.head.ast.Scope) astRoot80);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node99 = scriptNode37.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-12) + "'", int14 == (-12));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-52) + "'", int35 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "136" + "'", str63, "136");
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(functionNodeList78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "$0" + "'", str81, "$0");
        org.junit.Assert.assertNull(astNode83);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(astRoot92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 136 + "'", int95 == 136);
        org.junit.Assert.assertNull(symbol97);
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        boolean boolean19 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.IRFactory iRFactory22 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean23 = compilerEnvirons0.isGeneratingSource();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-1361087235), (-1468440406));
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        int int12 = scriptNode1.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator14 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        int int24 = positionComparator14.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode18, (com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.lang.String str31 = astRoot25.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = astRoot25.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot36.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int42 = positionComparator14.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot25, (com.google.javascript.rhino.head.ast.AstNode) astRoot34);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot34, 24);
        astRoot34.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = astRoot34.getAstRoot();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = astRoot34.getAstRoot();
        astRoot34.checkParentLinks();
        java.lang.String str51 = astRoot34.toSource(23);
        com.google.javascript.rhino.head.Node node54 = com.google.javascript.rhino.head.Node.newString((-1468440406), "-1");
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((-846108491), (com.google.javascript.rhino.head.Node) astRoot34, node54);
        astRoot34.setRelative((-331679258));
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = astRoot34.getFunctions();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(astRoot46);
        org.junit.Assert.assertNotNull(astRoot48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(functionNodeList58);
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '#', node32, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode36, 2);
        com.google.javascript.rhino.head.Node node44 = scope35.getLastChild();
        com.google.javascript.rhino.head.Node node45 = astRoot1.getChildBefore(node44);
        java.lang.String str47 = astRoot1.toSource(11);
        astRoot1.removeProp((-443001414));
        int int50 = astRoot1.getLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = astRoot1.getComments();
        com.google.javascript.rhino.head.ast.AstNode astNode52 = astRoot1.getParent();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(commentSet51);
        org.junit.Assert.assertNull(astNode52);
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) '#', node34, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode38, 2);
        com.google.javascript.rhino.head.Node node46 = scope37.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getEndLineno();
        java.lang.Object obj52 = astRoot50.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        astRoot50.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode58.getFunctions();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int63 = astRoot48.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope65.setTop(scriptNode67);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = scope65.iterator();
        astRoot48.setParentScope(scope65);
        scope37.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot48);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        scope72.addChild((com.google.javascript.rhino.head.ast.AstNode) scope73);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = scope73.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node77 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node78 = node77.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        node77.addChildToFront((com.google.javascript.rhino.head.Node) scope79);
        scope73.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode76, node77);
        astRoot48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        scriptNode30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode76);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor84 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode76.visit(nodeVisitor84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons4.getErrorReporter();
        boolean boolean8 = compilerEnvirons4.isGenerateObserverCount();
        compilerEnvirons4.setRecordingComments(true);
        boolean boolean11 = compilerEnvirons4.isGenerateObserverCount();
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter18);
        boolean boolean20 = compilerEnvirons4.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons4.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        boolean boolean25 = compilerEnvirons22.isGeneratingSource();
        compilerEnvirons22.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter33.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter33.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter33);
        compilerEnvirons4.setErrorReporter(errorReporter33);
        com.google.javascript.rhino.head.Parser parser48 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter33);
        java.util.Set<java.lang.String> strSet49 = compilerEnvirons0.getActivationNames();
        int int50 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean51 = compilerEnvirons0.isRecordingComments();
        boolean boolean52 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setXmlAvailable(false);
        boolean boolean55 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(errorReporter21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertNull(strSet49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        int int23 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode17, (com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = astRoot24.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.ast.Comment[] commentArray42 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet43, commentArray42);
        astRoot33.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet43);
        scope3.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) astRoot33);
        scriptNode1.target = scope3;
        int int48 = scriptNode1.getParamCount();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(commentArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = parser16.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getEndLineno();
        java.lang.Object obj25 = astRoot23.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray26 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet27, commentArray26);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator35 = scope34.spliterator();
        astRoot32.addChildScope(scope34);
        java.lang.String str38 = astRoot32.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        java.lang.String str41 = astRoot39.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode42.getSymbols();
        java.lang.String str44 = astRoot39.toStringTree(scriptNode42);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.setTop(scriptNode48);
        java.lang.String str51 = scope46.toSource(12);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scope46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot54, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = astRoot54.getComments();
        node52.addChildToBack((com.google.javascript.rhino.head.Node) astRoot54);
        com.google.javascript.rhino.head.Node node60 = astRoot54.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator61 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator62 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator63 = positionComparator61.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator62);
        com.google.javascript.rhino.head.Node node64 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node65 = node64.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        node64.addChildToFront((com.google.javascript.rhino.head.Node) scope66);
        int int68 = scope66.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol70 = scope66.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int73 = positionComparator62.compare((com.google.javascript.rhino.head.ast.AstNode) scope66, (com.google.javascript.rhino.head.ast.AstNode) astRoot72);
        node60.addChildToFront((com.google.javascript.rhino.head.Node) astRoot72);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getEndLineno();
        java.lang.Object obj77 = astRoot75.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray78 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet79, commentArray78);
        astRoot75.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        astRoot72.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        int int86 = astRoot3.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertNotNull(astRoot20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(commentArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "136" + "'", str41, "136");
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                        {\n                        }\n" + "'", str51, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(commentSet58);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(astNodeComparator63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(symbol70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-12) + "'", int73 == (-12));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(commentArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        scriptNode0.setLineno((int) (byte) -1);
        int int5 = scriptNode0.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode0.getChildScopes();
        int int7 = scriptNode0.getEndLineno();
        java.lang.Object obj8 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = parser9.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator17 = scope16.spliterator();
        astRoot14.addChildScope(scope16);
        astRoot13.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot14);
        com.google.javascript.rhino.head.ast.Symbol symbol21 = astRoot14.getSymbol("                  ");
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator25 = scope23.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node27 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node28 = node27.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        node27.addChildToFront((com.google.javascript.rhino.head.Node) scope29);
        scope23.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, node27);
        int int32 = scriptNode26.getEncodedSourceEnd();
        astRoot14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(122705610, 3);
        scope37.setLineno(550287075);
        int int40 = scope37.getLineno();
        scriptNode26.addChildrenToFront((com.google.javascript.rhino.head.Node) scope37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot((-61111));
        scope37.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot43);
        int int45 = astRoot43.getEncodedSourceEnd();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator17);
        org.junit.Assert.assertNull(symbol21);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 550287075 + "'", int40 == 550287075);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.isXmlAvailable();
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        boolean boolean11 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '#', node32, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode36, 2);
        com.google.javascript.rhino.head.Node node44 = scope35.getLastChild();
        com.google.javascript.rhino.head.Node node45 = astRoot1.getChildBefore(node44);
        int int46 = astRoot1.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator48 = scope47.spliterator();
        scope47.setRelative((int) (short) 10);
        int int51 = scope47.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator55 = scope54.spliterator();
        astRoot52.addChildScope(scope54);
        java.lang.String str58 = astRoot52.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = astRoot52.getFunctions();
        java.lang.String str60 = astRoot52.toSource();
        int int61 = astRoot52.getFunctionCount();
        astRoot52.checkParentLinks();
        java.lang.String str63 = astRoot52.debugPrint();
        scope47.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int66 = astRoot65.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray67 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList68, symbolArray67);
        astRoot65.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList68);
        astRoot65.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int73 = astRoot72.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int75 = astRoot74.getEndLineno();
        java.lang.Object obj76 = astRoot74.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray77 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet78 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet78, commentArray77);
        astRoot74.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet78);
        astRoot72.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet78);
        astRoot65.target = astRoot72;
        astRoot72.removeProp(15);
        astRoot72.setLineno((-931941363));
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.addChildBefore((com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(symbolArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(commentArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean13 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-61111));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = null;
        java.lang.String str3 = astRoot1.toStringTree(scriptNode2);
        java.lang.String str4 = astRoot1.debugPrint();
        astRoot1.setLength(453396462);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray7 = astRoot1.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-61111\tSCRIPT -61111 1\n" + "'", str4, "-61111\tSCRIPT -61111 1\n");
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = astRoot1.getTop();
        com.google.javascript.rhino.head.Node node6 = scriptNode5.target;
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral7 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.addRegExp(regExpLiteral7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = astRoot0.getParamCount();
        boolean boolean5 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot0.new NodeIterator();
        boolean boolean7 = nodeIterator6.hasNext();
        boolean boolean8 = nodeIterator6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot35.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getNextTempName();
        com.google.javascript.rhino.head.Node node45 = scriptNode43.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode43.getFunctions();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode43);
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot35);
        com.google.javascript.rhino.head.ast.Scope scope49 = astRoot12.getEnclosingScope();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons51 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons51.setStrictMode(true);
        int int54 = compilerEnvirons51.getLanguageVersion();
        int int55 = compilerEnvirons51.getLanguageVersion();
        boolean boolean56 = compilerEnvirons51.isGenerateObserverCount();
        int int57 = compilerEnvirons51.getLanguageVersion();
        compilerEnvirons51.setIdeMode(false);
        astRoot12.putProp(23, (java.lang.Object) false);
        astRoot12.setEncodedSourceStart(722910379);
        astRoot12.setEncodedSourceEnd((-264384405));
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        java.lang.String str67 = astRoot65.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode68.getSymbols();
        java.lang.String str70 = astRoot65.toStringTree(scriptNode68);
        astRoot65.checkParentLinks();
        int int74 = astRoot65.getIntProp(11, 32);
        int int75 = astRoot65.getPosition();
        java.lang.String str76 = astRoot65.debugPrint();
        java.lang.String str77 = astRoot65.toSource();
        int int78 = astRoot65.depth();
        astRoot12.setCompilerData((java.lang.Object) int78);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "136" + "'", str67, "136");
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32 + "'", int74 == 32);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str76, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        scriptNode0.setLineno((int) (byte) -1);
        scriptNode0.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = scriptNode0.getTop();
        com.google.javascript.rhino.head.Node node8 = scriptNode7.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.Node node19 = scope17.getFirstChild();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope17);
        astRoot13.target = node20;
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode7, (com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        scriptNode9.setEncodedSource("-1796887249\tSCRIPT -1796887249 1\n");
        com.google.javascript.rhino.head.Node node26 = scriptNode9.getLastSibling();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(node26);
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scriptNode0.setEncodedSource("$0");
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol14 = astRoot10.getSymbol("java.io.IOException: ");
        astRoot10.setEncodedSourceStart(0);
        java.lang.String str18 = astRoot10.toSource(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray28 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList29, symbolArray28);
        scriptNode24.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode24.getTop();
        int int33 = scriptNode32.getEncodedSourceEnd();
        astRoot10.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        int int35 = astRoot10.getPosition();
        scriptNode0.setCompilerData((java.lang.Object) int35);
        java.lang.String str37 = scriptNode0.toSource();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertNotNull(symbolArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{\n}\n" + "'", str37, "{\n}\n");
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(false);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.Context context10 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(errorReporter9);
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = astRoot2.getAstRoot();
        java.lang.String str4 = astRoot3.shortName();
        java.lang.String str6 = astRoot3.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot3.getFunctions();
        astRoot3.checkParentLinks();
        boolean boolean9 = astRoot3.hasChildren();
        int int10 = astRoot3.getLineno();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot3, 2);
        com.google.javascript.rhino.head.ast.Scope scope14 = astRoot3.getDefiningScope("136");
        int int15 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        java.lang.String str20 = astRoot18.getSourceName();
        java.lang.String str21 = astRoot18.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((-53), (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot29, (-1610320791));
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        java.lang.String str37 = astRoot35.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = astRoot35.getTop();
        int int39 = astRoot35.getParamCount();
        astRoot35.checkParentLinks();
        astRoot35.setEndLineno(775058292);
        com.google.javascript.rhino.head.Node node43 = astRoot35.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getNextTempName();
        com.google.javascript.rhino.head.Node node47 = scriptNode45.target;
        int int48 = scriptNode45.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node49 = scriptNode45.getLastChild();
        scriptNode45.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap52 = null;
        scriptNode45.setSymbolTable(strMap52);
        int int54 = scriptNode45.getEndLineno();
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode45, node57, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int61 = astRoot60.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray62 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList63, symbolArray62);
        astRoot60.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        astRoot60.addChildScope(scope67);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList70 = astRoot60.getStatements();
        scriptNode45.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot60);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = astRoot60.getSymbols();
        java.lang.String str73 = astRoot35.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot60);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot3, node34, (com.google.javascript.rhino.head.Node) astRoot60);
        astRoot60.checkParentLinks();
        java.lang.Object obj76 = astRoot60.getCompilerData();
        org.junit.Assert.assertNotNull(astRoot3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AstRoot" + "'", str4, "AstRoot");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "136" + "'", str37, "136");
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(symbolArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(astNodeList70);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode8.toSource(0);
        scriptNode8.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) '#', node4, (com.google.javascript.rhino.head.Node) scope7, (com.google.javascript.rhino.head.Node) scriptNode8, 2);
        com.google.javascript.rhino.head.Node node16 = scope7.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getEndLineno();
        java.lang.Object obj22 = astRoot20.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        astRoot20.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.Node node30 = scriptNode28.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = scriptNode28.getFunctions();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int33 = astRoot18.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.setTop(scriptNode37);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor39 = scope35.iterator();
        astRoot18.setParentScope(scope35);
        scope7.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scope43.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node48 = node47.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        node47.addChildToFront((com.google.javascript.rhino.head.Node) scope49);
        scope43.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode46, node47);
        astRoot18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList53 = astRoot18.getStatements();
        com.google.javascript.rhino.head.Node node54 = astRoot18.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getNextTempName();
        scope55.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode57);
        java.lang.String str61 = scope55.makeIndent(22);
        boolean boolean62 = scope55.hasChildren();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(919738372, node54, (com.google.javascript.rhino.head.Node) scope55, (-1516658118));
        com.google.javascript.rhino.head.Node node65 = scope55.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump66 = scope55.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(nodeItor39);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(astNodeList53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "                                            " + "'", str61, "                                            ");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(node65);
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-543879055));
        // The following exception was thrown during execution in test generation
        try {
            int int2 = scope1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        com.google.javascript.rhino.head.Node node35 = astRoot21.getLastChild();
        int int36 = astRoot21.getAbsolutePosition();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = astRoot21.spliterator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator37);
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope7, 25);
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setRelative(2);
        scope7.removeProp(6);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope7.spliterator();
        com.google.javascript.rhino.head.Node node16 = scope7.target;
        com.google.javascript.rhino.head.Node node17 = scope7.target;
        com.google.javascript.rhino.head.ast.Comment comment18 = scope7.getJsDocNode();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(comment18);
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = scriptNode2.target;
        int int5 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastChild();
        int int7 = scriptNode2.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scriptNode2.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = scope11.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node16 = node15.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        node15.addChildToFront((com.google.javascript.rhino.head.Node) scope17);
        scope11.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode14, node15);
        scope11.setRelative(5);
        scriptNode2.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = astRoot26.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = astRoot24.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = astRoot24.spliterator();
        com.google.javascript.rhino.head.Node node35 = astRoot24.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        scope36.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        scriptNode38.clearParentScope();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode2, node35, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int44 = scriptNode38.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope45 = scriptNode38.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        scope46.addChild((com.google.javascript.rhino.head.ast.AstNode) scope47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode51.toSource(0);
        scriptNode51.setEncodedSourceBounds(12, 10);
        scriptNode49.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str60 = astRoot59.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode62 = astRoot61.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot59, (com.google.javascript.rhino.head.Node) astRoot61, (com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray67 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList68, symbolArray67);
        scriptNode63.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode63.getSymbols();
        com.google.javascript.rhino.head.Node node72 = scriptNode63.getFirstChild();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        com.google.javascript.rhino.head.Node node74 = scriptNode63.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int77 = astRoot76.getType();
        com.google.javascript.rhino.head.Node node78 = astRoot76.getFirstChild();
        astRoot76.putIntProp((int) (short) 100, 953557037);
        int int82 = astRoot76.getEndLineno();
        int int83 = astRoot76.getLineno();
        int int86 = astRoot76.getIntProp((-236001159), 0);
        java.lang.String str87 = astRoot76.toSource();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scope45, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) astRoot76, 1246810839);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(astNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{\n}\n" + "'", str53, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "$0" + "'", str60, "$0");
        org.junit.Assert.assertNull(astNode62);
        org.junit.Assert.assertNotNull(symbolArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 136 + "'", int77 == 136);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        astRoot0.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.Scope scope6 = astRoot0.getParentScope();
        astRoot0.removeChildren();
        astRoot0.removeProp(381115453);
        com.google.javascript.rhino.head.Node node10 = astRoot0.getLastChild();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isGenerateDebugInfo();
        compilerEnvirons6.setIdeMode(false);
        compilerEnvirons6.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        boolean boolean23 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter24);
        compilerEnvirons0.setErrorReporter(errorReporter24);
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean28 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        compilerEnvirons29.setGeneratingSource(true);
        compilerEnvirons29.setXmlAvailable(false);
        int int36 = compilerEnvirons29.getOptimizationLevel();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons29.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter37);
        compilerEnvirons0.setIdeMode(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(errorReporter37);
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-1276937147), 604883227);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node4 = scriptNode0.getLastChild();
        int int5 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.lang.Object obj8 = astRoot6.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray9 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet10 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet10, commentArray9);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet10);
        astRoot6.removeProp((int) (short) 0);
        int int15 = astRoot6.getAbsolutePosition();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet17 = null;
        astRoot6.setComments(commentSet17);
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot6.getParent();
        astRoot6.setSourceName("                          ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        astRoot25.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        int int36 = scriptNode33.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node37 = scriptNode33.getLastChild();
        int int38 = scriptNode33.getEndLineno();
        astRoot25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = astRoot25.getSymbolTable();
        boolean boolean41 = astRoot25.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = astRoot42.getAstRoot();
        java.lang.String str44 = astRoot43.shortName();
        java.lang.String str46 = astRoot43.toSource(1);
        java.lang.String str47 = astRoot43.getSourceName();
        astRoot25.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray51 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList52, symbolArray51);
        astRoot49.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList52);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        astRoot49.addChildScope(scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str63 = scriptNode60.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode60, (com.google.javascript.rhino.head.Node) scope66, 25);
        java.lang.Object obj70 = scriptNode60.getProp(0);
        scope56.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode60);
        astRoot25.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode60);
        com.google.javascript.rhino.head.ast.Comment comment73 = null;
        scriptNode60.setJsDocNode(comment73);
        java.lang.String str75 = astRoot6.toStringTree(scriptNode60);
        java.lang.String str76 = astRoot6.debugPrint();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(commentArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(astRoot43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AstRoot" + "'", str44, "AstRoot");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(symbolArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str76, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean2 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setRecordingComments(true);
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(strSet7);
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        astRoot2.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = astRoot2.getSymbolTable();
        java.lang.String str8 = astRoot2.makeIndent(32);
        com.google.javascript.rhino.head.ast.Scope scope10 = astRoot2.getDefiningScope("136");
        astRoot2.putIntProp((int) '4', 0);
        int int14 = astRoot2.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getNextTempName();
        com.google.javascript.rhino.head.Node node17 = scriptNode15.target;
        int int18 = scriptNode15.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node19 = scriptNode15.getLastChild();
        int int20 = scriptNode15.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getEndLineno();
        java.lang.Object obj23 = astRoot21.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray24 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet25, commentArray24);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet25);
        astRoot21.removeProp((int) (short) 0);
        int int30 = astRoot21.getAbsolutePosition();
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol36 = astRoot32.getSymbol("java.io.IOException: ");
        astRoot32.setSourceName("java.io.IOException: ");
        java.lang.String str40 = astRoot32.toSource(9);
        com.google.javascript.rhino.head.Node node41 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        node43.putProp(0, (java.lang.Object) scriptNode48);
        com.google.javascript.rhino.head.Node node52 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope54.addChild((com.google.javascript.rhino.head.ast.AstNode) scope55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        node52.putProp(0, (java.lang.Object) scriptNode57);
        int int60 = scriptNode57.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode57.getSymbols();
        scriptNode48.setSymbols(symbolList61);
        astRoot32.setSymbols(symbolList61);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode15, (com.google.javascript.rhino.head.ast.Scope) astRoot32);
        int int67 = scriptNode15.getIntProp((-646030097), 0);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor68 = scriptNode15.iterator();
        java.lang.Object obj70 = scriptNode15.getProp((-256676265));
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((-289553421), (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode15);
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                                " + "'", str8, "                                                                ");
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(commentArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(symbol36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(nodeItor68);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode6.toSource(0);
        scriptNode6.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator12 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        int int22 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode16, (com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        java.lang.String str29 = astRoot23.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = astRoot23.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = astRoot34.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode36);
        int int40 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot23, (com.google.javascript.rhino.head.ast.AstNode) astRoot32);
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        scope2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str51 = scriptNode48.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scope54, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = astRoot57.getAstRoot();
        java.lang.String str59 = astRoot58.shortName();
        java.lang.String str60 = astRoot58.getSourceName();
        astRoot58.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = astRoot58.getSymbolTable();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) astRoot58);
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) scope54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str67 = scriptNode66.getNextTempName();
        com.google.javascript.rhino.head.Node node68 = scriptNode66.target;
        int int69 = scriptNode66.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node70 = scriptNode66.getLastChild();
        scriptNode66.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap73 = null;
        scriptNode66.setSymbolTable(strMap73);
        int int75 = scriptNode66.getEndLineno();
        com.google.javascript.rhino.head.Node node78 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode66, node78, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int82 = astRoot81.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray83 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList84, symbolArray83);
        astRoot81.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList84);
        com.google.javascript.rhino.head.ast.Scope scope87 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope88 = new com.google.javascript.rhino.head.ast.Scope();
        scope87.addChild((com.google.javascript.rhino.head.ast.AstNode) scope88);
        astRoot81.addChildScope(scope88);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList91 = astRoot81.getStatements();
        scriptNode66.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot81);
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node((-846380080), (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.lang.String str94 = node93.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNotNull(astRoot58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AstRoot" + "'", str59, "AstRoot");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(symbolArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(astNodeList91);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-846380080" + "'", str94, "-846380080");
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        java.lang.String[] strArray18 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet19);
        boolean boolean22 = compilerEnvirons6.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6);
        compilerEnvirons6.setAllowSharpComments(true);
        compilerEnvirons6.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setWarnTrailingComma(true);
        boolean boolean31 = compilerEnvirons28.isRecordingLocalJsDocComments();
        compilerEnvirons28.setWarnTrailingComma(false);
        compilerEnvirons28.setAllowSharpComments(false);
        boolean boolean36 = compilerEnvirons28.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons37.setWarnTrailingComma(true);
        java.lang.String[] strArray49 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        compilerEnvirons37.setActivationNames((java.util.Set<java.lang.String>) strSet50);
        compilerEnvirons28.setActivationNames((java.util.Set<java.lang.String>) strSet50);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet50);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons55 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons55.setWarnTrailingComma(true);
        java.lang.String[] strArray67 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        compilerEnvirons55.setActivationNames((java.util.Set<java.lang.String>) strSet68);
        compilerEnvirons55.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons73 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons73.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter76 = compilerEnvirons73.getErrorReporter();
        boolean boolean77 = compilerEnvirons73.isGenerateObserverCount();
        compilerEnvirons73.setRecordingComments(true);
        boolean boolean80 = compilerEnvirons73.isGenerateObserverCount();
        boolean boolean81 = compilerEnvirons73.isGenerateDebugInfo();
        compilerEnvirons73.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons84 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons84.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter87 = compilerEnvirons84.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory88 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons73, errorReporter87);
        com.google.javascript.rhino.head.Parser parser89 = new com.google.javascript.rhino.head.Parser(compilerEnvirons55, errorReporter87);
        com.google.javascript.rhino.head.Parser parser90 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter87);
        compilerEnvirons0.setErrorReporter(errorReporter87);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(errorReporter76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(errorReporter87);
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        compilerEnvirons22.setRecoverFromErrors(false);
        compilerEnvirons22.setGenerateDebugInfo(false);
        compilerEnvirons22.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setWarnTrailingComma(true);
        boolean boolean34 = compilerEnvirons31.isRecordingLocalJsDocComments();
        compilerEnvirons31.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons31.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException43 = errorReporter37.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException49 = errorReporter37.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException55 = errorReporter37.runtimeError("java.io.IOException: java.io.IOException: ", "{\n}\n", 520361644, "java.io.IOException: java.io.IOException", (int) (short) 10);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException61 = errorReporter37.runtimeError("java.io.IOException: java.io.IOException: hi!", "-1\t  BLOCK 0 1\n", (int) (byte) 0, "                  ", 6);
        compilerEnvirons22.setErrorReporter(errorReporter37);
        errorReporter37.warning("java.io.IOException: hi!", "java.io.IOException: java.io.IOException: ", (-1610320791), "                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n", 11);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException74 = errorReporter37.runtimeError("java.io.IOException:   {\n  }\n", "                                            ", 0, "java.io.IOException: !", 1330917185);
        com.google.javascript.rhino.head.IRFactory iRFactory75 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter37);
        boolean boolean76 = compilerEnvirons0.recoverFromErrors();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(evaluatorException43);
        org.junit.Assert.assertNotNull(evaluatorException49);
        org.junit.Assert.assertNotNull(evaluatorException55);
        org.junit.Assert.assertNotNull(evaluatorException61);
        org.junit.Assert.assertNotNull(evaluatorException74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = scriptNode26.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str33 = astRoot31.getSourceName();
        astRoot31.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot31.getSymbolTable();
        java.lang.String str37 = astRoot31.makeIndent(32);
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) astRoot31);
        astRoot1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode45 = astRoot44.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) scriptNode46);
        int int50 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot42, scope51);
        java.lang.String str54 = astRoot42.getEncodedSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons55 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons55.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter58 = compilerEnvirons55.getErrorReporter();
        boolean boolean59 = compilerEnvirons55.isGenerateObserverCount();
        boolean boolean60 = compilerEnvirons55.recoverFromErrors();
        java.util.Set<java.lang.String> strSet61 = compilerEnvirons55.getActivationNames();
        compilerEnvirons55.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.IRFactory iRFactory64 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons55);
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str67 = astRoot66.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = iRFactory64.transformTree(astRoot66);
        astRoot42.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot42);
        astRoot42.setSourceName("0\tSCRIPT 0 2\n0\t  EXPR_RESULT 0 2\n0\t    NAME 0 2 $0\n");
        com.google.javascript.rhino.head.ast.Scope scope73 = astRoot42.getEnclosingScope();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                " + "'", str37, "                                                                ");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(astNode45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(errorReporter58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(strSet61);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str67, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertNull(scope73);
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        node1.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        int int18 = positionComparator8.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode12, (com.google.javascript.rhino.head.ast.AstNode) scope15);
        scriptNode5.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        scriptNode5.setEncodedSourceBounds(0, 0);
        scriptNode5.putIntProp(852409088, (int) (short) 10);
        com.google.javascript.rhino.head.Node node28 = com.google.javascript.rhino.head.Node.newString("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        node28.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator35 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        java.lang.String str38 = astRoot36.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode39.getSymbols();
        java.lang.String str41 = astRoot36.toStringTree(scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        int int45 = positionComparator35.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode39, (com.google.javascript.rhino.head.ast.AstNode) scope42);
        scriptNode32.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons47 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons47.setWarnTrailingComma(true);
        boolean boolean50 = compilerEnvirons47.isRecordingLocalJsDocComments();
        compilerEnvirons47.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons47.getErrorReporter();
        compilerEnvirons47.setGeneratingSource(true);
        compilerEnvirons47.setRecoverFromErrors(false);
        scriptNode39.setCompilerData((java.lang.Object) false);
        scriptNode39.removeChildren();
        scriptNode5.putProp((-1282335040), (java.lang.Object) scriptNode39);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "136" + "'", str38, "136");
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot12.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot12.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope31 = astRoot30.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope33 = astRoot30.getDefiningScope("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        java.lang.String str35 = astRoot30.toSource((-682257883));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        java.io.IOException iOException1 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException16 = errorReporter10.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) evaluatorException16);
        iOException1.addSuppressed((java.lang.Throwable) evaluatorException16);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) evaluatorException16);
        java.lang.String str20 = evaluatorException16.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertNotNull(evaluatorException16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)" + "'", str20, "com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean12 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray19 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList20, symbolArray19);
        astRoot17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = astRoot26.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = astRoot24.getParamCount();
        java.lang.String str33 = astRoot24.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray37 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList38, symbolArray37);
        astRoot35.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        astRoot35.addChildScope(scope42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getEndLineno();
        java.lang.Object obj50 = astRoot48.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray51 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet52, commentArray51);
        astRoot48.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet52);
        astRoot48.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.Node node58 = scriptNode56.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode56.getFunctions();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int61 = astRoot46.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) astRoot46);
        astRoot46.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot69.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getNextTempName();
        com.google.javascript.rhino.head.Node node79 = scriptNode77.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList80 = scriptNode77.getFunctions();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot67, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) scriptNode77);
        astRoot46.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot69);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot69);
        java.lang.Object obj85 = astRoot24.getProp(23);
        int int86 = astRoot24.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList87 = astRoot24.getChildScopes();
        java.lang.String str88 = astRoot24.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode89 = iRFactory15.transformTree(astRoot24);
        com.google.javascript.rhino.head.ast.Scope scope90 = astRoot24.getParentScope();
        int int91 = astRoot24.getRegexpCount();
        boolean boolean92 = astRoot24.hasConsistentReturnUsage();
        java.lang.String str93 = astRoot24.getSourceName();
        java.lang.String str94 = astRoot24.debugPrint();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(astNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str33, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(symbolArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(commentArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNotNull(functionNodeList80);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNull(scopeList87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str88, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode89);
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str94, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean16 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.ast.Comment comment17 = null;
        astRoot3.setJsDocNode(comment17);
        java.lang.String str19 = astRoot3.getEncodedSource();
        astRoot3.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor22 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.visitAll(nodeVisitor22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        astRoot6.removeChildren();
        java.lang.String str18 = astRoot6.toSource(10);
        int int19 = astRoot6.getParamCount();
        int int20 = astRoot6.getEncodedSourceStart();
        astRoot6.setRelative(966287688);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        astRoot0.setEncodedSourceBounds((int) 'a', (int) (short) 1);
        int int15 = astRoot0.getLineno();
        java.lang.String str17 = astRoot0.toSource(7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot0.getFunctions();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot0.getParent();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertNull(astNode19);
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        astRoot53.addChildScope(scope55);
        java.lang.String str59 = astRoot53.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        java.lang.String str62 = astRoot60.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode63.getSymbols();
        java.lang.String str65 = astRoot60.toStringTree(scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope67.setTop(scriptNode69);
        java.lang.String str72 = scope67.toSource(12);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope67);
        astRoot50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray77 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList78, symbolArray77);
        astRoot75.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList78);
        astRoot75.clearParentScope();
        astRoot50.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = astRoot84.getAstRoot();
        java.lang.String str86 = astRoot85.shortName();
        java.lang.String str87 = astRoot85.getSourceName();
        int int88 = astRoot85.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) astRoot85);
        astRoot75.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot85);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node91 = astRoot75.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-915883026) + "'", int51 == (-915883026));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                        {\n                        }\n" + "'", str72, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(symbolArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(astRoot85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "AstRoot" + "'", str86, "AstRoot");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        int int3 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = scope2.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scope7.spliterator();
        astRoot5.addChildScope(scope7);
        java.lang.String str11 = astRoot5.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment12 = null;
        astRoot5.setJsDocNode(comment12);
        int int14 = astRoot5.getType();
        java.lang.String str15 = astRoot5.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = null;
        astRoot5.setSymbolTable(strMap16);
        astRoot5.clearParentScope();
        scope2.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = astRoot5.addFunction(functionNode20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 129 + "'", int3 == 129);
        org.junit.Assert.assertNull(scriptNode4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 136 + "'", int14 == 136);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor17 = null;
        astRoot4.visitComments(nodeVisitor17);
        astRoot4.clearParentScope();
        int int20 = astRoot4.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        scriptNode24.setSourceName("java.io.IOException:                         {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstNode astNode29 = scriptNode24.getParent();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-1364659253), (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int31 = scriptNode24.getLength();
        com.google.javascript.rhino.head.Node node32 = scriptNode24.getLastSibling();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node32);
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        java.io.IOException iOException1 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("hi!", (java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray12 = iOException9.getSuppressed();
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException("", (java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("8\tSCRIPT 8 1\n", (java.lang.Throwable) iOException16);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException27 = errorReporter21.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) evaluatorException27);
        iOException16.addSuppressed((java.lang.Throwable) iOException28);
        iOException9.addSuppressed((java.lang.Throwable) iOException28);
        iOException1.addSuppressed((java.lang.Throwable) iOException9);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter35 = compilerEnvirons32.getErrorReporter();
        boolean boolean36 = compilerEnvirons32.isGenerateObserverCount();
        boolean boolean37 = compilerEnvirons32.recoverFromErrors();
        java.util.Set<java.lang.String> strSet38 = compilerEnvirons32.getActivationNames();
        boolean boolean39 = compilerEnvirons32.reportWarningAsError();
        compilerEnvirons32.setWarnTrailingComma(false);
        boolean boolean42 = compilerEnvirons32.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory43 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons44.setStrictMode(true);
        int int47 = compilerEnvirons44.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons51 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons51.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter54 = compilerEnvirons51.getErrorReporter();
        compilerEnvirons48.setErrorReporter(errorReporter54);
        compilerEnvirons44.setErrorReporter(errorReporter54);
        com.google.javascript.rhino.head.Parser parser57 = new com.google.javascript.rhino.head.Parser(compilerEnvirons32, errorReporter54);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException63 = errorReporter54.runtimeError("775058292", "                          ", 15, "", 5);
        iOException1.addSuppressed((java.lang.Throwable) evaluatorException63);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(errorReporter21);
        org.junit.Assert.assertNotNull(evaluatorException27);
        org.junit.Assert.assertNotNull(errorReporter35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(errorReporter54);
        org.junit.Assert.assertNotNull(evaluatorException63);
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        int int5 = astRoot0.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList6 = astRoot0.getStatements();
        astRoot0.setBaseLineno(375917932);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(astNodeList6);
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode1.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, (com.google.javascript.rhino.head.ast.Scope) scriptNode1);
        java.lang.String str15 = scriptNode1.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode1.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = scope16.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = astRoot17.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(scope16);
        org.junit.Assert.assertNull(astRoot17);
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        scope11.setBounds((int) (byte) 0, (-738182430));
        int int18 = scope11.getType();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = scope20.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        scope20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode23, node24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        java.lang.String str31 = node24.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot29);
        java.lang.String str32 = astRoot29.getNextTempName();
        boolean boolean33 = astRoot29.hasSideEffects();
        java.lang.String str35 = astRoot29.toSource(100);
        int int36 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.Node node42 = scope40.getFirstChild();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope40);
        scope40.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode46 = scope40.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getEndLineno();
        java.lang.Object obj49 = astRoot47.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol51 = astRoot47.getSymbol("java.io.IOException: ");
        astRoot47.setEncodedSourceStart(0);
        java.lang.String str55 = astRoot47.toSource(14);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode46, (com.google.javascript.rhino.head.Node) astRoot47);
        astRoot29.target = astRoot47;
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str60 = astRoot59.debugPrint();
        astRoot59.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment63 = null;
        astRoot59.setJsDocNode(comment63);
        java.lang.String str65 = astRoot59.getSourceName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor66 = null;
        astRoot59.visitComments(nodeVisitor66);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet68 = astRoot59.getComments();
        astRoot47.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot59);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = astRoot59.getEnclosingFunction();
        int int71 = astRoot59.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        scope72.addChild((com.google.javascript.rhino.head.ast.AstNode) scope73);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = scope73.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node77 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node78 = node77.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope();
        node77.addChildToFront((com.google.javascript.rhino.head.Node) scope79);
        scope73.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode76, node77);
        scriptNode76.flattenSymbolTable(false);
        int int84 = scriptNode76.getType();
        java.lang.String str85 = scriptNode76.toString();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = scriptNode76.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            scope11.replaceChild((com.google.javascript.rhino.head.Node) astRoot59, (com.google.javascript.rhino.head.Node) scriptNode76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 129 + "'", int18 == 129);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(astNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(symbol51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str60, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(commentSet68);
        org.junit.Assert.assertNull(functionNode70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 136 + "'", int84 == 136);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "136" + "'", str85, "136");
        org.junit.Assert.assertNull(strMap86);
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot21.getAstRoot();
        int int36 = astRoot21.getLength();
        boolean boolean37 = astRoot21.hasSideEffects();
        int int38 = astRoot21.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        int int43 = scriptNode40.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node44 = scriptNode40.getLastChild();
        scriptNode40.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap47 = null;
        scriptNode40.setSymbolTable(strMap47);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getEndLineno();
        java.lang.Object obj51 = astRoot49.getCompilerData();
        astRoot49.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) astRoot49);
        java.lang.String str56 = astRoot49.toSource(365074104);
        astRoot21.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot49);
        com.google.javascript.rhino.head.ast.AstNode astNode58 = astRoot21.getParent();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(astNode58);
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj4 = node2.getProp((-52));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        int int7 = scriptNode5.depth();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.lang.String str43 = scope38.toSource(12);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot46, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot46.getComments();
        node44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.Node node52 = astRoot46.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node57 = node56.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        node56.addChildToFront((com.google.javascript.rhino.head.Node) scope58);
        int int60 = scope58.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol62 = scope58.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int65 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scope58, (com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        node52.addChildToFront((com.google.javascript.rhino.head.Node) astRoot64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(22, node2, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot12);
        int int78 = scriptNode5.getFunctionCount();
        scriptNode5.setBaseLineno(558597394);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = null;
        java.lang.String str82 = scriptNode5.toStringTree(scriptNode81);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                        {\n                        }\n" + "'", str43, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(commentSet50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(symbol62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-12) + "'", int65 == (-12));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        astRoot1.checkParentLinks();
        java.lang.String str8 = astRoot1.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = astRoot1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        astRoot0.checkParentLinks();
        astRoot0.setEndLineno((int) (short) 10);
        java.lang.String str10 = astRoot0.shortName();
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("-3\tSCRIPT -3 1\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getEndLineno();
        java.lang.Object obj28 = astRoot26.getCompilerData();
        astRoot26.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor31 = astRoot26.iterator();
        astRoot26.clearParentScope();
        java.lang.String str33 = astRoot26.getEncodedSource();
        int int34 = astRoot26.getEncodedSourceStart();
        node12.addChildAfter(node25, (com.google.javascript.rhino.head.Node) astRoot26);
        astRoot0.target = node12;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump37 = astRoot0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AstRoot" + "'", str10, "AstRoot");
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(nodeItor31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        astRoot1.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray13 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet14, commentArray13);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot1.target = astRoot8;
        int int19 = astRoot1.getParamCount();
        java.lang.String str20 = astRoot1.shortName();
        java.lang.Object obj22 = astRoot1.getProp((int) (byte) 10);
        java.lang.Object obj24 = astRoot1.getProp((-1593445669));
        int int25 = astRoot1.getLength();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(1458565584, (com.google.javascript.rhino.head.Node) astRoot1, 651202471);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(commentArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AstRoot" + "'", str20, "AstRoot");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons4.getErrorReporter();
        boolean boolean8 = compilerEnvirons4.isGenerateObserverCount();
        compilerEnvirons4.setRecordingComments(true);
        boolean boolean11 = compilerEnvirons4.isGenerateObserverCount();
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter18);
        boolean boolean20 = compilerEnvirons4.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons4.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        boolean boolean25 = compilerEnvirons22.isGeneratingSource();
        compilerEnvirons22.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter33.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter33.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter33);
        compilerEnvirons4.setErrorReporter(errorReporter33);
        com.google.javascript.rhino.head.Parser parser48 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter33);
        java.util.Set<java.lang.String> strSet49 = compilerEnvirons0.getActivationNames();
        boolean boolean50 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons0.getErrorReporter();
        int int52 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean53 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean54 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser56 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(errorReporter21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node4 = scriptNode0.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode0.getSymbols();
        scriptNode0.setBaseLineno(19);
        boolean boolean8 = scriptNode0.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = astRoot0.iterator();
        astRoot0.setInStrictMode(false);
        boolean boolean8 = astRoot0.isInStrictMode();
        java.lang.String str9 = astRoot0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = astRoot0.iterator();
        com.google.javascript.rhino.head.Node node12 = astRoot0.setType((-1435086895));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertNotNull(node12);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean15 = compilerEnvirons12.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter16);
        boolean boolean18 = compilerEnvirons9.recoverFromErrors();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        com.google.javascript.rhino.head.Node node23 = scriptNode21.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode21.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol29 = astRoot25.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node30 = null;
        astRoot25.target = node30;
        java.lang.String str32 = scriptNode21.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot25);
        astRoot25.setLineno(703513808);
        astRoot25.setPosition(0);
        astRoot25.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node39 = iRFactory20.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot25);
        astRoot25.removeChildren();
        com.google.javascript.rhino.head.Node node41 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot25.setFinally(node41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(symbol29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(node39);
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        int int6 = astRoot1.getFunctionCount();
        astRoot1.setInStrictMode(false);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = null;
        astRoot1.setComments(commentSet9);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet14 = compilerEnvirons11.getActivationNames();
        boolean boolean15 = compilerEnvirons11.recoverFromErrors();
        boolean boolean16 = compilerEnvirons11.getWarnTrailingComma();
        boolean boolean17 = compilerEnvirons11.isIdeMode();
        boolean boolean18 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setWarnTrailingComma(true);
        boolean boolean25 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons19, errorReporter26);
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons11, errorReporter26);
        boolean boolean29 = compilerEnvirons11.isStrictMode();
        compilerEnvirons11.setStrictMode(false);
        compilerEnvirons11.setLanguageVersion((int) (byte) 100);
        astRoot1.setCompilerData((java.lang.Object) (byte) 100);
        astRoot1.checkParentLinks();
        astRoot1.setEndLineno(961994495);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot13.getAstRoot();
        java.lang.String str15 = astRoot14.shortName();
        java.lang.String str17 = astRoot14.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot14.getFunctions();
        astRoot14.checkParentLinks();
        boolean boolean20 = astRoot14.hasConsistentReturnUsage();
        int int21 = astRoot14.getRegexpCount();
        scriptNode3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot14);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList23 = scriptNode3.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        java.lang.String str26 = scriptNode24.debugPrint();
        scriptNode24.setLineno((int) (byte) -1);
        int int29 = scriptNode24.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode24.getChildScopes();
        int int31 = scriptNode24.getEndLineno();
        scriptNode24.setEncodedSourceEnd((-443001414));
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("", (java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        scriptNode24.setCompilerData((java.lang.Object) iOException38);
        scriptNode3.setCompilerData((java.lang.Object) iOException38);
        java.lang.String str42 = iOException38.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AstRoot" + "'", str15, "AstRoot");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(astNodeList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "java.io.IOException: " + "'", str42, "java.io.IOException: ");
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        astRoot1.removeProp(520361644);
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = parser9.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.lang.String str31 = astRoot25.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        java.lang.String str34 = astRoot32.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        java.lang.String str37 = astRoot32.toStringTree(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope39.setTop(scriptNode41);
        java.lang.String str44 = scope39.toSource(12);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot47, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = astRoot47.getComments();
        node45.addChildToBack((com.google.javascript.rhino.head.Node) astRoot47);
        com.google.javascript.rhino.head.Node node53 = astRoot47.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator54.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator55);
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        int int61 = scope59.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol63 = scope59.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int66 = positionComparator55.compare((com.google.javascript.rhino.head.ast.AstNode) scope59, (com.google.javascript.rhino.head.ast.AstNode) astRoot65);
        node53.addChildToFront((com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int69 = astRoot68.getEndLineno();
        java.lang.Object obj70 = astRoot68.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray71 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet72 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet72, commentArray71);
        astRoot68.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet72);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode82 = astRoot81.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode83.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot79, (com.google.javascript.rhino.head.Node) astRoot81, (com.google.javascript.rhino.head.Node) scriptNode83);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList87 = scriptNode83.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList88 = scriptNode83.getFunctions();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.ast.Comment comment90 = null;
        astRoot1.setJsDocNode(comment90);
        int int92 = astRoot1.getRegexpCount();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "136" + "'", str34, "136");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                        {\n                        }\n" + "'", str44, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertNull(commentSet51);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(symbol63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-12) + "'", int66 == (-12));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(commentArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNull(astNode82);
        org.junit.Assert.assertNull(scopeList87);
        org.junit.Assert.assertNotNull(functionNodeList88);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int16 = astRoot4.getIntProp((-443001414), 21);
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 21 + "'", int16 == 21);
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        astRoot1.setEndLineno((int) (byte) 100);
        astRoot1.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node8 = astRoot1.setType(65536);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        scope9.putIntProp(100, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot((int) 'a');
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((-78159348), (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) astRoot16, 520361644);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scope9.getChildScopes();
        int int20 = scope9.getLength();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode11.getParentScope();
        int int17 = scriptNode11.getPosition();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.getWarnTrailingComma();
        compilerEnvirons18.setGeneratingSource(true);
        compilerEnvirons18.setIdeMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory26 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        java.lang.String str29 = astRoot27.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode30.getSymbols();
        java.lang.String str32 = astRoot27.toStringTree(scriptNode30);
        astRoot27.checkParentLinks();
        int int34 = astRoot27.depth();
        com.google.javascript.rhino.head.Node node35 = iRFactory26.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        scriptNode11.addChildrenToBack(node35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 0);
        scriptNode11.setTop(scriptNode38);
        scriptNode38.setPosition(1635381144);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertNotNull(symbolList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(node35);
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        int int19 = astRoot1.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        int int6 = astRoot1.getFunctionCount();
        astRoot1.setInStrictMode(false);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = null;
        astRoot1.setComments(commentSet9);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet14 = compilerEnvirons11.getActivationNames();
        boolean boolean15 = compilerEnvirons11.recoverFromErrors();
        boolean boolean16 = compilerEnvirons11.getWarnTrailingComma();
        boolean boolean17 = compilerEnvirons11.isIdeMode();
        boolean boolean18 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setWarnTrailingComma(true);
        boolean boolean25 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons19, errorReporter26);
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons11, errorReporter26);
        boolean boolean29 = compilerEnvirons11.isStrictMode();
        compilerEnvirons11.setStrictMode(false);
        compilerEnvirons11.setLanguageVersion((int) (byte) 100);
        astRoot1.setCompilerData((java.lang.Object) (byte) 100);
        astRoot1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode44);
        astRoot42.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node50 = astRoot42.getNext();
        scriptNode37.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot42);
        int int52 = scriptNode37.getPosition();
        int int53 = scriptNode37.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol55 = scriptNode37.getSymbol("                        {\n                        }\n");
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 136 + "'", int53 == 136);
        org.junit.Assert.assertNull(symbol55);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        boolean boolean4 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope6.setTop(scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        scriptNode8.setCompilerData((java.lang.Object) scope11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = scope15.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node19 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node20 = node19.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        node19.addChildToFront((com.google.javascript.rhino.head.Node) scope21);
        scope15.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode18, node19);
        scriptNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope1, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode18);
        scriptNode18.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot31.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int44 = astRoot31.getRegexpCount();
        com.google.javascript.rhino.head.Node node45 = astRoot31.getNext();
        astRoot31.setBaseLineno(10);
        astRoot31.setEncodedSourceBounds(136, 3);
        scriptNode18.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot31);
        java.lang.String str52 = scriptNode18.getNextTempName();
        scriptNode18.removeChildren();
        int int54 = scriptNode18.depth();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(852076584);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        java.lang.String str4 = scriptNode2.debugPrint();
        scriptNode2.setLineno((int) (byte) -1);
        int int7 = scriptNode2.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode2.getChildScopes();
        int int9 = scriptNode2.getEndLineno();
        node1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(1073546721, (-211756926));
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        java.lang.Object obj18 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = scope20.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        scope20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode23, node24);
        scriptNode23.flattenSymbolTable(false);
        int int31 = scriptNode23.getType();
        java.lang.String str32 = scriptNode23.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        astRoot33.addChildScope(scope35);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = astRoot33.getChildScopes();
        scriptNode23.setCompilerData((java.lang.Object) scopeList38);
        int int40 = scriptNode23.getPosition();
        java.lang.String[] strArray41 = scriptNode23.getParamAndVarNames();
        astRoot12.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        scriptNode23.setPosition((-882907488));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertNotNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        scriptNode0.setLineno((int) (byte) -1);
        int int5 = scriptNode0.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode0.getChildScopes();
        int int7 = scriptNode0.getEndLineno();
        scriptNode0.setEncodedSourceEnd((-443001414));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = scriptNode0.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = functionNode10.debugPrint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(functionNode10);
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        scriptNode5.setSourceName("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope14 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor15 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.visit(nodeVisitor15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNotNull(scope14);
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-263596818));
        boolean boolean2 = node1.hasSideEffects();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-484812922));
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode2 = astRoot1.getParent();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scope5);
        com.google.javascript.rhino.head.Node node7 = scope5.getFirstChild();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope5);
        astRoot1.target = node8;
        boolean boolean10 = node8.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray14 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList15, symbolArray14);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        astRoot12.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode33.getFunctions();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int38 = astRoot23.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot23);
        node8.addChildToBack((com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(11, node8, 88171227);
        node8.setLineno(488584366);
        org.junit.Assert.assertNull(astNode2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(symbolArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        node1.putProp(0, (java.lang.Object) scriptNode6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode6.new NodeIterator();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getFirstChild();
        com.google.javascript.rhino.head.ast.Comment comment11 = null;
        scriptNode6.setJsDocNode(comment11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = scriptNode6.getEnclosingFunction();
        int int14 = scriptNode6.getLineno();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(functionNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setIdeMode(true);
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        boolean boolean11 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean10 = compilerEnvirons0.recoverFromErrors();
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setGeneratingSource(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        astRoot0.setLength(23890841);
        java.lang.String str13 = astRoot0.debugPrint();
        java.lang.String str15 = astRoot0.toSource((-1710880241));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 23890841\n" + "'", str13, "-1\tSCRIPT -1 23890841\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot12.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot12.getAstRoot();
        java.lang.String str31 = astRoot12.debugPrint();
        java.lang.String str32 = astRoot12.getSourceName();
        astRoot12.setPosition(414966044);
        com.google.javascript.rhino.head.ast.Scope scope35 = astRoot12.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str31, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(scope35);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        boolean boolean14 = compilerEnvirons10.isRecordingComments();
        boolean boolean15 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        errorReporter16.warning("                                                  ", "2\tBLOCK 2 -1\n", 653625563, "java.io.IOException", 1159083728);
        com.google.javascript.rhino.head.IRFactory iRFactory23 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        boolean boolean24 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean8 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        boolean boolean52 = astRoot51.hasSideEffects();
        astRoot15.addChildToBack((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int59 = astRoot58.getEndLineno();
        java.lang.Object obj60 = astRoot58.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray61 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet62 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet62, commentArray61);
        astRoot58.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet62);
        com.google.javascript.rhino.head.Node node65 = astRoot58.getLastSibling();
        int int66 = node65.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        java.lang.String str69 = astRoot67.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode70.getSymbols();
        java.lang.String str72 = astRoot67.toStringTree(scriptNode70);
        java.lang.String str74 = astRoot67.toSource(0);
        java.lang.String str76 = astRoot67.toSource(25);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope57, node65, (com.google.javascript.rhino.head.Node) astRoot67);
        com.google.javascript.rhino.head.ast.Scope scope78 = astRoot67.getEnclosingScope();
        astRoot51.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot67);
        java.lang.Object obj81 = astRoot67.getProp((-2110645446));
        boolean boolean82 = astRoot67.hasSideEffects();
        com.google.javascript.rhino.head.ast.Comment comment83 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot67.addComment(comment83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(commentArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 136 + "'", int66 == 136);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "136" + "'", str69, "136");
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(scope78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode6.toSource(0);
        scriptNode6.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator12 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        int int22 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode16, (com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        java.lang.String str29 = astRoot23.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = astRoot23.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = astRoot34.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode36);
        int int40 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot23, (com.google.javascript.rhino.head.ast.AstNode) astRoot32);
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        scope2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        scope46.addChild((com.google.javascript.rhino.head.ast.AstNode) scope47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope47.setTop(scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.addChild((com.google.javascript.rhino.head.ast.AstNode) scope52);
        scriptNode49.setCompilerData((java.lang.Object) scope52);
        scriptNode49.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getNextTempName();
        com.google.javascript.rhino.head.Node node59 = scriptNode57.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList60 = scriptNode57.getFunctions();
        int int61 = scriptNode57.getEncodedSourceEnd();
        scriptNode49.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        scriptNode49.setBaseLineno(6);
        scriptNode6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode49);
        java.lang.String str67 = scriptNode49.toSource((-475744774));
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(0, 1796887248);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str73 = scriptNode72.getNextTempName();
        java.lang.String str74 = scriptNode72.debugPrint();
        scriptNode72.setLineno((int) (byte) -1);
        int int77 = scriptNode72.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = scriptNode72.getChildScopes();
        int int79 = scriptNode72.getEndLineno();
        java.lang.Object obj80 = scriptNode72.getCompilerData();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(23, node71, (com.google.javascript.rhino.head.Node) scriptNode72);
        com.google.javascript.rhino.head.Node node83 = com.google.javascript.rhino.head.Node.newNumber((double) (-55137080));
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(1559149740, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) scriptNode72, node83, 968742650);
        int int86 = scriptNode72.getParamCount();
        int int87 = scriptNode72.depth();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(functionNodeList60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{\n{\n}\n}\n" + "'", str67, "{\n{\n}\n}\n");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str74, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(scopeList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                        {\n                        }\n");
        node1.removeProp(23);
        node1.removeProp(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.lang.Object obj8 = astRoot6.getCompilerData();
        astRoot6.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor11 = astRoot6.iterator();
        astRoot6.clearParentScope();
        node1.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot6);
        int int14 = astRoot6.depth();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator18 = scope16.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node20 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node21 = node20.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        node20.addChildToFront((com.google.javascript.rhino.head.Node) scope22);
        scope16.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode19, node20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getParamCount();
        java.lang.String str27 = node20.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot25);
        java.lang.String str28 = astRoot25.getNextTempName();
        boolean boolean29 = astRoot25.hasSideEffects();
        java.lang.String str31 = astRoot25.toSource(100);
        int int32 = astRoot25.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.Node node38 = scope36.getFirstChild();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope36);
        scope36.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode42 = scope36.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getEndLineno();
        java.lang.Object obj45 = astRoot43.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = astRoot43.getSymbol("java.io.IOException: ");
        astRoot43.setEncodedSourceStart(0);
        java.lang.String str51 = astRoot43.toSource(14);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode42, (com.google.javascript.rhino.head.Node) astRoot43);
        astRoot25.target = astRoot43;
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str56 = astRoot55.debugPrint();
        astRoot55.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment59 = null;
        astRoot55.setJsDocNode(comment59);
        java.lang.String str61 = astRoot55.getSourceName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor62 = null;
        astRoot55.visitComments(nodeVisitor62);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = astRoot55.getComments();
        astRoot43.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot55);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = astRoot55.getComments();
        int int67 = astRoot55.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            astRoot6.setLoop((com.google.javascript.rhino.head.ast.Jump) astRoot55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(nodeItor11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(astNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str56, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(commentSet64);
        org.junit.Assert.assertNull(commentSet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        scope7.setPosition(17);
        com.google.javascript.rhino.head.ast.Comment comment12 = scope7.getJsDocNode();
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("com.google.javascript.rhino.head.EvaluatorException: java.io.IOException:   {\n  }\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-25), node15);
        // The following exception was thrown during execution in test generation
        try {
            scope7.setFinally(node15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertNotNull(node15);
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        int int6 = astRoot1.getFunctionCount();
        int int7 = astRoot1.depth();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral8 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.addRegExp(regExpLiteral8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = astRoot15.getSymbols();
        int int43 = astRoot15.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope44 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        int int31 = astRoot13.getParamCount();
        java.lang.Object obj33 = astRoot13.getProp(6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray37 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList38, symbolArray37);
        astRoot35.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList38);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        astRoot35.addChildScope(scope42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getEndLineno();
        java.lang.Object obj50 = astRoot48.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray51 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet52, commentArray51);
        astRoot48.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet52);
        astRoot48.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.Node node58 = scriptNode56.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode56.getFunctions();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int61 = astRoot46.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) astRoot46);
        astRoot46.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot69.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getNextTempName();
        com.google.javascript.rhino.head.Node node79 = scriptNode77.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList80 = scriptNode77.getFunctions();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot67, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) scriptNode77);
        astRoot46.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot69);
        com.google.javascript.rhino.head.ast.Scope scope83 = astRoot46.getEnclosingScope();
        astRoot13.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot46);
        java.lang.Object obj85 = astRoot13.getCompilerData();
        java.lang.String str86 = astRoot13.debugPrint();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(symbolArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(commentArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNotNull(functionNodeList80);
        org.junit.Assert.assertNull(scope83);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str86, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser5 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean10 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope7, 25);
        java.lang.Object obj11 = scriptNode1.getProp(0);
        com.google.javascript.rhino.head.Node node12 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addChildToFront(node12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(541550340, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstNode astNode3 = scope2.getParent();
        java.lang.String str4 = scope2.debugPrint();
        com.google.javascript.rhino.head.Node node5 = scope2.getNext();
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "541550340\tBLOCK 541550340 100\n" + "'", str4, "541550340\tBLOCK 541550340 100\n");
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        astRoot1.checkParentLinks();
        int int10 = astRoot1.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getEndLineno();
        java.lang.Object obj14 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray15 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet16 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet16, commentArray15);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet16);
        com.google.javascript.rhino.head.Node node19 = astRoot12.getLastSibling();
        int int20 = node19.getType();
        astRoot1.putProp((int) ' ', (java.lang.Object) node19);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator23 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        java.lang.String str26 = astRoot24.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode27.getSymbols();
        java.lang.String str29 = astRoot24.toStringTree(scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        int int33 = positionComparator23.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode27, (com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        astRoot34.addChildScope(scope36);
        java.lang.String str40 = astRoot34.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = astRoot34.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = astRoot45.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode47);
        int int51 = positionComparator23.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot34, (com.google.javascript.rhino.head.ast.AstNode) astRoot43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.Node node56 = astRoot53.getFirstChild();
        astRoot43.putProp(2, (java.lang.Object) astRoot53);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        boolean boolean61 = scope58.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope58, scope62);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot69.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getNextTempName();
        com.google.javascript.rhino.head.Node node79 = scriptNode77.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList80 = scriptNode77.getFunctions();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot67, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) scriptNode77);
        astRoot67.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet85 = astRoot67.getComments();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scope62, (com.google.javascript.rhino.head.Node) astRoot67);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(100, node19, node86);
        node87.removeChildren();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(commentArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "136" + "'", str26, "136");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNotNull(functionNodeList80);
        org.junit.Assert.assertNull(commentSet85);
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        astRoot4.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        int int15 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node16 = scriptNode12.getLastChild();
        int int17 = scriptNode12.getEndLineno();
        astRoot4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.lang.String str19 = scriptNode12.getSourceName();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode12, 6);
        com.google.javascript.rhino.head.Node node22 = node21.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = node22.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node22);
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean2 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str6 = astRoot5.debugPrint();
        astRoot5.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment9 = null;
        astRoot5.setJsDocNode(comment9);
        java.lang.String str11 = astRoot5.getSourceName();
        com.google.javascript.rhino.head.Node node12 = astRoot5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot13.getAstRoot();
        java.lang.String str15 = astRoot14.shortName();
        java.lang.String str16 = astRoot14.getSourceName();
        int int17 = astRoot14.getAbsolutePosition();
        int int18 = astRoot14.getPosition();
        astRoot5.addChildToFront((com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = astRoot5.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node21 = astRoot5.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        com.google.javascript.rhino.head.ast.Comment comment27 = null;
        scriptNode25.setJsDocNode(comment27);
        com.google.javascript.rhino.head.ast.Symbol symbol30 = scriptNode25.getSymbol("");
        com.google.javascript.rhino.head.Node node31 = scriptNode25.getLastSibling();
        int int32 = astRoot5.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str6, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AstRoot" + "'", str15, "AstRoot");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(functionNode20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(symbol30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        boolean boolean2 = astRoot0.hasChildren();
        astRoot0.setBounds(1128480984, (-1610320791));
        java.lang.String str6 = astRoot0.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = astRoot0.getTop();
        int int8 = astRoot0.getLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean13 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean19 = compilerEnvirons14.recoverFromErrors();
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons14.getActivationNames();
        boolean boolean21 = compilerEnvirons14.reportWarningAsError();
        compilerEnvirons14.setWarnTrailingComma(false);
        boolean boolean24 = compilerEnvirons14.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory25 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        int int29 = compilerEnvirons26.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons30.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter36 = compilerEnvirons33.getErrorReporter();
        compilerEnvirons30.setErrorReporter(errorReporter36);
        compilerEnvirons26.setErrorReporter(errorReporter36);
        com.google.javascript.rhino.head.Parser parser39 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter36);
        errorReporter36.warning("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", "14", 5, "0\tSCRIPT 0 0\n", (-207329058));
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter36);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException52 = errorReporter36.runtimeError("23\tBLOCK 23 1\n", "java.io.IOException: ScriptNode", 468863303, "", 520361644);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(errorReporter36);
        org.junit.Assert.assertNotNull(evaluatorException52);
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        int int2 = scriptNode1.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump3 = scriptNode1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        int int10 = astRoot8.getEncodedSourceEnd();
        int int11 = astRoot8.getFunctionCount();
        astRoot8.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        astRoot15.setEncodedSourceBounds(21, (int) (short) 10);
        astRoot15.setInStrictMode(true);
        astRoot8.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot15);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = astRoot15.getExistingIntProp((-276468670));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGeneratingSource();
        boolean boolean22 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope7, 25);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.Node node14 = scope12.getFirstChild();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope12);
        scope12.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode18 = scope12.getParent();
        scope7.addChildToBack((com.google.javascript.rhino.head.Node) astNode18);
        com.google.javascript.rhino.head.Node node22 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        int int25 = node22.getIntProp(9, 15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot29.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int42 = astRoot27.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = astRoot27.new NodeIterator();
        java.lang.String str45 = astRoot27.makeIndent(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getNextTempName();
        com.google.javascript.rhino.head.Node node48 = scriptNode46.target;
        int int49 = scriptNode46.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node50 = scriptNode46.getLastChild();
        int int51 = scriptNode46.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getEndLineno();
        java.lang.Object obj54 = astRoot52.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        astRoot52.removeProp((int) (short) 0);
        int int61 = astRoot52.getAbsolutePosition();
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot52);
        node22.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot52);
        int int64 = astRoot52.getEncodedSourceStart();
        astRoot52.setEncodedSourceBounds(627479866, 0);
        // The following exception was thrown during execution in test generation
        try {
            scope7.setDefault((com.google.javascript.rhino.head.Node) astRoot52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(astNode18);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 15 + "'", int25 == 15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                                  " + "'", str45, "                                                  ");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        int int10 = astRoot0.getPosition();
        astRoot0.setInStrictMode(false);
        astRoot0.setBaseLineno(215041883);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node31 = astRoot13.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode33 = astRoot32.getParent();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.Node node38 = scope36.getFirstChild();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope36);
        astRoot32.target = node39;
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = astRoot32.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scope43.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node48 = node47.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        node47.addChildToFront((com.google.javascript.rhino.head.Node) scope49);
        scope43.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode46, node47);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        java.lang.String str54 = node47.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot52);
        java.lang.String str55 = astRoot52.getNextTempName();
        boolean boolean56 = astRoot52.hasSideEffects();
        java.lang.String str58 = astRoot52.toSource(100);
        node31.addChildAfter((com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot52);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator60 = astRoot52.spliterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(nodeSpliterator60);
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node6 = scope5.getNext();
        com.google.javascript.rhino.head.Node node7 = scriptNode0.getChildBefore(node6);
        boolean boolean8 = scriptNode0.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean3 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean4 = compilerEnvirons0.isStrictMode();
        boolean boolean5 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        java.lang.Object obj11 = astRoot1.getCompilerData();
        astRoot1.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot1.getAstRoot();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = astRoot14.getFunctions();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertNotNull(functionNodeList15);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        scriptNode0.setPosition(0);
        java.lang.String str6 = scriptNode0.makeIndent((int) (short) -1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-1142433170), (-547091060));
        boolean boolean3 = scope2.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode4.setLineno((int) (byte) -1);
        scriptNode4.setEncodedSourceStart((-738182430));
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray14 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList15, symbolArray14);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList15);
        boolean boolean18 = astRoot12.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = null;
        astRoot12.setTop(scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode26.toSource(0);
        scriptNode26.setEncodedSourceBounds(12, 10);
        scriptNode24.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        astRoot33.addChildScope(scope35);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = astRoot33.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        boolean boolean42 = scope39.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope39, scope43);
        astRoot33.replaceWith(scope39);
        int int48 = astRoot33.getEncodedSourceEnd();
        scriptNode26.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot33);
        astRoot33.setEncodedSourceBounds(8, 1471166993);
        int int55 = astRoot33.getIntProp((-543879055), (-11));
        astRoot12.target = astRoot33;
        com.google.javascript.rhino.head.Node node57 = astRoot12.target;
        int int60 = astRoot12.getIntProp((int) (short) -1, 775058292);
        java.lang.String str62 = astRoot12.toSource(1246810839);
        scriptNode4.putProp(9876721, (java.lang.Object) 1246810839);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList64 = scriptNode4.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            scope2.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(symbolArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{\n}\n" + "'", str28, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertNotNull(scopeList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-11) + "'", int55 == (-11));
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 775058292 + "'", int60 == 775058292);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(astNodeList64);
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-645466284), "/=");
        // The following exception was thrown during execution in test generation
        try {
            int int4 = node2.getExistingIntProp((-931416822));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot12.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot12.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope31 = astRoot30.getParentScope();
        astRoot30.checkParentLinks();
        astRoot30.setBaseLineno(557642528);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertNull(scope31);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        boolean boolean9 = scope6.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, scope10);
        astRoot0.replaceWith(scope6);
        int int15 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot16);
        java.lang.String str20 = astRoot0.toSource(8);
        int int21 = astRoot0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str27 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope30, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = astRoot33.getAstRoot();
        java.lang.String str35 = astRoot34.shortName();
        java.lang.String str36 = astRoot34.getSourceName();
        astRoot34.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap38 = astRoot34.getSymbolTable();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope30, (com.google.javascript.rhino.head.Node) astRoot34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        java.lang.String str42 = astRoot40.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = astRoot40.getTop();
        int int44 = astRoot40.getParamCount();
        boolean boolean45 = astRoot40.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = astRoot40.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol48 = astRoot40.getSymbol("                                    ");
        boolean boolean49 = astRoot40.isInStrictMode();
        astRoot34.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot40);
        boolean boolean51 = astRoot34.isInStrictMode();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator52 = astRoot34.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setDefault((com.google.javascript.rhino.head.Node) astRoot34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(astRoot34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AstRoot" + "'", str35, "AstRoot");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "136" + "'", str42, "136");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(symbol48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean11 = compilerEnvirons0.isXmlAvailable();
        int int12 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        scriptNode1.removeProp(12);
        scriptNode1.setEncodedSourceBounds(953557037, (-1));
        scriptNode1.setRelative((int) ' ');
        java.lang.String str23 = scriptNode1.shortName();
        int int24 = scriptNode1.getEncodedSourceStart();
        java.lang.String str25 = scriptNode1.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode1.getFunctions();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ScriptNode" + "'", str23, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 953557037 + "'", int24 == 953557037);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(functionNodeList26);
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.Parser parser14 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.lang.Class<?> wildcardClass15 = compilerEnvirons0.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        int int1 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateDebugInfo(true);
        int int4 = compilerEnvirons0.getOptimizationLevel();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 11");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-852661786));
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = node1.iterator();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeItor2);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                    ");
        java.lang.Object obj3 = node1.getProp((-407655094));
        int int6 = node1.getIntProp((-1), 531785163);
        java.lang.String str7 = node1.getJsDoc();
        node1.setString("129");
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 531785163 + "'", int6 == 531785163);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str14 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope17, 25);
        java.lang.Object obj21 = scriptNode11.getProp(0);
        scope7.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean23 = scope7.hasSideEffects();
        scope7.setBounds((int) (short) 0, (int) (short) 10);
        java.lang.String str27 = scope7.getJsDoc();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        int int12 = astRoot5.getLength();
        astRoot5.setEndLineno(0);
        int int15 = astRoot5.getParamCount();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = astRoot5.new NodeIterator();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot1.getSymbols();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = astRoot1.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = astRoot25.getEnclosingFunction();
        astRoot1.addChildToFront((com.google.javascript.rhino.head.Node) astRoot25);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertNull(functionNode26);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str3 = astRoot2.debugPrint();
        astRoot2.setInStrictMode(false);
        int int6 = astRoot2.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        astRoot7.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        astRoot7.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot7.target = astRoot14;
        int int25 = astRoot14.getType();
        java.lang.String str26 = astRoot14.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = astRoot14.getFunctions();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        boolean boolean33 = compilerEnvirons28.recoverFromErrors();
        java.util.Set<java.lang.String> strSet34 = compilerEnvirons28.getActivationNames();
        compilerEnvirons28.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser37 = new com.google.javascript.rhino.head.Parser(compilerEnvirons28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = parser37.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot41.setEncodedSourceEnd(4);
        java.lang.String str44 = astRoot41.debugPrint();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot41, 14);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = astRoot14.getComments();
        astRoot14.removeChildren();
        astRoot14.setRelative((-1667114152));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str3, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 136 + "'", int6 == 136);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(strSet34);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0\tSCRIPT 0 0\n" + "'", str44, "0\tSCRIPT 0 0\n");
        org.junit.Assert.assertNull(commentSet47);
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-331679258));
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        int int10 = astRoot8.getEncodedSourceEnd();
        int int11 = astRoot8.getFunctionCount();
        astRoot8.setEndLineno(103333115);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        com.google.javascript.rhino.head.Node node22 = scriptNode20.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode20.getSymbols();
        int int24 = scriptNode20.depth();
        int int25 = scriptNode20.getBaseLineno();
        java.lang.String str26 = scriptNode17.toStringTree(scriptNode20);
        int int27 = scriptNode17.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = scriptNode17.getLastChild();
        java.lang.String str29 = scriptNode17.getJsDoc();
        astRoot8.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        int int31 = scriptNode17.getBaseLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean11 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean6 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean7 = compilerEnvirons0.isRecordingComments();
        boolean boolean8 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setGenerateObserverCount(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = astRoot29.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        boolean boolean38 = scope35.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope35, scope39);
        astRoot29.replaceWith(scope35);
        java.lang.String str44 = scope35.debugPrint();
        astRoot23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = astRoot23.getFunctions();
        java.lang.String str47 = astRoot23.shortName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(scopeList34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n" + "'", str44, "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AstRoot" + "'", str47, "AstRoot");
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        int int12 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode6, (com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = scope15.spliterator();
        astRoot13.addChildScope(scope15);
        java.lang.String str19 = astRoot13.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = astRoot13.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode25 = astRoot24.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int30 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot13, (com.google.javascript.rhino.head.ast.AstNode) astRoot22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.Node node35 = astRoot32.getFirstChild();
        astRoot22.putProp(2, (java.lang.Object) astRoot32);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        boolean boolean40 = scope37.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope37, scope41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getEndLineno();
        java.lang.Object obj50 = astRoot48.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray51 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet52, commentArray51);
        astRoot48.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet52);
        astRoot48.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.Node node58 = scriptNode56.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode56.getFunctions();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode56);
        astRoot46.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = astRoot46.getComments();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = astRoot66.getAstRoot();
        java.lang.String str68 = astRoot67.shortName();
        java.lang.String str69 = astRoot67.getSourceName();
        astRoot67.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = astRoot67.getTop();
        java.lang.String str72 = scriptNode71.getSourceName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap73 = scriptNode71.getSymbolTable();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(328069054, node65, (com.google.javascript.rhino.head.Node) scriptNode71, 441866554);
        int int76 = scriptNode71.getType();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(astNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(commentArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertNull(commentSet64);
        org.junit.Assert.assertNotNull(astRoot67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AstRoot" + "'", str68, "AstRoot");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 136 + "'", int76 == 136);
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isGenerateDebugInfo();
        compilerEnvirons26.setIdeMode(false);
        compilerEnvirons26.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons39.getErrorReporter();
        boolean boolean43 = compilerEnvirons39.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons39.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser45 = new com.google.javascript.rhino.head.Parser(compilerEnvirons26, errorReporter44);
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter44);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = iRFactory46.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot50.setInStrictMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons53 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons53.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter56 = compilerEnvirons53.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException62 = errorReporter56.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) evaluatorException62);
        astRoot50.setCompilerData((java.lang.Object) iOException63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorReporter44);
        org.junit.Assert.assertNotNull(astRoot50);
        org.junit.Assert.assertNotNull(errorReporter56);
        org.junit.Assert.assertNotNull(evaluatorException62);
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        int int4 = scriptNode2.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = astRoot5.getAstRoot();
        java.lang.String str7 = astRoot6.shortName();
        java.lang.String str9 = astRoot6.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = astRoot6.getFunctions();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot6, 6);
        int int13 = scriptNode2.getFunctionCount();
        com.google.javascript.rhino.head.IRFactory iRFactory14 = new com.google.javascript.rhino.head.IRFactory();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        java.lang.String str18 = scriptNode16.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = scriptNode16.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node20 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node21 = node20.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode16, node21, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = iRFactory14.transformTree(astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = astRoot26.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        boolean boolean35 = scope32.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope32, scope36);
        astRoot26.replaceWith(scope32);
        scope32.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol44 = scope32.getSymbol("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Node node45 = iRFactory14.transform((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str48 = astRoot47.debugPrint();
        astRoot47.setInStrictMode(false);
        java.lang.String str51 = astRoot47.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        java.lang.String str57 = astRoot53.makeIndent(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot53, 526823265);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons60 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons60.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter63 = compilerEnvirons60.getErrorReporter();
        boolean boolean64 = compilerEnvirons60.isGenerateObserverCount();
        boolean boolean65 = compilerEnvirons60.recoverFromErrors();
        java.util.Set<java.lang.String> strSet66 = compilerEnvirons60.getActivationNames();
        compilerEnvirons60.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser69 = new com.google.javascript.rhino.head.Parser(compilerEnvirons60);
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = parser69.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot73.setEncodedSourceEnd(4);
        astRoot73.setEncodedSource("$0");
        astRoot47.addChildAfter((com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) astRoot73);
        int int79 = astRoot53.getBaseLineno();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(1159083728, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) astRoot53, (-17617447));
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = node81.spliterator();
        int int83 = node81.getType();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(astRoot6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AstRoot" + "'", str7, "AstRoot");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertNotNull(scopeList31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str48, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "                                    " + "'", str57, "                                    ");
        org.junit.Assert.assertNotNull(errorReporter63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(strSet66);
        org.junit.Assert.assertNotNull(astRoot73);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1159083728 + "'", int83 == 1159083728);
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode1.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, (com.google.javascript.rhino.head.ast.Scope) scriptNode1);
        java.lang.String str15 = scriptNode1.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        boolean boolean20 = scope17.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope22.setTop(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        scriptNode24.setCompilerData((java.lang.Object) scope27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = scope31.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node35 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node36 = node35.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        node35.addChildToFront((com.google.javascript.rhino.head.Node) scope37);
        scope31.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode34, node35);
        scriptNode34.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = scope44.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node48 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node49 = node48.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        node48.addChildToFront((com.google.javascript.rhino.head.Node) scope50);
        scope44.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, node48);
        int int53 = scriptNode47.getEncodedSourceEnd();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node56 = scriptNode47.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-419350393));
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        int int88 = astRoot42.getEncodedSourceStart();
        java.lang.String str89 = astRoot42.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = astRoot42.getTop();
        com.google.javascript.rhino.head.Node node92 = scriptNode90.setType(703513808);
        com.google.javascript.rhino.head.Node node93 = scriptNode90.getLastChild();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1279502415 + "'", int67 == 1279502415);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(scriptNode90);
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertNotNull(node93);
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.debugPrint();
        astRoot0.setInStrictMode(true);
        int int5 = astRoot0.depth();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = astRoot0.getTop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(scriptNode6);
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode1.getChildScopes();
        java.lang.String str11 = scriptNode1.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        scope12.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = scope12.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = scope12.getSymbolTable();
        scope12.setPosition(88171227);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setLoop((com.google.javascript.rhino.head.ast.Jump) scope12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) '#', node13, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode17, 2);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        java.lang.String str26 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = astRoot27.getComments();
        astRoot27.setEncodedSourceEnd(11);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        astRoot27.setEncodedSource("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstNode astNode45 = null;
        astRoot27.setParent(astNode45);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(commentSet39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        compilerEnvirons9.setStrictMode(true);
        boolean boolean19 = compilerEnvirons9.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet24 = compilerEnvirons20.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setWarnTrailingComma(true);
        boolean boolean28 = compilerEnvirons25.isRecordingLocalJsDocComments();
        compilerEnvirons25.setWarnTrailingComma(false);
        compilerEnvirons25.setAllowSharpComments(false);
        boolean boolean33 = compilerEnvirons25.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons34.setWarnTrailingComma(true);
        java.lang.String[] strArray46 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        compilerEnvirons34.setActivationNames((java.util.Set<java.lang.String>) strSet47);
        compilerEnvirons25.setActivationNames((java.util.Set<java.lang.String>) strSet47);
        compilerEnvirons20.setActivationNames((java.util.Set<java.lang.String>) strSet47);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet47);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet47);
        boolean boolean54 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean55 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingComments(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(955777565, (-1233410715));
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getEndLineno();
        java.lang.Object obj47 = astRoot45.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot45.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        astRoot42.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        boolean boolean53 = astRoot42.isInStrictMode();
        int int54 = astRoot42.getType();
        int int55 = astRoot42.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope57.setTop(scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        scriptNode59.setCompilerData((java.lang.Object) scope62);
        scriptNode59.setEncodedSourceEnd(0);
        int int67 = scriptNode59.getType();
        int int68 = scriptNode59.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node69 = scriptNode59.target;
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int73 = astRoot72.getEndLineno();
        java.lang.Object obj74 = astRoot72.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray75 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet76 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet76, commentArray75);
        astRoot72.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet76);
        astRoot70.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet76);
        astRoot70.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet82 = astRoot70.getComments();
        scriptNode59.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot70);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = scriptNode59.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode85.toSource(0);
        scriptNode85.clearParentScope();
        boolean boolean89 = scriptNode85.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap90 = null;
        scriptNode85.setSymbolTable(strMap90);
        scriptNode85.setBounds(953557037, 18);
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node((-532772747), (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scriptNode85);
        int int96 = scriptNode59.getFunctionCount();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 136 + "'", int54 == 136);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 136 + "'", int67 == 136);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(commentArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(commentSet82);
        org.junit.Assert.assertNotNull(scriptNode84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{\n}\n" + "'", str87, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-8));
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int30 = astRoot15.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = astRoot15.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot15.getAstRoot();
        java.lang.String str34 = astRoot15.debugPrint();
        int int35 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getEndLineno();
        java.lang.Object obj38 = astRoot36.getCompilerData();
        int int39 = astRoot36.getLineno();
        boolean boolean40 = astRoot36.hasSideEffects();
        java.lang.String str41 = astRoot36.getSourceName();
        java.lang.String str42 = astRoot36.getJsDoc();
        astRoot36.setEncodedSourceStart((-131519396));
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator47 = positionComparator45.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode52 = astRoot51.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int60 = positionComparator45.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot51, (com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = astRoot51.getAstRoot();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((-12), (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot61);
        com.google.javascript.rhino.head.ast.Comment[] commentArray63 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet64, commentArray63);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        boolean boolean68 = astRoot1.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(astNodeComparator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNull(astNode52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-3) + "'", int60 == (-3));
        org.junit.Assert.assertNotNull(astRoot61);
        org.junit.Assert.assertNotNull(commentArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-892379193), 365262889);
        com.google.javascript.rhino.head.ast.Symbol symbol3 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope2.putSymbol(symbol3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = astRoot3.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray20 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList21, symbolArray20);
        astRoot18.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        astRoot18.addChildScope(scope25);
        scope25.setPosition(17);
        com.google.javascript.rhino.head.ast.Comment comment30 = scope25.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            functionNode16.putProp(1017016923, (java.lang.Object) scope25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertNull(functionNode16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(symbolArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(comment30);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        boolean boolean9 = scope6.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, scope10);
        astRoot0.replaceWith(scope6);
        int int15 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot16);
        com.google.javascript.rhino.head.ast.Comment comment19 = null;
        astRoot0.setJsDocNode(comment19);
        boolean boolean21 = astRoot0.isInStrictMode();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scope2.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scope5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope5.setTop(scriptNode7);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        scriptNode7.setCompilerData((java.lang.Object) scope10);
        scriptNode7.setEncodedSourceEnd(0);
        int int15 = scriptNode7.getType();
        int int16 = scriptNode7.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope2, (com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = astRoot18.getAstRoot();
        java.lang.String str20 = astRoot19.shortName();
        java.lang.String str21 = astRoot19.debugPrint();
        com.google.javascript.rhino.head.Node node22 = astRoot19.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = astRoot19.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getEndLineno();
        java.lang.Object obj28 = astRoot26.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot26.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = scope37.spliterator();
        astRoot35.addChildScope(scope37);
        java.lang.String str41 = astRoot35.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        java.lang.String str44 = astRoot42.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        java.lang.String str47 = astRoot42.toStringTree(scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope49.setTop(scriptNode51);
        java.lang.String str54 = scope49.toSource(12);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scope49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot57, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet61 = astRoot57.getComments();
        node55.addChildToBack((com.google.javascript.rhino.head.Node) astRoot57);
        com.google.javascript.rhino.head.Node node63 = astRoot57.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator64 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator65 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator66 = positionComparator64.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator65);
        com.google.javascript.rhino.head.Node node67 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node68 = node67.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        node67.addChildToFront((com.google.javascript.rhino.head.Node) scope69);
        int int71 = scope69.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol73 = scope69.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int76 = positionComparator65.compare((com.google.javascript.rhino.head.ast.AstNode) scope69, (com.google.javascript.rhino.head.ast.AstNode) astRoot75);
        node63.addChildToFront((com.google.javascript.rhino.head.Node) astRoot75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int79 = astRoot78.getEndLineno();
        java.lang.Object obj80 = astRoot78.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray81 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet82 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet82, commentArray81);
        astRoot78.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot75.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot19.setSourceName("                                                  ");
        int int90 = scriptNode7.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot19);
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7);
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 136 + "'", int15 == 136);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(astRoot19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AstRoot" + "'", str20, "AstRoot");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str21, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                        {\n                        }\n" + "'", str54, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNull(commentSet61);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(astNodeComparator66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(symbol73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-12) + "'", int76 == (-12));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(commentArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int90 + "' != '" + 106971519 + "'", int90 == 106971519);
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = astRoot0.getParamCount();
        boolean boolean5 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot0.getSymbol("                                    ");
        boolean boolean9 = astRoot0.isInStrictMode();
        boolean boolean10 = astRoot0.isInStrictMode();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int7 = scriptNode3.getIntProp((int) 'a', 19);
        int int8 = scriptNode3.getFunctionCount();
        int int9 = scriptNode3.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getEndLineno();
        java.lang.Object obj15 = astRoot13.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray16 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet17 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet17, commentArray16);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet17);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet17);
        astRoot11.setRelative((int) (byte) -1);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot11);
        int int24 = astRoot11.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = astRoot26.getSymbols();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator48 = astRoot26.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getNextTempName();
        java.lang.String str52 = scriptNode50.debugPrint();
        scriptNode50.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        java.lang.String str58 = astRoot56.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode59.getSymbols();
        java.lang.String str61 = astRoot56.toStringTree(scriptNode59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int64 = astRoot63.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int66 = astRoot65.getEndLineno();
        java.lang.Object obj67 = astRoot65.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray68 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet69 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet69, commentArray68);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet69);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet69);
        int int73 = astRoot63.getRegexpCount();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) astRoot63, 550287075);
        com.google.javascript.rhino.head.Node node76 = astRoot56.target;
        java.lang.String str77 = astRoot56.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        astRoot56.visitComments(nodeVisitor78);
        astRoot26.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot56);
        java.lang.String str81 = astRoot11.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot26);
        int int82 = astRoot11.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator85 = scope84.spliterator();
        scope84.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scope84);
        int int89 = astRoot11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope84);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode90 = astRoot11.getEnclosingFunction();
        scriptNode3.target = functionNode90;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor92 = functionNode90.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 19 + "'", int7 == 19);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(commentArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNotNull(nodeSpliterator48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "136" + "'", str58, "136");
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(commentArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str77, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNull(functionNode90);
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean9 = compilerEnvirons0.isRecordingComments();
        boolean boolean10 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean12 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(122705610);
        int int2 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        java.lang.String str7 = astRoot5.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode8.getSymbols();
        java.lang.String str10 = astRoot5.toStringTree(scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        int int14 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode8, (com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList22 = astRoot15.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = astRoot26.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot15, (com.google.javascript.rhino.head.ast.AstNode) astRoot24);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, 24);
        astRoot24.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = astRoot24.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot24.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = astRoot24.getAstRoot();
        int int39 = astRoot24.getLength();
        boolean boolean40 = astRoot24.hasSideEffects();
        int int41 = astRoot24.getLength();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "136" + "'", str7, "136");
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(functionNodeList22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(astNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(astRoot36);
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertNotNull(astRoot38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator5 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator6 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator7 = positionComparator5.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int20 = positionComparator5.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) scope19);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = astNodeComparator4.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator5);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = positionComparator0.thenComparing(astNodeComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator25 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator26 = positionComparator25.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator27 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator29 = positionComparator27.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator28);
        com.google.javascript.rhino.head.Node node30 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node31 = node30.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        node30.addChildToFront((com.google.javascript.rhino.head.Node) scope32);
        int int34 = scope32.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol36 = scope32.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int39 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) scope32, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = astRoot43.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode45);
        boolean boolean49 = astRoot41.isInStrictMode();
        astRoot41.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getEndLineno();
        java.lang.Object obj54 = astRoot52.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        astRoot52.checkParentLinks();
        int int60 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot41, (com.google.javascript.rhino.head.ast.AstNode) astRoot52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator61 = positionComparator25.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator28);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator62 = positionComparator25.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator63 = astNodeComparator24.thenComparing(astNodeComparator62);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator64 = astNodeComparator63.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(astNodeComparator7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertNotNull(astNodeComparator26);
        org.junit.Assert.assertNotNull(astNodeComparator29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(symbol36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-12) + "'", int39 == (-12));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-52) + "'", int60 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator61);
        org.junit.Assert.assertNotNull(astNodeComparator62);
        org.junit.Assert.assertNotNull(astNodeComparator63);
        org.junit.Assert.assertNotNull(astNodeComparator64);
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean11 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons12.getActivationNames();
        boolean boolean16 = compilerEnvirons12.recoverFromErrors();
        boolean boolean17 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons12.isRecordingComments();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setWarnTrailingComma(true);
        boolean boolean25 = compilerEnvirons22.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet26 = compilerEnvirons22.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setWarnTrailingComma(true);
        boolean boolean30 = compilerEnvirons27.isRecordingLocalJsDocComments();
        compilerEnvirons27.setWarnTrailingComma(false);
        compilerEnvirons27.setAllowSharpComments(false);
        boolean boolean35 = compilerEnvirons27.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setWarnTrailingComma(true);
        java.lang.String[] strArray48 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        compilerEnvirons36.setActivationNames((java.util.Set<java.lang.String>) strSet49);
        compilerEnvirons27.setActivationNames((java.util.Set<java.lang.String>) strSet49);
        compilerEnvirons22.setActivationNames((java.util.Set<java.lang.String>) strSet49);
        compilerEnvirons22.setWarnTrailingComma(false);
        boolean boolean56 = compilerEnvirons22.isStrictMode();
        boolean boolean57 = compilerEnvirons22.getWarnTrailingComma();
        com.google.javascript.rhino.head.ErrorReporter errorReporter58 = compilerEnvirons22.getErrorReporter();
        compilerEnvirons12.setErrorReporter(errorReporter58);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException65 = errorReporter58.runtimeError("java.io.IOException: 8\tSCRIPT 8 1\n", "-1\t  SCRIPT 0 1\n", 975051644, "40", 0);
        compilerEnvirons0.setErrorReporter(errorReporter58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(errorReporter58);
        org.junit.Assert.assertNotNull(evaluatorException65);
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node31 = astRoot13.getLastSibling();
        com.google.javascript.rhino.head.Node node33 = node31.setType((int) 'a');
        node31.setLineno((-21));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node33);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        java.lang.String str13 = astRoot4.toSource(1159083728);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int30 = astRoot17.getRegexpCount();
        com.google.javascript.rhino.head.Node node31 = astRoot17.getNext();
        astRoot17.setBaseLineno(10);
        astRoot17.setEncodedSourceBounds(136, 3);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot4, (com.google.javascript.rhino.head.ast.Scope) astRoot17);
        astRoot4.setEncodedSourceBounds(6, 541550340);
        java.lang.String str41 = astRoot4.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        java.lang.String str44 = astRoot42.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        java.lang.String str47 = astRoot42.toStringTree(scriptNode45);
        astRoot42.checkParentLinks();
        int int51 = astRoot42.getIntProp(11, 32);
        int int52 = astRoot42.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode53.toSource(0);
        scriptNode53.clearParentScope();
        boolean boolean57 = scriptNode53.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = null;
        scriptNode53.setSymbolTable(strMap58);
        int int60 = scriptNode53.getRegexpCount();
        int int61 = scriptNode53.getRegexpCount();
        astRoot42.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        astRoot4.addChildToBack((com.google.javascript.rhino.head.Node) astRoot42);
        boolean boolean64 = astRoot4.hasSideEffects();
        astRoot4.setInStrictMode(false);
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        java.io.IOException iOException3 = new java.io.IOException("                                            ");
        java.io.IOException iOException4 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("hi!", (java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray17 = iOException16.getSuppressed();
        iOException13.addSuppressed((java.lang.Throwable) iOException16);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException28 = errorReporter22.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) evaluatorException28);
        iOException13.addSuppressed((java.lang.Throwable) evaluatorException28);
        java.io.IOException iOException31 = new java.io.IOException("{\n}\n", (java.lang.Throwable) evaluatorException28);
        iOException9.addSuppressed((java.lang.Throwable) iOException31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setWarnTrailingComma(true);
        boolean boolean36 = compilerEnvirons33.getWarnTrailingComma();
        compilerEnvirons33.setGeneratingSource(true);
        compilerEnvirons33.setOptimizationLevel(4);
        boolean boolean41 = compilerEnvirons33.isGeneratingSource();
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons33.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException48 = errorReporter42.runtimeError("21", "                                    ", 32, "          {\n          }\n", 278475323);
        iOException9.addSuppressed((java.lang.Throwable) evaluatorException48);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException3.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray52 = iOException9.getSuppressed();
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException54 = new java.io.IOException("35\tBLOCK 35 -236001159\n", (java.lang.Throwable) iOException9);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertNotNull(evaluatorException28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertNotNull(evaluatorException48);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        scriptNode12.setBounds((int) (byte) -1, 23);
        int int18 = astRoot6.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator19 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        java.lang.String str22 = astRoot20.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode23.getSymbols();
        java.lang.String str25 = astRoot20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        int int29 = positionComparator19.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode23, (com.google.javascript.rhino.head.ast.AstNode) scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = astRoot30.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode42 = astRoot41.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scriptNode43);
        int int47 = positionComparator19.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot30, (com.google.javascript.rhino.head.ast.AstNode) astRoot39);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode55.toSource(0);
        scriptNode55.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) '#', node51, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode55, 2);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope64.setTop(scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scope68.addChild((com.google.javascript.rhino.head.ast.AstNode) scope69);
        scriptNode66.setCompilerData((java.lang.Object) scope69);
        scriptNode66.setEncodedSourceEnd(0);
        int int74 = positionComparator19.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode55, (com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(526823265, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode66, 541550340);
        scope0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.lang.String str78 = scope0.debugPrint();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "136" + "'", str22, "136");
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(astNode42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{\n}\n" + "'", str57, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  BLOCK 0 1\n" + "'", str78, "-1\t  BLOCK 0 1\n");
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(19);
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        java.lang.String str30 = scriptNode28.debugPrint();
        scriptNode28.setLineno((int) (byte) -1);
        scriptNode28.flattenSymbolTable(true);
        astRoot23.setTop(scriptNode28);
        astRoot23.clearParentScope();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode42 = astRoot41.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scriptNode43);
        boolean boolean47 = astRoot39.isInStrictMode();
        astRoot39.setRelative((int) '4');
        astRoot23.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot39);
        astRoot23.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node54 = scriptNode52.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getEndLineno();
        java.lang.Object obj58 = astRoot56.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol60 = astRoot56.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node61 = null;
        astRoot56.target = node61;
        java.lang.String str63 = scriptNode52.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        java.lang.String str65 = astRoot56.toSource(1159083728);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot69.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getNextTempName();
        com.google.javascript.rhino.head.Node node79 = scriptNode77.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList80 = scriptNode77.getFunctions();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot67, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) scriptNode77);
        int int82 = astRoot69.getRegexpCount();
        com.google.javascript.rhino.head.Node node83 = astRoot69.getNext();
        astRoot69.setBaseLineno(10);
        astRoot69.setEncodedSourceBounds(136, 3);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot56, (com.google.javascript.rhino.head.ast.Scope) astRoot69);
        astRoot23.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot56);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node91 = astRoot56.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(astNode42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNotNull(functionNodeList80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(node83);
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot1.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node6 = null;
        astRoot1.target = node6;
        java.lang.Object obj8 = astRoot1.getCompilerData();
        java.lang.String str10 = astRoot1.toSource(25);
        int int11 = astRoot1.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        int int15 = scope14.getLineno();
        scope14.setBounds(1, 10);
        int int19 = scope14.getType();
        astRoot1.addChildScope(scope14);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((-72803501), (com.google.javascript.rhino.head.Node) astRoot1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 129 + "'", int19 == 129);
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        astRoot0.setEncodedSourceStart(4);
        astRoot0.removeChildren();
        astRoot0.flattenSymbolTable(true);
        java.lang.String[] strArray14 = astRoot0.getParamAndVarNames();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(170, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getNextTempName();
        scriptNode18.setLineno((int) (short) 10);
        java.lang.Object obj22 = scriptNode18.getCompilerData();
        scriptNode18.putIntProp((-297370766), 437731425);
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope28 = scriptNode18.getDefiningScope("\210");
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setDefault((com.google.javascript.rhino.head.Node) scriptNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(scope28);
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        int int4 = scriptNode0.depth();
        int int5 = scriptNode0.getFunctionCount();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1576490526));
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.Node node33 = astRoot30.getFirstChild();
        astRoot20.putProp(2, (java.lang.Object) astRoot30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot36, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet40 = astRoot36.getComments();
        com.google.javascript.rhino.head.Node node41 = astRoot36.getFirstChild();
        java.lang.String str42 = astRoot20.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot36);
        java.lang.Class<?> wildcardClass43 = astRoot36.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(commentSet40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator5 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator6 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator7 = positionComparator5.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int20 = positionComparator5.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) scope19);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = astNodeComparator4.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator5);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = positionComparator0.thenComparing(astNodeComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator25 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator26 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator25.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator26);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator29 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator30 = positionComparator28.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = astRoot34.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int43 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot34, (com.google.javascript.rhino.head.ast.AstNode) scope42);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator44 = astNodeComparator27.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator28);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        java.lang.String str48 = astRoot46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = scriptNode49.getSymbols();
        java.lang.String str51 = astRoot46.toStringTree(scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        int int55 = positionComparator45.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode49, (com.google.javascript.rhino.head.ast.AstNode) scope52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator28.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator45);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = astNodeComparator24.thenComparing(astNodeComparator56);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator58 = astNodeComparator24.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(astNodeComparator7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertNotNull(astNodeComparator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNotNull(symbolList50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(astNodeComparator58);
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        scriptNode0.setLineno((int) (byte) -1);
        int int5 = scriptNode0.getFunctionCount();
        java.lang.Object obj7 = scriptNode0.getProp(1279502415);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        astRoot0.setEncodedSourceEnd(520361644);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        int int9 = scriptNode6.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode6.getSymbols();
        scriptNode6.setBaseLineno(19);
        boolean boolean14 = scriptNode6.hasSideEffects();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons15.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons15);
        scriptNode6.setCompilerData((java.lang.Object) parser33);
        astRoot0.setTop(scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope37.setTop(scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        scriptNode39.setCompilerData((java.lang.Object) scope42);
        scriptNode39.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = scriptNode47.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode47.getFunctions();
        int int51 = scriptNode47.getEncodedSourceEnd();
        scriptNode39.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode47.getSymbols();
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode47.setDouble((double) (-275341566));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(symbolList53);
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = astRoot7.getAstRoot();
        java.lang.String str9 = astRoot8.shortName();
        java.lang.String str11 = astRoot8.toSource(1);
        java.lang.Object obj12 = astRoot8.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.Node node14 = astRoot13.getNext();
        com.google.javascript.rhino.head.ast.Comment comment15 = astRoot13.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        java.lang.String str19 = scriptNode17.debugPrint();
        scriptNode17.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        int int40 = astRoot30.getRegexpCount();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot30, 550287075);
        com.google.javascript.rhino.head.Node node43 = astRoot23.target;
        java.lang.String str44 = astRoot23.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor45 = null;
        astRoot23.visitComments(nodeVisitor45);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(956959870, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot23, (-2110645446));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot13.getSymbolTable();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(astRoot8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AstRoot" + "'", str9, "AstRoot");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str19, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str44, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(strMap49);
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getNext();
        java.lang.Object obj8 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.Node node10 = com.google.javascript.rhino.head.Node.newString("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        node10.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        scriptNode14.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        astRoot0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.Comment comment30 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addComment(comment30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        boolean boolean10 = scope7.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope7, scope11);
        astRoot1.replaceWith(scope7);
        scope7.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope7.getSymbol("-1\tSCRIPT -1 1\n");
        boolean boolean20 = scope7.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray23 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList24, symbolArray23);
        astRoot21.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList24);
        int int27 = astRoot21.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scope7, (com.google.javascript.rhino.head.Node) astRoot21);
        int int31 = scope7.getIntProp((int) ' ', (-159100019));
        java.lang.String str33 = scope7.makeIndent((int) (short) 1);
        int int34 = scope7.depth();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(symbolArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-159100019) + "'", int31 == (-159100019));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "  " + "'", str33, "  ");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean7 = compilerEnvirons6.recoverFromErrors();
        int int8 = compilerEnvirons6.getLanguageVersion();
        compilerEnvirons6.setAllowMemberExprAsFunctionName(false);
        compilerEnvirons6.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setWarnTrailingComma(true);
        java.lang.String[] strArray25 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        compilerEnvirons13.setActivationNames((java.util.Set<java.lang.String>) strSet26);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet26);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet26);
        boolean boolean31 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        com.google.javascript.rhino.head.Node node11 = astRoot4.getLastSibling();
        int int12 = node11.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        java.lang.String str20 = astRoot13.toSource(0);
        java.lang.String str22 = astRoot13.toSource(25);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope3, node11, (com.google.javascript.rhino.head.Node) astRoot13);
        node23.setLineno((-407757912));
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = astRoot27.getAstRoot();
        java.lang.String str29 = astRoot28.shortName();
        java.lang.String str30 = astRoot28.getSourceName();
        int int31 = astRoot28.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) astRoot28);
        java.lang.Object obj34 = astRoot28.getProp((int) (short) -1);
        java.lang.String str35 = node23.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot28);
        java.lang.String str36 = astRoot28.debugPrint();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(astRoot28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AstRoot" + "'", str29, "AstRoot");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-21));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -21");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        java.lang.Object obj11 = astRoot1.getCompilerData();
        astRoot1.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot1.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setDouble((double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(astRoot14);
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet22 = compilerEnvirons18.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setWarnTrailingComma(true);
        boolean boolean26 = compilerEnvirons23.isRecordingLocalJsDocComments();
        compilerEnvirons23.setWarnTrailingComma(false);
        compilerEnvirons23.setAllowSharpComments(false);
        boolean boolean31 = compilerEnvirons23.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        java.lang.String[] strArray44 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        compilerEnvirons32.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons23.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons53 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons53.setWarnTrailingComma(true);
        boolean boolean56 = compilerEnvirons53.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter57 = compilerEnvirons53.getErrorReporter();
        compilerEnvirons53.setGeneratingSource(false);
        int int60 = compilerEnvirons53.getOptimizationLevel();
        boolean boolean61 = compilerEnvirons53.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter65 = compilerEnvirons62.getErrorReporter();
        boolean boolean66 = compilerEnvirons62.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter67 = compilerEnvirons62.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException73 = errorReporter67.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter67.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser80 = new com.google.javascript.rhino.head.Parser(compilerEnvirons53, errorReporter67);
        com.google.javascript.rhino.head.IRFactory iRFactory81 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter67);
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = astRoot83.getAstRoot();
        boolean boolean85 = astRoot84.hasSideEffects();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) astRoot84, 956959870);
        com.google.javascript.rhino.head.Node node88 = iRFactory81.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot84);
        com.google.javascript.rhino.head.ast.Comment comment89 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot84.addComment(comment89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(errorReporter57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(errorReporter65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(errorReporter67);
        org.junit.Assert.assertNotNull(evaluatorException73);
        org.junit.Assert.assertNotNull(astRoot84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(node88);
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        astRoot0.checkParentLinks();
        astRoot0.setEndLineno((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(0);
        scriptNode15.setEncodedSourceBounds(12, 10);
        scriptNode13.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        java.lang.String str22 = scriptNode13.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = astRoot23.getAstRoot();
        java.lang.String str25 = astRoot24.shortName();
        java.lang.String str27 = astRoot24.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = astRoot24.getFunctions();
        astRoot24.checkParentLinks();
        boolean boolean30 = astRoot24.hasConsistentReturnUsage();
        int int31 = astRoot24.getRegexpCount();
        scriptNode13.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot24);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        astRoot0.setLength((-197855646));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AstRoot" + "'", str25, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-209993672));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -209993672");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = astRoot14.getAstRoot();
        com.google.javascript.rhino.head.Node node28 = astRoot27.getFirstChild();
        astRoot27.setLength((-538615178));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertNull(node28);
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGeneratingSource();
        boolean boolean5 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setIdeMode(false);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        scriptNode5.setJsDocNode(comment7);
        int int9 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scope11.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope11, (int) (short) 10);
        java.lang.Object obj16 = scope11.getProp((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.Node node48 = astRoot30.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot49.getAstRoot();
        java.lang.String str51 = astRoot50.shortName();
        java.lang.String str53 = astRoot50.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = astRoot50.getFunctions();
        astRoot50.checkParentLinks();
        boolean boolean56 = astRoot50.hasChildren();
        int int57 = astRoot50.getLineno();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot50, (int) ' ');
        scope11.setLineno((-1151728665));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(astRoot50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AstRoot" + "'", str51, "AstRoot");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(170, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getNextTempName();
        scriptNode3.setLineno((int) (short) 10);
        java.lang.Object obj7 = scriptNode3.getCompilerData();
        scriptNode3.putIntProp((-297370766), 437731425);
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = scriptNode3.getSymbolTable();
        com.google.javascript.rhino.head.Node node13 = scriptNode3.getLastSibling();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(node13);
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((-95109496), (com.google.javascript.rhino.head.Node) scriptNode2, (-159100019));
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        org.junit.Assert.assertNotNull(node5);
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(26);
        com.google.javascript.rhino.head.ast.Symbol symbol3 = scriptNode1.getSymbol("");
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            node4.setString("-1\tLE -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol3);
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump10 = astRoot1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = astRoot2.spliterator();
        java.lang.Object obj12 = astRoot2.getCompilerData();
        astRoot2.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = astRoot2.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        java.lang.String str18 = scriptNode16.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node22 = scope21.getNext();
        com.google.javascript.rhino.head.Node node23 = scriptNode16.getChildBefore(node22);
        java.lang.String str25 = scriptNode16.toSource(12);
        int int26 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, (com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        com.google.javascript.rhino.head.ast.Symbol symbol34 = scope29.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = astRoot35.getAstRoot();
        java.lang.String str37 = astRoot36.shortName();
        java.lang.String str39 = astRoot36.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = astRoot36.getFunctions();
        astRoot36.checkParentLinks();
        boolean boolean42 = astRoot36.hasChildren();
        scope29.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot36);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(488584366, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot36);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(astRoot15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                        {\n                        }\n" + "'", str25, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(symbol34);
        org.junit.Assert.assertNotNull(astRoot36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AstRoot" + "'", str37, "AstRoot");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray8 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList9, symbolArray8);
        astRoot6.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList9);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        astRoot6.addChildScope(scope13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot19.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getNextTempName();
        com.google.javascript.rhino.head.Node node29 = scriptNode27.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int32 = astRoot17.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot17);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode41.toSource(0);
        scriptNode41.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) '#', node37, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode41, 2);
        com.google.javascript.rhino.head.Node node49 = scope40.getLastChild();
        com.google.javascript.rhino.head.Node node50 = astRoot6.getChildBefore(node49);
        java.lang.String str51 = astRoot1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot6);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        boolean boolean56 = scope53.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope57.addChild((com.google.javascript.rhino.head.ast.AstNode) scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope58.setTop(scriptNode60);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        scriptNode60.setCompilerData((java.lang.Object) scope63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator69 = scope67.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node71 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node72 = node71.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        node71.addChildToFront((com.google.javascript.rhino.head.Node) scope73);
        scope67.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode70, node71);
        scriptNode70.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope53, (com.google.javascript.rhino.head.Node) scriptNode60, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode70.removeChildren();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons80 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons80.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet83 = compilerEnvirons80.getActivationNames();
        boolean boolean84 = compilerEnvirons80.recoverFromErrors();
        boolean boolean85 = compilerEnvirons80.getWarnTrailingComma();
        compilerEnvirons80.setWarnTrailingComma(true);
        boolean boolean88 = compilerEnvirons80.isRecordingComments();
        boolean boolean89 = compilerEnvirons80.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory90 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons80);
        com.google.javascript.rhino.head.ast.AstRoot astRoot91 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int92 = astRoot91.getEndLineno();
        java.lang.Object obj93 = astRoot91.getCompilerData();
        com.google.javascript.rhino.head.Node node94 = astRoot91.getFirstChild();
        java.lang.String str95 = astRoot91.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode96 = iRFactory90.transformTree(astRoot91);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.replaceChild((com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) astRoot91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(symbolArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNull(strSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNull(node94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "$0" + "'", str95, "$0");
        org.junit.Assert.assertNotNull(scriptNode96);
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        int int6 = scriptNode1.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scope10.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node15 = node14.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        node14.addChildToFront((com.google.javascript.rhino.head.Node) scope16);
        scope10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, node14);
        scope10.setRelative(5);
        scriptNode1.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = astRoot23.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = astRoot23.spliterator();
        com.google.javascript.rhino.head.Node node34 = astRoot23.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        scope35.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode37.getChildScopes();
        scriptNode37.clearParentScope();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode1, node34, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = node34.new NodeIterator();
        com.google.javascript.rhino.head.Node node44 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot((-1291599107));
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = astRoot46.getAstRoot();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor48 = astRoot46.iterator();
        com.google.javascript.rhino.head.ast.Scope scope50 = astRoot46.getDefiningScope("$2");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(0, 1796887248);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        java.lang.String str57 = scriptNode55.debugPrint();
        scriptNode55.setLineno((int) (byte) -1);
        int int60 = scriptNode55.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode55.getChildScopes();
        int int62 = scriptNode55.getEndLineno();
        java.lang.Object obj63 = scriptNode55.getCompilerData();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(23, node54, (com.google.javascript.rhino.head.Node) scriptNode55);
        com.google.javascript.rhino.head.ast.Comment comment65 = node64.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            node34.replaceChild((com.google.javascript.rhino.head.Node) scope50, node64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(astRoot47);
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str57, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(comment65);
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        astRoot1.setRelative((int) '4');
        int int12 = astRoot1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Comment comment13 = null;
        astRoot1.setJsDocNode(comment13);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons13.getErrorReporter();
        boolean boolean17 = compilerEnvirons13.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons13.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean21 = compilerEnvirons20.recoverFromErrors();
        compilerEnvirons20.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setWarnTrailingComma(true);
        boolean boolean27 = compilerEnvirons24.isRecordingLocalJsDocComments();
        compilerEnvirons24.setWarnTrailingComma(false);
        compilerEnvirons24.setAllowSharpComments(false);
        boolean boolean32 = compilerEnvirons24.isGenerateDebugInfo();
        compilerEnvirons24.setIdeMode(false);
        compilerEnvirons24.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons37.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter40 = compilerEnvirons37.getErrorReporter();
        boolean boolean41 = compilerEnvirons37.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons37.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser43 = new com.google.javascript.rhino.head.Parser(compilerEnvirons24, errorReporter42);
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter42);
        boolean boolean45 = compilerEnvirons20.isStrictMode();
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons20);
        boolean boolean47 = compilerEnvirons20.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        boolean boolean51 = compilerEnvirons48.recoverFromErrors();
        compilerEnvirons48.setRecordingComments(true);
        compilerEnvirons48.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons56 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons56.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter59 = compilerEnvirons56.getErrorReporter();
        boolean boolean60 = compilerEnvirons56.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter61 = compilerEnvirons56.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException67 = errorReporter61.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        com.google.javascript.rhino.head.Parser parser68 = new com.google.javascript.rhino.head.Parser(compilerEnvirons48, errorReporter61);
        compilerEnvirons20.setErrorReporter(errorReporter61);
        java.util.Set<java.lang.String> strSet70 = compilerEnvirons20.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter71 = compilerEnvirons20.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter71);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(errorReporter40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(errorReporter59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(errorReporter61);
        org.junit.Assert.assertNotNull(evaluatorException67);
        org.junit.Assert.assertNull(strSet70);
        org.junit.Assert.assertNotNull(errorReporter71);
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(false);
        int int11 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setAllowSharpComments(false);
        int int14 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot13.getAstRoot();
        java.lang.String str15 = astRoot14.shortName();
        java.lang.String str17 = astRoot14.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot14.getFunctions();
        astRoot14.checkParentLinks();
        boolean boolean20 = astRoot14.hasConsistentReturnUsage();
        int int21 = astRoot14.getRegexpCount();
        scriptNode3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot14);
        int int25 = astRoot14.getIntProp(25, (int) (short) 0);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = astRoot14.spliterator();
        java.lang.String str28 = astRoot14.toSource(1942790351);
        java.lang.Object obj29 = astRoot14.getCompilerData();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AstRoot" + "'", str15, "AstRoot");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-72803501));
        scriptNode1.setEncodedSourceBounds(608130738, (-138693843));
        boolean boolean5 = scriptNode1.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int29 = astRoot14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node32 = astRoot14.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.Node node39 = scope37.getFirstChild();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope37);
        astRoot33.target = node40;
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = astRoot33.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = scope44.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node48 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node49 = node48.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        node48.addChildToFront((com.google.javascript.rhino.head.Node) scope50);
        scope44.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, node48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getParamCount();
        java.lang.String str55 = node48.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot53);
        java.lang.String str56 = astRoot53.getNextTempName();
        boolean boolean57 = astRoot53.hasSideEffects();
        java.lang.String str59 = astRoot53.toSource(100);
        node32.addChildAfter((com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(24, node32);
        com.google.javascript.rhino.head.ast.Comment comment62 = null;
        node61.setJsDocNode(comment62);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator64 = node61.new NodeIterator();
        boolean boolean65 = nodeIterator64.hasNext();
        boolean boolean66 = nodeIterator64.hasNext();
        com.google.javascript.rhino.head.Node node67 = nodeIterator64.next();
        nodeIterator64.remove();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(astRoot42);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(node67);
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        boolean boolean11 = compilerEnvirons7.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons7.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException18 = errorReporter12.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons0.setErrorReporter(errorReporter12);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet25 = compilerEnvirons22.getActivationNames();
        boolean boolean26 = compilerEnvirons22.recoverFromErrors();
        boolean boolean27 = compilerEnvirons22.getWarnTrailingComma();
        boolean boolean28 = compilerEnvirons22.isIdeMode();
        boolean boolean29 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons30.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setWarnTrailingComma(true);
        boolean boolean36 = compilerEnvirons33.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons33.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser38 = new com.google.javascript.rhino.head.Parser(compilerEnvirons30, errorReporter37);
        com.google.javascript.rhino.head.Parser parser39 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter37);
        compilerEnvirons0.setErrorReporter(errorReporter37);
        boolean boolean41 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertNotNull(evaluatorException18);
        org.junit.Assert.assertNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean27 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateObserverCount(false);
        boolean boolean30 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setWarnTrailingComma(true);
        compilerEnvirons31.setRecoverFromErrors(false);
        compilerEnvirons31.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setWarnTrailingComma(true);
        boolean boolean44 = compilerEnvirons41.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons41.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons38, errorReporter45);
        boolean boolean47 = compilerEnvirons38.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setWarnTrailingComma(true);
        boolean boolean51 = compilerEnvirons48.isRecordingLocalJsDocComments();
        compilerEnvirons48.setWarnTrailingComma(false);
        compilerEnvirons48.setAllowSharpComments(false);
        compilerEnvirons48.setStrictMode(true);
        boolean boolean58 = compilerEnvirons48.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons59 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons59.setWarnTrailingComma(true);
        boolean boolean62 = compilerEnvirons59.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet63 = compilerEnvirons59.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons64 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons64.setWarnTrailingComma(true);
        boolean boolean67 = compilerEnvirons64.isRecordingLocalJsDocComments();
        compilerEnvirons64.setWarnTrailingComma(false);
        compilerEnvirons64.setAllowSharpComments(false);
        boolean boolean72 = compilerEnvirons64.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons73 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons73.setWarnTrailingComma(true);
        java.lang.String[] strArray85 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet86 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet86, strArray85);
        compilerEnvirons73.setActivationNames((java.util.Set<java.lang.String>) strSet86);
        compilerEnvirons64.setActivationNames((java.util.Set<java.lang.String>) strSet86);
        compilerEnvirons59.setActivationNames((java.util.Set<java.lang.String>) strSet86);
        compilerEnvirons48.setActivationNames((java.util.Set<java.lang.String>) strSet86);
        compilerEnvirons38.setActivationNames((java.util.Set<java.lang.String>) strSet86);
        compilerEnvirons31.setActivationNames((java.util.Set<java.lang.String>) strSet86);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet86);
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        java.lang.String str12 = scriptNode1.shortName();
        int int13 = scriptNode1.getFunctionCount();
        int int14 = scriptNode1.getParamCount();
        scriptNode1.setLineno((-732722335));
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        java.lang.String str20 = astRoot18.getSourceName();
        astRoot18.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = astRoot18.getTop();
        java.lang.String str23 = scriptNode22.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot24.getAstRoot();
        java.lang.String str26 = astRoot25.shortName();
        java.lang.String str27 = astRoot25.debugPrint();
        com.google.javascript.rhino.head.Node node28 = astRoot25.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = astRoot25.getStatements();
        int int30 = astRoot25.getFunctionCount();
        astRoot25.setInStrictMode(false);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = null;
        astRoot25.setComments(commentSet33);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet38 = compilerEnvirons35.getActivationNames();
        boolean boolean39 = compilerEnvirons35.recoverFromErrors();
        boolean boolean40 = compilerEnvirons35.getWarnTrailingComma();
        boolean boolean41 = compilerEnvirons35.isIdeMode();
        boolean boolean42 = compilerEnvirons35.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons43.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons46 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons46.setWarnTrailingComma(true);
        boolean boolean49 = compilerEnvirons46.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons46.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons43, errorReporter50);
        com.google.javascript.rhino.head.Parser parser52 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter50);
        boolean boolean53 = compilerEnvirons35.isStrictMode();
        compilerEnvirons35.setStrictMode(false);
        compilerEnvirons35.setLanguageVersion((int) (byte) 100);
        astRoot25.setCompilerData((java.lang.Object) (byte) 100);
        int int59 = astRoot25.getType();
        scriptNode22.addChildToFront((com.google.javascript.rhino.head.Node) astRoot25);
        scriptNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode22);
        int int62 = scriptNode22.getLength();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ScriptNode" + "'", str12, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AstRoot" + "'", str26, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 136 + "'", int59 == 136);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet3 = astRoot1.getComments();
        int int6 = astRoot1.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node7 = astRoot1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        astRoot9.setEncodedSourceEnd(0);
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = astRoot20.getAstRoot();
        java.lang.String str22 = astRoot21.shortName();
        java.lang.String str23 = astRoot21.getSourceName();
        astRoot21.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = astRoot21.getTop();
        java.lang.String str26 = scriptNode25.getSourceName();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        java.lang.String str31 = astRoot29.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode32.getSymbols();
        java.lang.String str34 = astRoot29.toStringTree(scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        int int38 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode32, (com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope41.spliterator();
        astRoot39.addChildScope(scope41);
        java.lang.String str45 = astRoot39.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = astRoot39.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode51 = astRoot50.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode52);
        int int56 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot39, (com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot48, 24);
        astRoot48.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = astRoot48.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode61 = astRoot48.getParent();
        java.lang.String str63 = astRoot48.makeIndent(12);
        int int64 = astRoot48.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) astRoot48, 1246810839);
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope(0, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope70 = scope69.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        scope71.addChild((com.google.javascript.rhino.head.ast.AstNode) scope72);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope72.setTop(scriptNode74);
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        scope76.addChild((com.google.javascript.rhino.head.ast.AstNode) scope77);
        scriptNode74.setCompilerData((java.lang.Object) scope77);
        scriptNode74.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str83 = scriptNode82.getNextTempName();
        com.google.javascript.rhino.head.Node node84 = scriptNode82.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList85 = scriptNode82.getFunctions();
        int int86 = scriptNode82.getEncodedSourceEnd();
        scriptNode74.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode82);
        com.google.javascript.rhino.head.ast.AstRoot astRoot88 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot89 = astRoot88.getAstRoot();
        int int90 = scriptNode82.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot88);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope69, (com.google.javascript.rhino.head.ast.Scope) astRoot88);
        astRoot88.setLength(1034001328);
        astRoot1.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot88);
        java.lang.String str95 = astRoot1.getSourceName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(commentSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertNotNull(astRoot21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AstRoot" + "'", str22, "AstRoot");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(astNode51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(astRoot60);
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        " + "'", str63, "                        ");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "$0" + "'", str83, "$0");
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNotNull(functionNodeList85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(astRoot89);
// flaky:         org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1372425840) + "'", int90 == (-1372425840));
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot6.getAstRoot();
        java.lang.String str8 = astRoot7.shortName();
        com.google.javascript.rhino.head.Node node9 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node10 = node9.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        node9.addChildToFront((com.google.javascript.rhino.head.Node) scope11);
        int int13 = scope11.getLineno();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scope11, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        astRoot7.addChildrenToFront((com.google.javascript.rhino.head.Node) scope17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = astRoot7.new NodeIterator();
        int int21 = astRoot7.getPosition();
        astRoot7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        int int26 = scriptNode24.depth();
        com.google.javascript.rhino.head.ast.Comment comment27 = null;
        scriptNode24.setJsDocNode(comment27);
        com.google.javascript.rhino.head.Node node29 = scriptNode24.getLastSibling();
        scriptNode24.setRelative(1471166993);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(1115693949, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral34 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addRegExp(regExpLiteral34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AstRoot" + "'", str8, "AstRoot");
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(functionNodeList33);
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser3 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean4 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean5 = compilerEnvirons0.isGeneratingSource();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(520361644);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 520361644");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        int int12 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode6, (com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = scope15.spliterator();
        astRoot13.addChildScope(scope15);
        java.lang.String str19 = astRoot13.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = astRoot13.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode25 = astRoot24.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int30 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot13, (com.google.javascript.rhino.head.ast.AstNode) astRoot22);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot22, 24);
        astRoot22.removeChildren();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.Comment comment40 = null;
        scriptNode38.setJsDocNode(comment40);
        int int42 = scriptNode38.getLineno();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str44 = scriptNode38.getJsDoc();
        int int45 = scriptNode38.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode38, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode(26);
        com.google.javascript.rhino.head.ast.Symbol symbol51 = scriptNode49.getSymbol("");
        int int52 = scriptNode49.getEncodedSourceEnd();
        astRoot22.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.lang.String str55 = astRoot22.makeIndent((-979204671));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(astNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(symbol51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList2 = scope1.getChildScopes();
        java.lang.String str3 = scope1.toString();
        com.google.javascript.rhino.head.ast.Scope scope4 = scope1.getParentScope();
        org.junit.Assert.assertNull(scopeList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "129" + "'", str3, "129");
        org.junit.Assert.assertNull(scope4);
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean13 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean14 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        astRoot1.setSourceName("$0");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        java.lang.String str8 = scriptNode6.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node12 = scope11.getNext();
        com.google.javascript.rhino.head.Node node13 = scriptNode6.getChildBefore(node12);
        java.lang.String str14 = scriptNode6.getEncodedSource();
        scriptNode6.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getNextTempName();
        com.google.javascript.rhino.head.Node node20 = scriptNode18.target;
        int int21 = scriptNode18.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node22 = scriptNode18.getLastChild();
        int int23 = scriptNode18.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = scriptNode18.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = scope27.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node31 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node32 = node31.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        node31.addChildToFront((com.google.javascript.rhino.head.Node) scope33);
        scope27.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode30, node31);
        scope27.setRelative(5);
        scriptNode18.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode44);
        int int48 = astRoot40.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator49 = astRoot40.spliterator();
        com.google.javascript.rhino.head.Node node51 = astRoot40.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator53 = scope52.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getNextTempName();
        scope52.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode54.getChildScopes();
        scriptNode54.clearParentScope();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode18, node51, (com.google.javascript.rhino.head.Node) scriptNode54);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((-443001414), (com.google.javascript.rhino.head.Node) scriptNode6, node59);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = node60.new NodeIterator();
        astRoot1.putProp((-197385824), (java.lang.Object) nodeIterator61);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str8, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator49);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(nodeSpliterator53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(scopeList57);
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(1779213838);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 1779213838");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("-3\tSCRIPT -3 1\n");
        boolean boolean2 = node1.hasSideEffects();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int14 = astRoot4.getLength();
        int int15 = astRoot4.depth();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        int int18 = scriptNode17.getBaseLineno();
        astRoot4.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        java.lang.String str7 = scriptNode5.debugPrint();
        scriptNode5.setLineno((int) (byte) -1);
        scriptNode5.flattenSymbolTable(true);
        astRoot0.setTop(scriptNode5);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment14 = null;
        astRoot0.setJsDocNode(comment14);
        java.lang.Object obj17 = astRoot0.getProp((-1516658118));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str7, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(170, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getNextTempName();
        scriptNode3.setLineno((int) (short) 10);
        java.lang.Object obj7 = scriptNode3.getCompilerData();
        scriptNode3.putIntProp((-297370766), 437731425);
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope13 = scriptNode3.getDefiningScope("\210");
        boolean boolean14 = scriptNode3.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot0.spliterator();
        int int13 = astRoot0.getIntProp(1034001328, 722910379);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot0.getAstRoot();
        astRoot0.setEncodedSourceStart((-52));
        int int17 = astRoot0.getEndLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 722910379 + "'", int13 == 722910379);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode1, 520361644);
        scriptNode1.setEndLineno(688626213);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        int int15 = scriptNode11.getIntProp((int) 'a', 19);
        scriptNode11.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        scriptNode11.setSymbols(symbolList18);
        scriptNode11.setPosition(0);
        int int22 = scriptNode1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot24.getAstRoot();
        java.lang.String str26 = astRoot25.shortName();
        java.lang.String str27 = astRoot25.debugPrint();
        com.google.javascript.rhino.head.Node node28 = astRoot25.getFirstChild();
        boolean boolean29 = astRoot25.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        java.lang.String str32 = astRoot30.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        java.lang.String str35 = astRoot30.toStringTree(scriptNode33);
        astRoot30.checkParentLinks();
        int int39 = astRoot30.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getEndLineno();
        java.lang.Object obj43 = astRoot41.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray44 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet45, commentArray44);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet45);
        com.google.javascript.rhino.head.Node node48 = astRoot41.getLastSibling();
        int int49 = node48.getType();
        astRoot30.putProp((int) ' ', (java.lang.Object) node48);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot30, 26);
        astRoot30.setInStrictMode(true);
        astRoot30.setBounds(1159083728, (int) ' ');
        int int58 = scriptNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot30);
        com.google.javascript.rhino.head.Parser parser59 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = parser59.parse("", "-1\tSCRIPT -1 1\n", 19);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = astRoot63.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int66 = astRoot65.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot30.removeChildren();
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 19 + "'", int15 == 19);
        org.junit.Assert.assertNotNull(symbolList18);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1672095980 + "'", int22 == 1672095980);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AstRoot" + "'", str26, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(commentArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 136 + "'", int49 == 136);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(astRoot63);
        org.junit.Assert.assertNull(commentSet64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node1 = node0.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        node0.addChildToFront((com.google.javascript.rhino.head.Node) scope2);
        int int4 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol6 = scope2.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node7 = scope2.getFirstChild();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        boolean boolean12 = compilerEnvirons9.recoverFromErrors();
        compilerEnvirons9.setRecordingComments(true);
        boolean boolean15 = compilerEnvirons9.recoverFromErrors();
        compilerEnvirons9.setWarnTrailingComma(false);
        scope2.putProp((-543879055), (java.lang.Object) compilerEnvirons9);
        compilerEnvirons9.setGenerateDebugInfo(true);
        compilerEnvirons9.setWarnTrailingComma(true);
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(symbol6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        astRoot1.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot1.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        astRoot5.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        astRoot5.visitComments(nodeVisitor8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode(3);
        com.google.javascript.rhino.head.ast.Symbol symbol13 = scriptNode11.getSymbol("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)");
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int24 = astRoot16.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot16, scope25);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope33.spliterator();
        astRoot31.addChildScope(scope33);
        java.lang.String str37 = astRoot31.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        java.lang.String str40 = astRoot38.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode41.getSymbols();
        java.lang.String str43 = astRoot38.toStringTree(scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.setTop(scriptNode47);
        java.lang.String str50 = scope45.toSource(12);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope45);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot5, scope45);
        astRoot5.setRelative(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = astRoot5.new NodeIterator();
        com.google.javascript.rhino.head.Node node56 = astRoot5.getNext();
        com.google.javascript.rhino.head.Parser parser57 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = parser57.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str63 = astRoot62.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator65 = scope64.spliterator();
        astRoot62.addChildScope(scope64);
        astRoot61.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot62);
        com.google.javascript.rhino.head.ast.Symbol symbol69 = astRoot62.getSymbol("                  ");
        int int70 = astRoot62.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            astRoot5.setFinally((com.google.javascript.rhino.head.Node) astRoot62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertNull(symbol13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "136" + "'", str40, "136");
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                        {\n                        }\n" + "'", str50, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(astRoot61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator65);
        org.junit.Assert.assertNull(symbol69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        com.google.javascript.rhino.head.ast.Comment comment3 = null;
        scriptNode0.setJsDocNode(comment3);
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getLastSibling();
        scriptNode0.setRelative(1471166993);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray17 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList18, symbolArray17);
        scriptNode13.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList18);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode13.getSymbols();
        scriptNode13.setRelative(953557037);
        java.lang.String str24 = scriptNode13.getNextTempName();
        java.lang.String str25 = scriptNode13.getNextTempName();
        int int26 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str27 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = scriptNode13.addFunction(functionNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertNotNull(symbolArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$1" + "'", str25, "$1");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$2" + "'", str27, "$2");
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setRecordingLocalJsDocComments(false);
        compilerEnvirons11.setRecoverFromErrors(false);
        compilerEnvirons11.setGenerateDebugInfo(false);
        compilerEnvirons11.setRecordingComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons11.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter20);
        compilerEnvirons0.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.io.Reader reader25 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot28 = parser24.parse(reader25, "ScriptNode", 1559149740);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter20);
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot29.getAstRoot();
        java.lang.String str31 = astRoot30.shortName();
        java.lang.String str32 = astRoot30.debugPrint();
        int int33 = astRoot1.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot30);
        int int34 = astRoot30.getLength();
        com.google.javascript.rhino.head.Node node35 = null;
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int39 = astRoot38.getType();
        com.google.javascript.rhino.head.Node node40 = astRoot38.getFirstChild();
        astRoot38.putIntProp((int) (short) 100, 953557037);
        int int44 = astRoot38.getEndLineno();
        int int45 = astRoot38.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = astRoot47.getAstRoot();
        java.lang.String str49 = astRoot48.shortName();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node51 = node50.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        node50.addChildToFront((com.google.javascript.rhino.head.Node) scope52);
        int int54 = scope52.getLineno();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scope52, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int58 = astRoot57.getEndLineno();
        java.lang.Object obj59 = astRoot57.getCompilerData();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot57);
        int int61 = astRoot57.getType();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot57, (-52));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor64 = null;
        astRoot57.visitComments(nodeVisitor64);
        // The following exception was thrown during execution in test generation
        try {
            astRoot30.replaceChildAfter(node35, (com.google.javascript.rhino.head.Node) astRoot57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AstRoot" + "'", str31, "AstRoot");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str32, "-1\tSCRIPT -1 1\n");
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1119597806) + "'", int33 == (-1119597806));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(astRoot48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AstRoot" + "'", str49, "AstRoot");
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 136 + "'", int61 == 136);
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        int int3 = astRoot0.getRegexpCount();
        int int4 = astRoot0.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor22 = null;
        astRoot9.visitComments(nodeVisitor22);
        astRoot9.clearParentScope();
        int int25 = astRoot9.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode29.getSymbols();
        java.lang.String str31 = astRoot26.toStringTree(scriptNode29);
        scriptNode29.setSourceName("java.io.IOException:                         {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstNode astNode34 = scriptNode29.getParent();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((-1364659253), (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode29);
        int int36 = scriptNode29.getLength();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        boolean boolean41 = scope38.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope43.setTop(scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        scriptNode45.setCompilerData((java.lang.Object) scope48);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.addChild((com.google.javascript.rhino.head.ast.AstNode) scope52);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator54 = scope52.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node57 = node56.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        node56.addChildToFront((com.google.javascript.rhino.head.Node) scope58);
        scope52.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode55, node56);
        scriptNode55.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode55);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator67 = scope65.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node69 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node70 = node69.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        node69.addChildToFront((com.google.javascript.rhino.head.Node) scope71);
        scope65.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode68, node69);
        int int74 = scriptNode68.getEncodedSourceEnd();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        java.lang.String str77 = scriptNode45.makeIndent((-1438167940));
        com.google.javascript.rhino.head.ast.Symbol symbol79 = scriptNode45.getSymbol("-53\tSCRIPT -53 1\n");
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addChildBefore((com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "136" + "'", str28, "136");
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(symbol79);
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = astRoot0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = astRoot0.getSymbols();
        java.lang.String str6 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor7 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$1" + "'", str6, "$1");
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList2 = scope1.getStatements();
        com.google.javascript.rhino.head.Node node4 = scope1.setType(35);
        boolean boolean5 = node4.hasChildren();
        boolean boolean6 = node4.hasSideEffects();
        org.junit.Assert.assertNotNull(astNodeList2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.debugPrint();
        com.google.javascript.rhino.head.Node node5 = astRoot2.getFirstChild();
        boolean boolean6 = astRoot2.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        astRoot7.checkParentLinks();
        int int16 = astRoot7.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getEndLineno();
        java.lang.Object obj20 = astRoot18.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot18.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        com.google.javascript.rhino.head.Node node25 = astRoot18.getLastSibling();
        int int26 = node25.getType();
        astRoot7.putProp((int) ' ', (java.lang.Object) node25);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot7, 26);
        astRoot7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = astRoot7.getEnclosingFunction();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertNull(functionNode32);
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        int int11 = compilerEnvirons0.getLanguageVersion();
        boolean boolean12 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean15 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        int int10 = astRoot8.getEncodedSourceEnd();
        int int11 = astRoot8.getFunctionCount();
        astRoot8.setEncodedSourceStart((int) (short) -1);
        java.lang.String str14 = astRoot8.shortName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = astRoot15.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        astRoot21.checkParentLinks();
        int int30 = astRoot21.getIntProp(11, 32);
        int int31 = astRoot21.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode32.toSource(0);
        scriptNode32.clearParentScope();
        boolean boolean36 = scriptNode32.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = null;
        scriptNode32.setSymbolTable(strMap37);
        int int39 = scriptNode32.getRegexpCount();
        int int40 = scriptNode32.getRegexpCount();
        astRoot21.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode32);
        astRoot15.setTop(scriptNode32);
        com.google.javascript.rhino.head.ast.AstNode astNode43 = scriptNode32.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = scriptNode32.getDefiningScope("                        {\n                        }\n");
        scriptNode32.setEncodedSource("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        // The following exception was thrown during execution in test generation
        try {
            astRoot8.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AstRoot" + "'", str14, "AstRoot");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertNull(commentSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{\n}\n" + "'", str34, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(scope45);
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        astRoot2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        boolean boolean19 = astRoot2.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = astRoot21.getAstRoot();
        java.lang.String str23 = astRoot22.shortName();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        int int28 = scope26.getLineno();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scope26, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = astRoot22.new NodeIterator();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot22, 23);
        java.lang.Object obj38 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator39 = astRoot2.new NodeIterator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(astRoot22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AstRoot" + "'", str23, "AstRoot");
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot4, (com.google.javascript.rhino.head.ast.Scope) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray20 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList21, symbolArray20);
        astRoot18.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        astRoot18.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot31.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int44 = astRoot29.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList46 = astRoot29.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode47.toSource(0);
        scriptNode47.clearParentScope();
        boolean boolean51 = scriptNode47.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        astRoot53.addChildScope(scope55);
        java.lang.String str59 = astRoot53.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        java.lang.String str62 = astRoot60.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode63.getSymbols();
        java.lang.String str65 = astRoot60.toStringTree(scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope67.setTop(scriptNode69);
        java.lang.String str72 = scope67.toSource(12);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope67);
        astRoot53.setBaseLineno(19);
        scriptNode47.addChildToBack((com.google.javascript.rhino.head.Node) astRoot53);
        astRoot53.removeChildren();
        astRoot53.setLength(1115693949);
        java.lang.String str80 = astRoot29.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot53);
        com.google.javascript.rhino.head.ast.Symbol symbol82 = astRoot29.getSymbol("                        {\n                        }\n");
        int int83 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int85 = astRoot29.addFunction(functionNode84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(symbolArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scopeList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{\n}\n" + "'", str49, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                        {\n                        }\n" + "'", str72, "                        {\n                        }\n");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(symbol82);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 13441176 + "'", int83 == 13441176);
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        java.lang.String str13 = astRoot4.toSource(1159083728);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int30 = astRoot17.getRegexpCount();
        com.google.javascript.rhino.head.Node node31 = astRoot17.getNext();
        astRoot17.setBaseLineno(10);
        astRoot17.setEncodedSourceBounds(136, 3);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot4, (com.google.javascript.rhino.head.ast.Scope) astRoot17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = astRoot4.getParamOrVarName(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        java.lang.String str27 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode1.getTop();
        java.lang.String str29 = scriptNode28.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment37 = null;
        astRoot30.setJsDocNode(comment37);
        int int39 = astRoot30.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor40 = null;
        astRoot30.visitComments(nodeVisitor40);
        astRoot30.setEncodedSourceBounds((int) 'a', (int) (short) 1);
        int int45 = astRoot30.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getEndLineno();
        java.lang.Object obj48 = astRoot46.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot46.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        int int54 = astRoot30.getFunctionCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        java.lang.String str57 = astRoot55.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode58.getSymbols();
        java.lang.String str60 = astRoot55.toStringTree(scriptNode58);
        astRoot55.checkParentLinks();
        int int64 = astRoot55.getIntProp(11, 32);
        int int65 = astRoot55.getPosition();
        java.lang.String str66 = astRoot55.debugPrint();
        java.lang.String str67 = astRoot55.toSource();
        int int68 = astRoot55.depth();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str29, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "136" + "'", str57, "136");
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 32 + "'", int64 == 32);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str66, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        scriptNode3.setRelative(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getNextTempName();
        int int17 = scriptNode15.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = astRoot18.getAstRoot();
        java.lang.String str20 = astRoot19.shortName();
        java.lang.String str22 = astRoot19.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = astRoot19.getFunctions();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) astRoot19, 6);
        int int26 = scriptNode15.getFunctionCount();
        scriptNode3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        com.google.javascript.rhino.head.Node node29 = scriptNode15.setType((-1693746091));
        int int30 = scriptNode15.depth();
        int int31 = scriptNode15.getEndLineno();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(astRoot19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AstRoot" + "'", str20, "AstRoot");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        scriptNode0.removeProp(25);
        int int7 = scriptNode0.getPosition();
        scriptNode0.removeProp((-190646821));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean12 = compilerEnvirons0.getAllowSharpComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("", "-1\tSCRIPT -1 1\n", 19);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot4.getComments();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot4.new NodeIterator();
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.setEncodedSourceBounds(12, 10);
        scriptNode11.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = scope22.spliterator();
        astRoot20.addChildScope(scope22);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = astRoot20.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        boolean boolean29 = scope26.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope26, scope30);
        astRoot20.replaceWith(scope26);
        int int35 = astRoot20.getEncodedSourceEnd();
        scriptNode13.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot20);
        astRoot20.setEncodedSourceBounds(8, 1471166993);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode40.toSource(0);
        scriptNode40.clearParentScope();
        boolean boolean44 = scriptNode40.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator49 = scope48.spliterator();
        astRoot46.addChildScope(scope48);
        java.lang.String str52 = astRoot46.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        java.lang.String str55 = astRoot53.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode56.getSymbols();
        java.lang.String str58 = astRoot53.toStringTree(scriptNode56);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.addChild((com.google.javascript.rhino.head.ast.AstNode) scope60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope60.setTop(scriptNode62);
        java.lang.String str65 = scope60.toSource(12);
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scope60);
        astRoot46.setBaseLineno(19);
        scriptNode40.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        astRoot46.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str72 = astRoot71.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator74 = scope73.spliterator();
        astRoot71.addChildScope(scope73);
        java.lang.String str77 = astRoot71.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment78 = null;
        astRoot71.setJsDocNode(comment78);
        int int80 = astRoot71.getType();
        java.lang.String str81 = astRoot71.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap82 = null;
        astRoot71.setSymbolTable(strMap82);
        int int84 = astRoot71.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot86 = new com.google.javascript.rhino.head.ast.AstRoot((-236001159));
        astRoot71.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot86);
        astRoot20.addChildAfter((com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot71);
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot20);
        java.lang.String str90 = astRoot4.debugPrint();
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertNotNull(scopeList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{\n}\n" + "'", str42, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "136" + "'", str55, "136");
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                        {\n                        }\n" + "'", str65, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 136 + "'", int80 == 136);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "0\tSCRIPT 0 0\n" + "'", str90, "0\tSCRIPT 0 0\n");
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        compilerEnvirons10.setWarnTrailingComma(false);
        compilerEnvirons10.setAllowSharpComments(false);
        compilerEnvirons10.setStrictMode(true);
        boolean boolean20 = compilerEnvirons10.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setWarnTrailingComma(true);
        boolean boolean24 = compilerEnvirons21.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet25 = compilerEnvirons21.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        java.lang.String[] strArray47 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        compilerEnvirons35.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        compilerEnvirons26.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        compilerEnvirons21.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons54 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons54.setRecordingLocalJsDocComments(false);
        boolean boolean57 = compilerEnvirons54.isGeneratingSource();
        compilerEnvirons54.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons60 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons60.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter63 = compilerEnvirons60.getErrorReporter();
        boolean boolean64 = compilerEnvirons60.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter65 = compilerEnvirons60.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException71 = errorReporter65.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter65.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser78 = new com.google.javascript.rhino.head.Parser(compilerEnvirons54, errorReporter65);
        com.google.javascript.rhino.head.Parser parser79 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10, errorReporter65);
        compilerEnvirons0.setErrorReporter(errorReporter65);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean83 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(errorReporter63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(errorReporter65);
        org.junit.Assert.assertNotNull(evaluatorException71);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        scriptNode4.flattenSymbolTable(false);
        int int12 = scriptNode4.getType();
        java.lang.String str13 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator17 = scope16.spliterator();
        astRoot14.addChildScope(scope16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = astRoot14.getChildScopes();
        scriptNode4.setCompilerData((java.lang.Object) scopeList19);
        int int21 = scriptNode4.getPosition();
        java.lang.String[] strArray22 = scriptNode4.getParamAndVarNames();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.lang.String str43 = scope38.toSource(12);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot46, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = astRoot46.getComments();
        node44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.Node node52 = astRoot46.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node57 = node56.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        node56.addChildToFront((com.google.javascript.rhino.head.Node) scope58);
        int int60 = scope58.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol62 = scope58.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int65 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scope58, (com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        node52.addChildToFront((com.google.javascript.rhino.head.Node) astRoot64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        boolean boolean75 = astRoot64.isInStrictMode();
        int int76 = scriptNode4.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        com.google.javascript.rhino.head.ast.Comment comment77 = null;
        astRoot64.setJsDocNode(comment77);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "136" + "'", str13, "136");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator17);
        org.junit.Assert.assertNotNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                        {\n                        }\n" + "'", str43, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(commentSet50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(symbol62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-12) + "'", int65 == (-12));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1438167940));
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope3.setTop(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        scriptNode5.setCompilerData((java.lang.Object) scope8);
        scriptNode5.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode13.getFunctions();
        int int17 = scriptNode13.getEncodedSourceEnd();
        scriptNode5.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode5.setBaseLineno(6);
        java.lang.String str21 = scriptNode5.getEncodedSource();
        java.lang.String str22 = scriptNode5.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        int int26 = scriptNode24.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = astRoot27.getAstRoot();
        java.lang.String str29 = astRoot28.shortName();
        java.lang.String str31 = astRoot28.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) astRoot28, 6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = scriptNode24.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.clearParentScope();
        boolean boolean40 = scriptNode36.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap41 = null;
        scriptNode36.setSymbolTable(strMap41);
        int int43 = scriptNode36.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList44 = scriptNode36.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode45.toSource(0);
        scriptNode45.clearParentScope();
        boolean boolean49 = scriptNode45.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator54 = scope53.spliterator();
        astRoot51.addChildScope(scope53);
        java.lang.String str57 = astRoot51.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str59 = astRoot58.getNextTempName();
        java.lang.String str60 = astRoot58.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = scriptNode61.getSymbols();
        java.lang.String str63 = astRoot58.toStringTree(scriptNode61);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scope65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope65.setTop(scriptNode67);
        java.lang.String str70 = scope65.toSource(12);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) scope65);
        astRoot51.setBaseLineno(19);
        scriptNode45.addChildToBack((com.google.javascript.rhino.head.Node) astRoot51);
        astRoot51.removeChildren();
        int int76 = astRoot51.getEncodedSourceEnd();
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode79 = astRoot78.getParent();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope();
        scope81.addChild((com.google.javascript.rhino.head.ast.AstNode) scope82);
        com.google.javascript.rhino.head.Node node84 = scope82.getFirstChild();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope82);
        astRoot78.target = node85;
        com.google.javascript.rhino.head.ast.AstRoot astRoot87 = astRoot78.getAstRoot();
        boolean boolean88 = astRoot87.hasSideEffects();
        astRoot51.addChildToBack((com.google.javascript.rhino.head.Node) astRoot87);
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        scriptNode5.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = scriptNode5.getTop();
        int int93 = scriptNode92.getEncodedSourceEnd();
        boolean boolean94 = scriptNode92.hasSideEffects();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode92);
        scriptNode92.setEncodedSourceStart((-139315390));
        java.lang.String str99 = scriptNode92.toSource(965524926);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(astRoot28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AstRoot" + "'", str29, "AstRoot");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(astNodeList44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{\n}\n" + "'", str47, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "136" + "'", str60, "136");
        org.junit.Assert.assertNotNull(symbolList62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                        {\n                        }\n" + "'", str70, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(astNode79);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNotNull(astRoot87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(scriptNode92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "" + "'", str99, "");
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        com.google.javascript.rhino.head.Node node12 = astRoot1.setType(550287075);
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Scope scope15 = astRoot1.getEnclosingScope();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(scope15);
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot21.getAstRoot();
        astRoot35.setBounds(21, (int) (short) 0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        java.lang.String str41 = astRoot39.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode42.getSymbols();
        java.lang.String str44 = astRoot39.toStringTree(scriptNode42);
        astRoot39.checkParentLinks();
        int int48 = astRoot39.getIntProp(11, 32);
        int int49 = astRoot39.getPosition();
        astRoot35.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot39);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = astRoot39.getSymbols();
        int int52 = astRoot39.getEncodedSourceStart();
        boolean boolean53 = astRoot39.isInStrictMode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = astRoot39.addFunction(functionNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "136" + "'", str41, "136");
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 1189996818);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setGenerateObserverCount(true);
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setWarnTrailingComma(true);
        compilerEnvirons0.setGenerateObserverCount(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons0.getErrorReporter();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-1285574509));
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scope3.getChildScopes();
        scope3.removeProp(640372901);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, scope3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        java.lang.String str11 = scriptNode9.debugPrint();
        scriptNode9.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getEndLineno();
        java.lang.Object obj26 = astRoot24.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        int int32 = astRoot22.getRegexpCount();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot22, 550287075);
        com.google.javascript.rhino.head.Node node35 = astRoot15.target;
        java.lang.String str36 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = astRoot15.getTop();
        java.lang.String str38 = astRoot15.toSource();
        astRoot15.setBounds((-1610320791), 526823265);
        int int42 = astRoot15.getBaseLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = astRoot15.getComments();
        // The following exception was thrown during execution in test generation
        try {
            scope3.setFinally((com.google.javascript.rhino.head.Node) astRoot15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str11, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(commentSet43);
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setStrictMode(false);
        boolean boolean13 = compilerEnvirons0.isRecordingComments();
        boolean boolean14 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        boolean boolean21 = compilerEnvirons18.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet22 = compilerEnvirons18.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setWarnTrailingComma(true);
        boolean boolean26 = compilerEnvirons23.isRecordingLocalJsDocComments();
        compilerEnvirons23.setWarnTrailingComma(false);
        compilerEnvirons23.setAllowSharpComments(false);
        boolean boolean31 = compilerEnvirons23.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        java.lang.String[] strArray44 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        compilerEnvirons32.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons23.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        java.util.Set<java.lang.String> strSet51 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        boolean boolean54 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.debugPrint();
        java.lang.String str3 = astRoot0.getSourceName();
        astRoot0.setEncodedSource("                  ");
        int int6 = astRoot0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.clearParentScope();
        boolean boolean11 = scriptNode7.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scriptNode7.setSymbolTable(strMap12);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        com.google.javascript.rhino.head.ast.Scope scope5 = astRoot0.getEnclosingScope();
        int int6 = astRoot0.getFunctionCount();
        int int9 = astRoot0.getIntProp(125183716, 688626213);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 688626213 + "'", int9 == 688626213);
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-53));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -53");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot4.getParamCount();
        int int18 = astRoot4.getLength();
        com.google.javascript.rhino.head.ast.Scope scope19 = astRoot4.getEnclosingScope();
        boolean boolean20 = astRoot4.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = astRoot21.getAstRoot();
        java.lang.String str23 = astRoot22.shortName();
        java.lang.String str24 = astRoot22.getSourceName();
        astRoot22.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = astRoot22.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setWarnTrailingComma(true);
        boolean boolean30 = compilerEnvirons27.isRecordingLocalJsDocComments();
        compilerEnvirons27.setWarnTrailingComma(false);
        compilerEnvirons27.setAllowSharpComments(false);
        boolean boolean35 = compilerEnvirons27.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setWarnTrailingComma(true);
        java.lang.String[] strArray48 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        compilerEnvirons36.setActivationNames((java.util.Set<java.lang.String>) strSet49);
        compilerEnvirons27.setActivationNames((java.util.Set<java.lang.String>) strSet49);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons53 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons53.setWarnTrailingComma(true);
        boolean boolean56 = compilerEnvirons53.isRecordingLocalJsDocComments();
        compilerEnvirons53.setWarnTrailingComma(false);
        compilerEnvirons53.setAllowSharpComments(false);
        boolean boolean61 = compilerEnvirons53.isGenerateDebugInfo();
        compilerEnvirons53.setIdeMode(false);
        compilerEnvirons53.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons66 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons66.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter69 = compilerEnvirons66.getErrorReporter();
        boolean boolean70 = compilerEnvirons66.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter71 = compilerEnvirons66.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser72 = new com.google.javascript.rhino.head.Parser(compilerEnvirons53, errorReporter71);
        com.google.javascript.rhino.head.IRFactory iRFactory73 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons27, errorReporter71);
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = iRFactory73.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot22.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot77);
        int int79 = astRoot22.getBaseLineno();
        java.lang.String str80 = astRoot4.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot22);
        java.lang.String str82 = astRoot22.toSource(717979331);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(1228108855, (com.google.javascript.rhino.head.Node) astRoot22);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(astRoot22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AstRoot" + "'", str23, "AstRoot");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(errorReporter69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(errorReporter71);
        org.junit.Assert.assertNotNull(astRoot77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node29 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator30.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator31);
        com.google.javascript.rhino.head.Node node33 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node34 = node33.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        node33.addChildToFront((com.google.javascript.rhino.head.Node) scope35);
        int int37 = scope35.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = scope35.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int42 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scope35, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        node29.addChildToFront((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.Node node44 = astRoot41.getLastSibling();
        astRoot41.flattenSymbolTable(false);
        java.lang.String str47 = astRoot41.getEncodedSource();
        com.google.javascript.rhino.head.ast.Comment comment48 = null;
        astRoot41.setJsDocNode(comment48);
        java.lang.String str50 = astRoot41.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-12) + "'", int42 == (-12));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "136" + "'", str50, "136");
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("", "-1\tSCRIPT -1 1\n", 19);
        java.lang.String str6 = astRoot4.toSource(136);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator7 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator9 = positionComparator7.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator8);
        com.google.javascript.rhino.head.Node node10 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node11 = node10.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        node10.addChildToFront((com.google.javascript.rhino.head.Node) scope12);
        int int14 = scope12.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scope12.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int19 = positionComparator8.compare((com.google.javascript.rhino.head.ast.AstNode) scope12, (com.google.javascript.rhino.head.ast.AstNode) astRoot18);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = astRoot18.getComments();
        int int21 = astRoot18.getEncodedSourceStart();
        astRoot4.target = astRoot18;
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = astRoot18.getChildScopes();
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(astNodeComparator9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-12) + "'", int19 == (-12));
        org.junit.Assert.assertNull(commentSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList23);
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = astRoot0.iterator();
        astRoot0.clearParentScope();
        java.lang.String str7 = astRoot0.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope8 = astRoot0.getEnclosingScope();
        boolean boolean9 = astRoot0.isInStrictMode();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setIdeMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        astRoot9.checkParentLinks();
        int int16 = astRoot9.depth();
        com.google.javascript.rhino.head.Node node17 = iRFactory8.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        int int23 = astRoot18.getPosition();
        int int24 = astRoot18.getPosition();
        com.google.javascript.rhino.head.Node node25 = astRoot18.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot9, (com.google.javascript.rhino.head.ast.Scope) astRoot18);
        astRoot18.setPosition(1);
        astRoot18.setLength((-931941363));
        boolean boolean31 = astRoot18.isInStrictMode();
        // The following exception was thrown during execution in test generation
        try {
            astRoot18.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setIdeMode(true);
        int int11 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean12 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean13 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) '#', node13, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode17, 2);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        java.lang.String str26 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        astRoot27.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = astRoot27.getComments();
        astRoot27.setEncodedSourceEnd(11);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        astRoot27.setEncodedSource("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Comment comment45 = null;
        astRoot27.setJsDocNode(comment45);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(commentSet39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(550287075, (-543879055));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getNextTempName();
        com.google.javascript.rhino.head.Node node5 = scriptNode3.target;
        int int6 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node7 = scriptNode3.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = scriptNode3.getSymbols();
        scriptNode3.setBaseLineno(19);
        scope2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode3);
        boolean boolean12 = scope2.hasSideEffects();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = scope2.new NodeIterator();
        boolean boolean14 = nodeIterator13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(symbolList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-391982259));
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = compilerEnvirons0.getErrorReporter();
        errorReporter5.warning("                                    ", "", 0, "java.io.IOException", (-1610320791));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException17 = errorReporter5.runtimeError("89620153", "hi!", (-1024348814), "java.io.IOException:                                                   ", (-791970984));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1024348814");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorReporter5);
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        java.lang.String str5 = astRoot0.toSource((int) (short) 0);
        astRoot0.setBaseLineno(18);
        com.google.javascript.rhino.head.ast.Comment comment8 = null;
        astRoot0.setJsDocNode(comment8);
        astRoot0.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor12 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.setBounds(10, (int) (byte) -1);
        astRoot1.setRelative(129);
        com.google.javascript.rhino.head.ast.Scope scope34 = astRoot1.getParentScope();
        boolean boolean35 = astRoot1.isInStrictMode();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        java.lang.String str30 = scriptNode28.debugPrint();
        scriptNode28.setLineno((int) (byte) -1);
        scriptNode28.flattenSymbolTable(true);
        astRoot23.setTop(scriptNode28);
        astRoot23.clearParentScope();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode42 = astRoot41.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scriptNode43);
        boolean boolean47 = astRoot39.isInStrictMode();
        astRoot39.setRelative((int) '4');
        astRoot23.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot39);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = astRoot23.iterator();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(astNode42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(nodeItor51);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-539267496));
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode50.toSource(0);
        scriptNode50.setEncodedSourceBounds(12, 10);
        astRoot37.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        int int59 = astRoot37.getIntProp((-1), 1051569336);
        java.lang.String str60 = astRoot37.debugPrint();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1051569336 + "'", int59 == 1051569336);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str60, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.isRecordingComments();
        boolean boolean59 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setWarnTrailingComma(true);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.setTop(scriptNode4);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getEndLineno();
        java.lang.Object obj14 = astRoot12.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray15 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet16 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet16, commentArray15);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet16);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getNextTempName();
        com.google.javascript.rhino.head.Node node22 = scriptNode20.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = scriptNode20.getFunctions();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope27.spliterator();
        astRoot25.addChildScope(scope27);
        java.lang.String str31 = astRoot25.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment32 = null;
        astRoot25.setJsDocNode(comment32);
        astRoot25.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean38 = astRoot37.hasSideEffects();
        int int39 = astRoot37.getParamCount();
        astRoot25.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode41.toSource(0);
        scriptNode41.setEncodedSourceBounds(12, 10);
        scriptNode41.setSourceName("");
        astRoot25.setTop(scriptNode41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int51 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray52 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList53, symbolArray52);
        astRoot50.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList53);
        boolean boolean56 = astRoot50.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap57 = astRoot50.getSymbolTable();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot50);
        int int59 = astRoot10.depth();
        int int60 = astRoot10.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode4, node7, (com.google.javascript.rhino.head.Node) astRoot10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = astRoot64.getAstRoot();
        java.lang.String str66 = astRoot65.shortName();
        com.google.javascript.rhino.head.Node node67 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node68 = node67.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        node67.addChildToFront((com.google.javascript.rhino.head.Node) scope69);
        int int71 = scope69.getLineno();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot65, (com.google.javascript.rhino.head.Node) scope69, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int75 = astRoot74.getEndLineno();
        java.lang.Object obj76 = astRoot74.getCompilerData();
        scope69.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        int int78 = astRoot74.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode80 = astRoot79.getParent();
        astRoot79.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap82 = astRoot79.getSymbolTable();
        java.lang.Object obj83 = astRoot79.getCompilerData();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(938587703, (com.google.javascript.rhino.head.Node) astRoot74, (com.google.javascript.rhino.head.Node) astRoot79, 23);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator86 = astRoot79.new NodeIterator();
        java.lang.String str87 = astRoot79.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            astRoot10.setContinue((com.google.javascript.rhino.head.Node) astRoot79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(commentArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(symbolArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(astRoot65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AstRoot" + "'", str66, "AstRoot");
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 136 + "'", int78 == 136);
        org.junit.Assert.assertNull(astNode80);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        boolean boolean10 = scope7.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope7, scope11);
        astRoot1.replaceWith(scope7);
        scope7.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope7.getSymbol("-1\tSCRIPT -1 1\n");
        boolean boolean20 = scope7.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray23 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList24, symbolArray23);
        astRoot21.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList24);
        int int27 = astRoot21.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scope7, (com.google.javascript.rhino.head.Node) astRoot21);
        int int31 = scope7.getIntProp((int) ' ', (-159100019));
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor32 = scope7.iterator();
        com.google.javascript.rhino.head.Node node35 = com.google.javascript.rhino.head.Node.newString(10, "136");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node36 = scope7.getChildBefore(node35);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(symbolArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-159100019) + "'", int31 == (-159100019));
        org.junit.Assert.assertNotNull(nodeItor32);
        org.junit.Assert.assertNotNull(node35);
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet3 = astRoot1.getComments();
        int int6 = astRoot1.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node7 = astRoot1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        astRoot9.setEncodedSourceEnd(0);
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = astRoot20.getAstRoot();
        java.lang.String str22 = astRoot21.shortName();
        java.lang.String str23 = astRoot21.getSourceName();
        astRoot21.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = astRoot21.getTop();
        java.lang.String str26 = scriptNode25.getSourceName();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        java.lang.String str31 = astRoot29.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode32.getSymbols();
        java.lang.String str34 = astRoot29.toStringTree(scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        int int38 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode32, (com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope41.spliterator();
        astRoot39.addChildScope(scope41);
        java.lang.String str45 = astRoot39.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = astRoot39.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode51 = astRoot50.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode52);
        int int56 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot39, (com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot48, 24);
        astRoot48.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = astRoot48.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode61 = astRoot48.getParent();
        java.lang.String str63 = astRoot48.makeIndent(12);
        int int64 = astRoot48.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) astRoot48, 1246810839);
        boolean boolean67 = astRoot1.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node68 = astRoot1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(commentSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertNotNull(astRoot21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AstRoot" + "'", str22, "AstRoot");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(astNode51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(astRoot60);
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        " + "'", str63, "                        ");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException21 = errorReporter15.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException27 = errorReporter15.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter15.runtimeError("java.io.IOException: java.io.IOException: ", "{\n}\n", 520361644, "java.io.IOException: java.io.IOException", (int) (short) 10);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter15.runtimeError("java.io.IOException: java.io.IOException: hi!", "-1\t  BLOCK 0 1\n", (int) (byte) 0, "                  ", 6);
        compilerEnvirons0.setErrorReporter(errorReporter15);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setWarnTrailingComma(true);
        boolean boolean44 = compilerEnvirons41.isRecordingLocalJsDocComments();
        compilerEnvirons41.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter47 = compilerEnvirons41.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException53 = errorReporter47.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException59 = errorReporter47.runtimeError("/", "AstRoot", (int) '4', "                                                                ", 1);
        compilerEnvirons0.setErrorReporter(errorReporter47);
        com.google.javascript.rhino.head.ErrorReporter errorReporter61 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setWarnTrailingComma(true);
        boolean boolean65 = compilerEnvirons62.isRecordingLocalJsDocComments();
        compilerEnvirons62.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter68 = compilerEnvirons62.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException74 = errorReporter68.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException80 = errorReporter68.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException86 = errorReporter68.runtimeError("java.io.IOException: java.io.IOException: ", "{\n}\n", 520361644, "java.io.IOException: java.io.IOException", (int) (short) 10);
        com.google.javascript.rhino.head.Parser parser87 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter68);
        boolean boolean88 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertNotNull(evaluatorException21);
        org.junit.Assert.assertNotNull(evaluatorException27);
        org.junit.Assert.assertNotNull(evaluatorException33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter47);
        org.junit.Assert.assertNotNull(evaluatorException53);
        org.junit.Assert.assertNotNull(evaluatorException59);
        org.junit.Assert.assertNotNull(errorReporter61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(errorReporter68);
        org.junit.Assert.assertNotNull(evaluatorException74);
        org.junit.Assert.assertNotNull(evaluatorException80);
        org.junit.Assert.assertNotNull(evaluatorException86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 0, (-1438167940));
        int int4 = scope3.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode9 = astRoot8.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) scriptNode10);
        astRoot8.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Node node18 = scriptNode16.target;
        int int19 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node20 = scriptNode16.getLastChild();
        int int21 = scriptNode16.getEndLineno();
        astRoot8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = astRoot8.getSymbolTable();
        int int24 = astRoot8.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor25 = null;
        astRoot8.visitComments(nodeVisitor25);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = astRoot8.iterator();
        java.lang.Object obj29 = astRoot8.getProp((int) (short) 1);
        astRoot8.setBaseLineno(17);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) astRoot8, (-645466284));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = astRoot8.getChildScopes();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(astNode9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 136 + "'", int24 == 136);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(scopeList34);
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        astRoot1.setBaseLineno(19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = astRoot1.getEnclosingFunction();
        astRoot1.setEncodedSource("129");
        com.google.javascript.rhino.head.Node node27 = astRoot1.getFirstChild();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertNull(functionNode24);
        org.junit.Assert.assertNull(node27);
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setOptimizationLevel(4);
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean11 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int14 = astRoot4.getLength();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.Node node22 = astRoot15.getNext();
        java.lang.Object obj23 = astRoot15.getCompilerData();
        astRoot15.setEncodedSourceBounds(0, 548641306);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = parser27.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray37 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet38 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet38, commentArray37);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        astRoot43.addChildScope(scope45);
        java.lang.String str49 = astRoot43.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode53.getSymbols();
        java.lang.String str55 = astRoot50.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope57.setTop(scriptNode59);
        java.lang.String str62 = scope57.toSource(12);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scope57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot65, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet69 = astRoot65.getComments();
        node63.addChildToBack((com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.Node node71 = astRoot65.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator72 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator73 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator74 = positionComparator72.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator73);
        com.google.javascript.rhino.head.Node node75 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node76 = node75.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        node75.addChildToFront((com.google.javascript.rhino.head.Node) scope77);
        int int79 = scope77.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol81 = scope77.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int84 = positionComparator73.compare((com.google.javascript.rhino.head.ast.AstNode) scope77, (com.google.javascript.rhino.head.ast.AstNode) astRoot83);
        node71.addChildToFront((com.google.javascript.rhino.head.Node) astRoot83);
        com.google.javascript.rhino.head.ast.AstRoot astRoot86 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int87 = astRoot86.getEndLineno();
        java.lang.Object obj88 = astRoot86.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray89 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet90 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet90, commentArray89);
        astRoot86.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot83.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot4.target = astRoot15;
        boolean boolean98 = astRoot4.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(commentArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                        {\n                        }\n" + "'", str62, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(commentSet69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(astNodeComparator74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(symbol81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-12) + "'", int84 == (-12));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(commentArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        boolean boolean2 = astRoot1.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot(520361644);
        astRoot1.setCompilerData((java.lang.Object) 520361644);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(scopeList6);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        astRoot4.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        int int15 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node16 = scriptNode12.getLastChild();
        int int17 = scriptNode12.getEndLineno();
        astRoot4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = astRoot4.getSymbolTable();
        int int20 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str23 = astRoot22.debugPrint();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = astRoot22.getSymbolTable();
        astRoot22.checkParentLinks();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(627479866, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot22, (-61111));
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str30 = astRoot29.debugPrint();
        astRoot29.setInStrictMode(false);
        int int33 = astRoot29.getType();
        java.lang.Object obj34 = astRoot29.getCompilerData();
        node27.addChildToFront((com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator40 = scope39.spliterator();
        astRoot37.addChildScope(scope39);
        java.lang.String str43 = astRoot37.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        java.lang.String str46 = astRoot44.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode47.getSymbols();
        java.lang.String str49 = astRoot44.toStringTree(scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope51.setTop(scriptNode53);
        java.lang.String str56 = scope51.toSource(12);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope51);
        int int58 = astRoot37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str60 = astRoot59.getNextTempName();
        java.lang.String str61 = astRoot59.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = scriptNode62.getSymbols();
        java.lang.String str64 = astRoot59.toStringTree(scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList65 = scriptNode62.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = astRoot66.getAstRoot();
        java.lang.String str68 = astRoot67.shortName();
        java.lang.String str69 = astRoot67.getSourceName();
        astRoot67.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap71 = astRoot67.getSymbolTable();
        java.lang.String str73 = astRoot67.makeIndent(32);
        astRoot37.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) astRoot67);
        java.lang.String str75 = astRoot67.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            astRoot29.setFinally((com.google.javascript.rhino.head.Node) astRoot67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str23, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str30, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 136 + "'", int33 == 136);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "136" + "'", str46, "136");
        org.junit.Assert.assertNotNull(symbolList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                        {\n                        }\n" + "'", str56, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "$0" + "'", str60, "$0");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "136" + "'", str61, "136");
        org.junit.Assert.assertNotNull(symbolList63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(astNodeList65);
        org.junit.Assert.assertNotNull(astRoot67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AstRoot" + "'", str68, "AstRoot");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                                                                " + "'", str73, "                                                                ");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str75, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getParamCount();
        int int17 = astRoot3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope18 = astRoot3.getEnclosingScope();
        boolean boolean19 = astRoot3.isInStrictMode();
        int int20 = astRoot3.getLineno();
        astRoot3.setRelative(0);
        com.google.javascript.rhino.head.Node node23 = astRoot3.getFirstChild();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        astRoot1.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = astRoot1.iterator();
        astRoot1.setInStrictMode(false);
        boolean boolean9 = astRoot1.isInStrictMode();
        java.lang.String str10 = astRoot1.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope(526823265);
        scope12.removeChildren();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getEnclosingScope();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(953557020, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scope12, 1034001328);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(scope14);
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList2 = scope1.getChildScopes();
        java.lang.String str3 = scope1.toString();
        com.google.javascript.rhino.head.Node node4 = scope1.getNext();
        org.junit.Assert.assertNull(scopeList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "129" + "'", str3, "129");
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '#', node32, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode36, 2);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.setTop(scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        scriptNode47.setCompilerData((java.lang.Object) scope50);
        scriptNode47.setEncodedSourceEnd(0);
        int int55 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode36, (com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        scriptNode47.setSourceName("java.io.IOException: 136");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        astRoot0.setRelative(1796887248);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getEndLineno();
        java.lang.Object obj26 = astRoot24.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        astRoot24.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int37 = astRoot22.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot22);
        astRoot22.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        astRoot0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.ast.Scope scope44 = astRoot0.getDefiningScope("                          ");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scope44);
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = astRoot17.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        boolean boolean26 = scope23.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope23, scope27);
        astRoot17.replaceWith(scope23);
        scope23.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol35 = scope23.getSymbol("-1\tSCRIPT -1 1\n");
        boolean boolean36 = scope23.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int38 = astRoot37.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray39 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList40, symbolArray39);
        astRoot37.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList40);
        int int43 = astRoot37.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scope23, (com.google.javascript.rhino.head.Node) astRoot37);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        int int46 = scriptNode1.getLength();
        java.lang.String str47 = scriptNode1.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scriptNode1.getSymbol("21\tSCRIPT 21 1\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertNotNull(scopeList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(symbol35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(symbolArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNull(symbol49);
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot0.target = astRoot7;
        int int18 = astRoot0.getParamCount();
        java.lang.String str19 = astRoot0.shortName();
        java.lang.Object obj21 = astRoot0.getProp((int) (byte) 10);
        java.lang.Object obj23 = astRoot0.getProp((-1593445669));
        int int24 = astRoot0.getLength();
        int int25 = astRoot0.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        int int4 = scriptNode3.getLineno();
        scriptNode3.removeChildren();
        java.lang.Object obj6 = scriptNode3.getCompilerData();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((-28147116), (com.google.javascript.rhino.head.Node) scriptNode3, 12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        int int12 = scriptNode9.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node13 = scriptNode9.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setRecordingLocalJsDocComments(false);
        boolean boolean18 = compilerEnvirons15.isGeneratingSource();
        compilerEnvirons15.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setWarnTrailingComma(true);
        boolean boolean24 = compilerEnvirons21.isRecordingLocalJsDocComments();
        compilerEnvirons21.setWarnTrailingComma(false);
        compilerEnvirons21.setAllowSharpComments(false);
        boolean boolean29 = compilerEnvirons21.isGenerateDebugInfo();
        compilerEnvirons21.setIdeMode(false);
        compilerEnvirons21.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons34.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons34.getErrorReporter();
        boolean boolean38 = compilerEnvirons34.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons34.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser40 = new com.google.javascript.rhino.head.Parser(compilerEnvirons21, errorReporter39);
        compilerEnvirons15.setErrorReporter(errorReporter39);
        com.google.javascript.rhino.head.IRFactory iRFactory42 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = iRFactory42.parse("  {\n  }\n", "                                                  ", 520361644);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getNextTempName();
        com.google.javascript.rhino.head.Node node50 = scriptNode48.target;
        int int51 = scriptNode48.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node52 = scriptNode48.getLastChild();
        scriptNode48.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap55 = null;
        scriptNode48.setSymbolTable(strMap55);
        int int57 = scriptNode48.getEndLineno();
        com.google.javascript.rhino.head.Node node60 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode48, node60, (int) (short) 1);
        scriptNode9.addChildAfter((com.google.javascript.rhino.head.Node) astRoot46, node60);
        com.google.javascript.rhino.head.Node node64 = node60.getNext();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(1216866709, (com.google.javascript.rhino.head.Node) scriptNode3, node64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(errorReporter39);
        org.junit.Assert.assertNotNull(astRoot46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node64);
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = astRoot3.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = astRoot3.getSymbols();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot3);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        java.lang.String str24 = astRoot18.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str26 = astRoot25.getNextTempName();
        java.lang.String str27 = astRoot25.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = scriptNode28.getSymbols();
        java.lang.String str30 = astRoot25.toStringTree(scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope32.setTop(scriptNode34);
        java.lang.String str37 = scope32.toSource(12);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot40, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = astRoot40.getComments();
        node38.addChildToBack((com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.Node node46 = astRoot40.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = positionComparator47.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator48);
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node51 = node50.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        node50.addChildToFront((com.google.javascript.rhino.head.Node) scope52);
        int int54 = scope52.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol56 = scope52.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int59 = positionComparator48.compare((com.google.javascript.rhino.head.ast.AstNode) scope52, (com.google.javascript.rhino.head.ast.AstNode) astRoot58);
        node46.addChildToFront((com.google.javascript.rhino.head.Node) astRoot58);
        com.google.javascript.rhino.head.Node node61 = astRoot58.getLastSibling();
        boolean boolean62 = astRoot58.hasSideEffects();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot58);
        scriptNode0.addChildrenToFront(node63);
        boolean boolean65 = scriptNode0.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = scriptNode0.toSource();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.AstNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "136" + "'", str27, "136");
        org.junit.Assert.assertNotNull(symbolList29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                        {\n                        }\n" + "'", str37, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(commentSet44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(symbol56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-12) + "'", int59 == (-12));
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        astRoot7.removeProp((int) (short) -1);
        java.lang.String str31 = astRoot7.toSource((-605534234));
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray35 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList36, symbolArray35);
        astRoot33.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        astRoot33.addChildScope(scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int45 = astRoot44.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getEndLineno();
        java.lang.Object obj48 = astRoot46.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot46.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        astRoot46.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getNextTempName();
        com.google.javascript.rhino.head.Node node56 = scriptNode54.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList57 = scriptNode54.getFunctions();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot44, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int59 = astRoot44.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot44);
        astRoot44.removeChildren();
        astRoot7.addChildToFront((com.google.javascript.rhino.head.Node) astRoot44);
        astRoot44.setSourceName("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n}\n" + "'", str31, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(symbolArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNotNull(functionNodeList57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-275341566));
    }
}
