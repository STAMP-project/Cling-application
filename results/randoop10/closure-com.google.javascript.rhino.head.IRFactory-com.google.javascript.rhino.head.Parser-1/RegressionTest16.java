import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getEndLineno();
        java.lang.Object obj10 = astRoot8.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray11 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet12 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet12, commentArray11);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet12);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        java.lang.String str26 = astRoot24.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode27.getSymbols();
        java.lang.String str29 = astRoot24.toStringTree(scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope31.setTop(scriptNode33);
        java.lang.String str36 = scope31.toSource(12);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot39, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = astRoot39.getComments();
        node37.addChildToBack((com.google.javascript.rhino.head.Node) astRoot39);
        com.google.javascript.rhino.head.Node node45 = astRoot39.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator48 = positionComparator46.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator47);
        com.google.javascript.rhino.head.Node node49 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node50 = node49.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        node49.addChildToFront((com.google.javascript.rhino.head.Node) scope51);
        int int53 = scope51.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol55 = scope51.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int58 = positionComparator47.compare((com.google.javascript.rhino.head.ast.AstNode) scope51, (com.google.javascript.rhino.head.ast.AstNode) astRoot57);
        node45.addChildToFront((com.google.javascript.rhino.head.Node) astRoot57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int61 = astRoot60.getEndLineno();
        java.lang.Object obj62 = astRoot60.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray63 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet64, commentArray63);
        astRoot60.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot57.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        astRoot1.setSourceName("                                                  ");
        java.lang.String str73 = astRoot1.toSource((-985380541));
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(commentArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "136" + "'", str26, "136");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                        {\n                        }\n" + "'", str36, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(commentSet43);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(astNodeComparator48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(symbol55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-12) + "'", int58 == (-12));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(commentArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int7 = scriptNode3.getIntProp((int) 'a', 19);
        int int8 = scriptNode3.getFunctionCount();
        int int9 = scriptNode3.getEncodedSourceEnd();
        int int10 = scriptNode3.getLineno();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 19 + "'", int7 == 19);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        astRoot3.checkParentLinks();
        int int12 = astRoot3.getIntProp(11, 32);
        int int13 = astRoot3.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.clearParentScope();
        boolean boolean18 = scriptNode14.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = null;
        scriptNode14.setSymbolTable(strMap19);
        int int21 = scriptNode14.getRegexpCount();
        int int22 = scriptNode14.getRegexpCount();
        astRoot3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot3, (-280309866));
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = astRoot2.getComments();
        boolean boolean27 = astRoot2.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(commentSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope19.setTop(scriptNode21);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scope19.iterator();
        astRoot2.setParentScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot2.getAstRoot();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) astRoot2, 526823265);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode33 = astRoot32.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode34.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode34);
        astRoot32.setInStrictMode(true);
        int int40 = astRoot32.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        astRoot41.checkParentLinks();
        int int50 = astRoot41.getIntProp(11, 32);
        int int51 = astRoot41.getPosition();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((-738182430), (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot41, 2);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str58 = scriptNode55.getJsDoc();
        scriptNode55.clearParentScope();
        java.lang.String str61 = scriptNode55.toSource((-197385824));
        java.lang.String str63 = scriptNode55.makeIndent(170);
        astRoot32.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        scriptNode55.removeChildren();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                    " + "'", str63, "                                                                                                                                                                                                                                                                                                                                                    ");
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int29 = astRoot14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node32 = astRoot14.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.Node node39 = scope37.getFirstChild();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope37);
        astRoot33.target = node40;
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = astRoot33.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = scope44.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node48 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node49 = node48.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        node48.addChildToFront((com.google.javascript.rhino.head.Node) scope50);
        scope44.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, node48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getParamCount();
        java.lang.String str55 = node48.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot53);
        java.lang.String str56 = astRoot53.getNextTempName();
        boolean boolean57 = astRoot53.hasSideEffects();
        java.lang.String str59 = astRoot53.toSource(100);
        node32.addChildAfter((com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(24, node32);
        com.google.javascript.rhino.head.ast.Comment comment62 = null;
        node61.setJsDocNode(comment62);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator64 = node61.new NodeIterator();
        boolean boolean65 = nodeIterator64.hasNext();
        boolean boolean66 = nodeIterator64.hasNext();
        boolean boolean67 = nodeIterator64.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(astRoot42);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator10 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator12 = positionComparator10.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator11);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node14 = node13.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        node13.addChildToFront((com.google.javascript.rhino.head.Node) scope15);
        int int17 = scope15.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope15.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int22 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scope15, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        int int23 = astRoot21.getLineno();
        int int24 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node25 = astRoot0.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot29.getAstRoot();
        java.lang.String str31 = astRoot30.shortName();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node33 = node32.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        node32.addChildToFront((com.google.javascript.rhino.head.Node) scope34);
        int int36 = scope34.getLineno();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scope34, (int) ' ');
        java.lang.String str39 = node38.getJsDoc();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((-236001159), node38, 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        java.lang.String str44 = astRoot42.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        java.lang.String str47 = astRoot42.toStringTree(scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str51 = scope50.toString();
        astRoot42.addChildrenToBack((com.google.javascript.rhino.head.Node) scope50);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((-538615178), node41, (com.google.javascript.rhino.head.Node) scope50, 541550340);
        com.google.javascript.rhino.head.Node node55 = scope50.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            int int56 = astRoot0.getIndexForNameNode((com.google.javascript.rhino.head.Node) scope50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(astNodeComparator12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-12) + "'", int22 == (-12));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AstRoot" + "'", str31, "AstRoot");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "129" + "'", str51, "129");
        org.junit.Assert.assertNotNull(node55);
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scope5);
        int int7 = scope5.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope5.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int12 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope5, (com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope13 = astRoot11.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-12) + "'", int12 == (-12));
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment37 = null;
        astRoot30.setJsDocNode(comment37);
        astRoot30.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean43 = astRoot42.hasSideEffects();
        int int44 = astRoot42.getParamCount();
        astRoot30.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot42);
        scriptNode29.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot42);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor47 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.visit(nodeVisitor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = astRoot0.iterator();
        astRoot0.clearParentScope();
        java.lang.String str8 = astRoot0.makeIndent((-1468440406));
        boolean boolean9 = astRoot0.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getEndLineno();
        java.lang.Object obj26 = astRoot24.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        astRoot24.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int37 = astRoot22.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot22);
        astRoot22.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getEndLineno();
        java.lang.Object obj47 = astRoot45.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot45.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        astRoot45.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getNextTempName();
        com.google.javascript.rhino.head.Node node55 = scriptNode53.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = scriptNode53.getFunctions();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) scriptNode53);
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot45);
        int int59 = astRoot45.getAbsolutePosition();
        int int60 = astRoot45.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setFinally((com.google.javascript.rhino.head.Node) astRoot45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        int int2 = scriptNode0.depth();
        scriptNode0.setPosition(0);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scriptNode0.spliterator();
        java.lang.String str6 = scriptNode0.toSource();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{\n}\n" + "'", str6, "{\n}\n");
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(365262889);
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter25.error("com.google.javascript.rhino.head.EvaluatorException: {\n}\n (#3)", "com.google.javascript.rhino.head.EvaluatorException:   {\n  }\n", (-443001414), "-1\tSCRIPT -1 1\n-1\t  SCRIPT 0 1\n", (-1359343000));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -443001414");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newNumber((double) (-134670566));
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node(482118943, node2, (-646030097));
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        scriptNode5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        boolean boolean13 = scriptNode5.hasConsistentReturnUsage();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor14 = scriptNode5.iterator();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap15 = scriptNode5.getSymbolTable();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeItor14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node7 = astRoot0.target;
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot12.setInStrictMode(true);
        astRoot12.checkParentLinks();
        astRoot0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = astRoot0.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor18 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot17.visitAll(nodeVisitor18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertNotNull(astRoot17);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        int int30 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode24, (com.google.javascript.rhino.head.ast.AstNode) scope27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator20);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator34 = positionComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int47 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot38, (com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        java.lang.String str51 = astRoot49.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode52.getSymbols();
        java.lang.String str54 = astRoot49.toStringTree(scriptNode52);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.addChild((com.google.javascript.rhino.head.ast.AstNode) scope56);
        int int58 = positionComparator48.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode52, (com.google.javascript.rhino.head.ast.AstNode) scope55);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator59 = positionComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator48);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator60 = positionComparator20.thenComparing(astNodeComparator59);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator61 = positionComparator20.reversed();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str64 = astRoot63.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode66 = astRoot65.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) astRoot65, (com.google.javascript.rhino.head.Node) scriptNode67);
        astRoot65.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str74 = scriptNode73.getNextTempName();
        com.google.javascript.rhino.head.Node node75 = scriptNode73.target;
        int int76 = scriptNode73.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node77 = scriptNode73.getLastChild();
        int int78 = scriptNode73.getEndLineno();
        astRoot65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap80 = astRoot65.getSymbolTable();
        int int81 = astRoot65.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope();
        scope82.addChild((com.google.javascript.rhino.head.ast.AstNode) scope83);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope83.setTop(scriptNode85);
        com.google.javascript.rhino.head.ast.Scope scope87 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope88 = new com.google.javascript.rhino.head.ast.Scope();
        scope87.addChild((com.google.javascript.rhino.head.ast.AstNode) scope88);
        scriptNode85.setCompilerData((java.lang.Object) scope88);
        com.google.javascript.rhino.head.ast.AstRoot astRoot91 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot92 = astRoot91.getAstRoot();
        java.lang.String str93 = astRoot92.shortName();
        java.lang.String str94 = astRoot92.debugPrint();
        scope88.addChildToFront((com.google.javascript.rhino.head.Node) astRoot92);
        int int96 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot65, (com.google.javascript.rhino.head.ast.AstNode) astRoot92);
        int int97 = astRoot92.getLineno();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertNotNull(astNodeComparator34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "136" + "'", str51, "136");
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator59);
        org.junit.Assert.assertNotNull(astNodeComparator60);
        org.junit.Assert.assertNotNull(astNodeComparator61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertNull(astNode66);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(astRoot92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "AstRoot" + "'", str93, "AstRoot");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str94, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        int int18 = scope8.getLineno();
        com.google.javascript.rhino.head.Node node19 = scope8.getLastSibling();
        int int20 = node19.getType();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.Comment comment6 = null;
        scriptNode4.setJsDocNode(comment6);
        int int8 = scriptNode4.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scope10.getChildScopes();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) scope10, (int) (short) 10);
        java.lang.Object obj15 = scope10.getProp((-1));
        com.google.javascript.rhino.head.Node node16 = scope10.getLastSibling();
        int int17 = scope10.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope19.setTop(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        scriptNode21.setCompilerData((java.lang.Object) scope24);
        scriptNode21.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getNextTempName();
        com.google.javascript.rhino.head.Node node31 = scriptNode29.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode29.getFunctions();
        int int33 = scriptNode29.getEncodedSourceEnd();
        scriptNode21.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode21.setBaseLineno(6);
        java.lang.String str37 = scriptNode21.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode21.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode21.getTop();
        // The following exception was thrown during execution in test generation
        try {
            scope10.setDefault((com.google.javascript.rhino.head.Node) scriptNode39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 20 + "'", int17 == 20);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNotNull(scriptNode39);
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean9 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean10 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean39 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setGenerateDebugInfo(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        int int5 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser14 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter13);
        boolean boolean15 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        boolean boolean16 = compilerEnvirons6.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        compilerEnvirons17.setWarnTrailingComma(false);
        compilerEnvirons17.setAllowSharpComments(false);
        boolean boolean25 = compilerEnvirons17.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        java.lang.String[] strArray38 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        compilerEnvirons26.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons17.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        boolean boolean45 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        int int48 = compilerEnvirons0.getLanguageVersion();
        boolean boolean49 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        boolean boolean35 = compilerEnvirons32.isRecordingLocalJsDocComments();
        compilerEnvirons32.setWarnTrailingComma(false);
        compilerEnvirons32.setAllowSharpComments(false);
        boolean boolean40 = compilerEnvirons32.isGenerateDebugInfo();
        compilerEnvirons32.setIdeMode(false);
        compilerEnvirons32.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        boolean boolean49 = compilerEnvirons45.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons32, errorReporter50);
        com.google.javascript.rhino.head.IRFactory iRFactory52 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = iRFactory52.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        int int61 = scriptNode58.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node62 = scriptNode58.getLastChild();
        scriptNode58.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = null;
        scriptNode58.setSymbolTable(strMap65);
        astRoot56.setTop(scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scope68.addChild((com.google.javascript.rhino.head.ast.AstNode) scope69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope69.setTop(scriptNode71);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        scope73.addChild((com.google.javascript.rhino.head.ast.AstNode) scope74);
        scriptNode71.setCompilerData((java.lang.Object) scope74);
        int int77 = scriptNode71.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node78 = astRoot56.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasChildren();
        int int7 = astRoot0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getNextTempName();
        int int10 = scriptNode8.depth();
        com.google.javascript.rhino.head.ast.Comment comment11 = null;
        scriptNode8.setJsDocNode(comment11);
        com.google.javascript.rhino.head.Node node13 = scriptNode8.getLastSibling();
        astRoot0.target = scriptNode8;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Node node18 = scriptNode16.target;
        int int19 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node20 = scriptNode16.getLastChild();
        scriptNode16.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = null;
        scriptNode16.setSymbolTable(strMap23);
        int int25 = scriptNode16.getEndLineno();
        com.google.javascript.rhino.head.Node node28 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode16, node28, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray33 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList34, symbolArray33);
        astRoot31.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        astRoot31.addChildScope(scope38);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList41 = astRoot31.getStatements();
        scriptNode16.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot31);
        int int43 = scriptNode16.getLineno();
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        int int45 = scriptNode16.getType();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(symbolArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(astNodeList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 136 + "'", int45 == 136);
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        com.google.javascript.rhino.head.Node node7 = astRoot0.getLastSibling();
        astRoot0.setEncodedSourceBounds((int) (byte) -1, 20);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = astRoot0.getFunctions();
        java.lang.String str12 = astRoot0.getSourceName();
        java.lang.Class<?> wildcardClass13 = astRoot0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node4 = scriptNode0.getLastChild();
        scriptNode0.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = null;
        scriptNode0.setSymbolTable(strMap7);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        compilerEnvirons9.setRecordingComments(true);
        boolean boolean16 = compilerEnvirons9.isGenerateObserverCount();
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int34 = astRoot26.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot26, scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = iRFactory24.transformTree(astRoot26);
        scriptNode38.removeChildren();
        scriptNode38.setEncodedSourceStart(1942790351);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        java.lang.String str45 = astRoot43.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode46.getSymbols();
        java.lang.String str48 = astRoot43.toStringTree(scriptNode46);
        astRoot43.checkParentLinks();
        int int52 = astRoot43.getIntProp(11, 32);
        java.lang.String str53 = astRoot43.toString();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot43);
        astRoot43.setBounds((-483073311), (-557946458));
        int int58 = astRoot43.getLineno();
        java.lang.String str59 = astRoot43.getEncodedSource();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "136" + "'", str45, "136");
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "136" + "'", str53, "136");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getEndLineno();
        java.lang.Object obj26 = astRoot24.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        astRoot24.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int37 = astRoot22.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.Node node40 = astRoot22.getLastSibling();
        boolean boolean41 = astRoot22.isInStrictMode();
        java.lang.String str42 = astRoot22.shortName();
        com.google.javascript.rhino.head.ast.Comment comment43 = astRoot22.getJsDocNode();
        astRoot22.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        java.lang.String str47 = astRoot45.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode48.getSymbols();
        java.lang.String str50 = astRoot45.toStringTree(scriptNode48);
        astRoot45.checkParentLinks();
        int int54 = astRoot45.getIntProp(11, 32);
        int int55 = astRoot45.getPosition();
        java.lang.String str56 = astRoot45.debugPrint();
        java.lang.String str57 = astRoot45.toSource();
        astRoot22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.Node node59 = iRFactory8.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot45);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope60 = astRoot45.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AstRoot" + "'", str42, "AstRoot");
        org.junit.Assert.assertNull(comment43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str56, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(node59);
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getEndLineno();
        java.lang.Object obj7 = astRoot5.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray8 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet9, commentArray8);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet9);
        astRoot5.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode13.getFunctions();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode13);
        int int18 = astRoot5.getRegexpCount();
        com.google.javascript.rhino.head.Node node19 = astRoot5.getNext();
        astRoot5.setEncodedSourceBounds((-8), (-264283662));
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-280309866), (com.google.javascript.rhino.head.Node) astRoot5, 16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode30.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        scriptNode30.setEndLineno(1159083728);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode30, 32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = null;
        astRoot5.setSymbols(symbolList40);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(commentArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertNotNull(functionNodeList35);
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = positionComparator3.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = positionComparator3.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator22 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator23 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = positionComparator22.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator23);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator25 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator26 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator25.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode32 = astRoot31.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int40 = positionComparator25.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot31, (com.google.javascript.rhino.head.ast.AstNode) scope39);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator41 = astNodeComparator24.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator25);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator42 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator43 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator44 = positionComparator42.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator43);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator45 = astNodeComparator41.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator43);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator47 = astNodeComparator41.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator46);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator48 = astNodeComparator47.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator49 = positionComparator3.thenComparing(astNodeComparator47);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator50 = positionComparator3.reversed();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot54.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = scriptNode62.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = scriptNode62.getFunctions();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str71 = astRoot70.getNextTempName();
        java.lang.String str72 = astRoot70.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode73.getSymbols();
        java.lang.String str75 = astRoot70.toStringTree(scriptNode73);
        astRoot70.checkParentLinks();
        int int79 = astRoot70.getIntProp(11, 32);
        int int80 = astRoot70.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str83 = scriptNode81.toSource(0);
        scriptNode81.clearParentScope();
        boolean boolean85 = scriptNode81.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = null;
        scriptNode81.setSymbolTable(strMap86);
        int int88 = scriptNode81.getRegexpCount();
        int int89 = scriptNode81.getRegexpCount();
        astRoot70.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode81);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) astRoot70, (-280309866));
        int int93 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot52, (com.google.javascript.rhino.head.ast.AstNode) astRoot70);
        int int94 = astRoot70.getFunctionCount();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator41);
        org.junit.Assert.assertNotNull(astNodeComparator44);
        org.junit.Assert.assertNotNull(astNodeComparator45);
        org.junit.Assert.assertNotNull(astNodeComparator47);
        org.junit.Assert.assertNotNull(astNodeComparator48);
        org.junit.Assert.assertNotNull(astNodeComparator49);
        org.junit.Assert.assertNotNull(astNodeComparator50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "136" + "'", str72, "136");
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32 + "'", int79 == 32);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{\n}\n" + "'", str83, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = astRoot79.getTop();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet89 = astRoot79.getComments();
        astRoot79.setEncodedSourceEnd((-1277086374));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor92 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot79.visitAll(nodeVisitor92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 884731542 + "'", int67 == 884731542);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNull(commentSet89);
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        astRoot2.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons16.getErrorReporter();
        boolean boolean20 = compilerEnvirons16.isGenerateObserverCount();
        compilerEnvirons16.setRecordingComments(true);
        boolean boolean23 = compilerEnvirons16.isGenerateObserverCount();
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons27.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons16, errorReporter30);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        java.lang.String str39 = astRoot34.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        int int43 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode37, (com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = astRoot44.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int61 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) astRoot53);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, 24);
        astRoot53.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = iRFactory31.transformTree(astRoot53);
        int int66 = astRoot53.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot8, 7);
        int int71 = astRoot8.getEndLineno();
        int int72 = astRoot8.getParamCount();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(astRoot68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        java.lang.Object obj11 = node5.getProp((-791309074));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '#', node32, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode36, 2);
        com.google.javascript.rhino.head.Node node44 = scope35.getLastChild();
        com.google.javascript.rhino.head.Node node45 = astRoot1.getChildBefore(node44);
        java.lang.String str47 = astRoot1.toSource(11);
        astRoot1.removeProp((-443001414));
        int int50 = astRoot1.getLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = astRoot1.getComments();
        int int52 = astRoot1.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(commentSet51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasChildren();
        int int7 = astRoot0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getNextTempName();
        int int10 = scriptNode8.depth();
        com.google.javascript.rhino.head.ast.Comment comment11 = null;
        scriptNode8.setJsDocNode(comment11);
        com.google.javascript.rhino.head.Node node13 = scriptNode8.getLastSibling();
        astRoot0.target = scriptNode8;
        int int15 = scriptNode8.getRegexpCount();
        scriptNode8.putIntProp(0, (-960096572));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        int int1 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateDebugInfo(true);
        int int4 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean5 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        int int6 = astRoot1.getAbsolutePosition();
        java.lang.String str8 = astRoot1.makeIndent(9);
        astRoot1.setLineno(663275392);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (short) 0);
        java.lang.Object obj15 = node13.getProp((-52));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        int int18 = scriptNode16.depth();
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = parser19.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getEndLineno();
        java.lang.Object obj28 = astRoot26.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot26.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = scope37.spliterator();
        astRoot35.addChildScope(scope37);
        java.lang.String str41 = astRoot35.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        java.lang.String str44 = astRoot42.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        java.lang.String str47 = astRoot42.toStringTree(scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope49.setTop(scriptNode51);
        java.lang.String str54 = scope49.toSource(12);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scope49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot57, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet61 = astRoot57.getComments();
        node55.addChildToBack((com.google.javascript.rhino.head.Node) astRoot57);
        com.google.javascript.rhino.head.Node node63 = astRoot57.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator64 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator65 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator66 = positionComparator64.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator65);
        com.google.javascript.rhino.head.Node node67 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node68 = node67.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        node67.addChildToFront((com.google.javascript.rhino.head.Node) scope69);
        int int71 = scope69.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol73 = scope69.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int76 = positionComparator65.compare((com.google.javascript.rhino.head.ast.AstNode) scope69, (com.google.javascript.rhino.head.ast.AstNode) astRoot75);
        node63.addChildToFront((com.google.javascript.rhino.head.Node) astRoot75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int79 = astRoot78.getEndLineno();
        java.lang.Object obj80 = astRoot78.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray81 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet82 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet82, commentArray81);
        astRoot78.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot75.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(22, node13, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) astRoot23);
        java.lang.String str89 = astRoot23.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) astRoot23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                  " + "'", str8, "                  ");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                        {\n                        }\n" + "'", str54, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNull(commentSet61);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(astNodeComparator66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(symbol73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-12) + "'", int76 == (-12));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(commentArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator7 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator8 = positionComparator7.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator10 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator11 = positionComparator9.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator10);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node13 = node12.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        node12.addChildToFront((com.google.javascript.rhino.head.Node) scope14);
        int int16 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scope14.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int21 = positionComparator10.compare((com.google.javascript.rhino.head.ast.AstNode) scope14, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        boolean boolean31 = astRoot23.isInStrictMode();
        astRoot23.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray37 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet38 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet38, commentArray37);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        astRoot34.checkParentLinks();
        int int42 = positionComparator10.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot23, (com.google.javascript.rhino.head.ast.AstNode) astRoot34);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator43 = positionComparator7.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        int int47 = scriptNode44.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.addChild((com.google.javascript.rhino.head.ast.AstNode) scope52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.ast.Comment comment56 = null;
        scriptNode54.setJsDocNode(comment56);
        int int58 = scriptNode54.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scope60.getChildScopes();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) scope60, (int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode54.getChildScopes();
        int int65 = positionComparator10.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode44, (com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode67.getNextTempName();
        int int69 = scriptNode67.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = astRoot70.getAstRoot();
        java.lang.String str72 = astRoot71.shortName();
        java.lang.String str74 = astRoot71.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList75 = astRoot71.getFunctions();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode67, (com.google.javascript.rhino.head.Node) astRoot71, 6);
        com.google.javascript.rhino.head.ast.AstNode astNode78 = scriptNode67.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        int int81 = positionComparator10.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode67, (com.google.javascript.rhino.head.ast.AstNode) scriptNode80);
        java.lang.String str82 = astRoot0.toStringTree(scriptNode67);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertNull(commentSet6);
        org.junit.Assert.assertNotNull(astNodeComparator8);
        org.junit.Assert.assertNotNull(astNodeComparator11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-12) + "'", int21 == (-12));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(commentArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-52) + "'", int42 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(astRoot71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AstRoot" + "'", str72, "AstRoot");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(functionNodeList75);
        org.junit.Assert.assertNull(astNode78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-8) + "'", int81 == (-8));
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot1.spliterator();
        java.lang.Object obj11 = astRoot1.getCompilerData();
        astRoot1.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = astRoot1.getAstRoot();
        int int15 = astRoot1.getEndLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot1.getFunctions();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor7 = null;
        astRoot1.visitComments(nodeVisitor7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot1.getAstRoot();
        astRoot9.setRelative((-324577729));
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(functionNodeList5);
        org.junit.Assert.assertNotNull(astRoot9);
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot8 = parser0.parse("java.io.IOException: java.io.IOException: hi!", "                                                ", 23890841);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: parser reused");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot4);
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean9 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons0.getErrorReporter();
        boolean boolean11 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Comment comment9 = null;
        astRoot1.setJsDocNode(comment9);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("  {\n  }\n");
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.addChild((com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        node12.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(482118943, (com.google.javascript.rhino.head.Node) astRoot1, node12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getNextTempName();
        com.google.javascript.rhino.head.Node node23 = scriptNode21.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = scriptNode21.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = astRoot26.getAstRoot();
        java.lang.String str28 = astRoot27.shortName();
        com.google.javascript.rhino.head.Node node29 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node30 = node29.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        node29.addChildToFront((com.google.javascript.rhino.head.Node) scope31);
        int int33 = scope31.getLineno();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) scope31, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        astRoot27.addChildrenToFront((com.google.javascript.rhino.head.Node) scope37);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator40 = astRoot27.new NodeIterator();
        int int41 = astRoot27.getPosition();
        astRoot27.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        int int46 = scriptNode44.depth();
        com.google.javascript.rhino.head.ast.Comment comment47 = null;
        scriptNode44.setJsDocNode(comment47);
        com.google.javascript.rhino.head.Node node49 = scriptNode44.getLastSibling();
        scriptNode44.setRelative(1471166993);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(1115693949, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode54.getSymbols();
        com.google.javascript.rhino.head.Node node56 = scriptNode54.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode54.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        java.lang.String str60 = scriptNode58.debugPrint();
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        astRoot27.putProp(453396462, (java.lang.Object) scriptNode54);
        // The following exception was thrown during execution in test generation
        try {
            node19.removeChild((com.google.javascript.rhino.head.Node) astRoot27);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(functionNodeList24);
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AstRoot" + "'", str28, "AstRoot");
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str60, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getNextTempName();
        com.google.javascript.rhino.head.Node node12 = scriptNode10.target;
        scriptNode10.setBounds((int) (byte) -1, 23);
        int int16 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode17.setEncodedSourceBounds((int) (short) 100, 10);
        int int25 = scriptNode17.getIntProp(0, 9);
        astRoot4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol34 = astRoot30.getSymbol("java.io.IOException: ");
        astRoot30.setEncodedSourceStart(0);
        java.lang.String str38 = astRoot30.toSource(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray48 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList49, symbolArray48);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scriptNode44.getTop();
        int int53 = scriptNode52.getEncodedSourceEnd();
        astRoot30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Node node55 = astRoot30.getLastChild();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator57 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator58 = positionComparator56.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode63 = astRoot62.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode64.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int71 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot62, (com.google.javascript.rhino.head.ast.AstNode) scope70);
        astRoot62.removeChildren();
        java.lang.String str74 = astRoot62.toSource(10);
        int int75 = astRoot62.getAbsolutePosition();
        java.lang.String str76 = node55.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = astRoot62.getAstRoot();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((-1291599107), (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot77, (int) '4');
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList80 = astRoot4.getStatements();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(symbol34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNotNull(symbolArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(astNodeComparator58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertNull(astNode63);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(astRoot77);
        org.junit.Assert.assertNotNull(astNodeList80);
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode8.toSource(0);
        scriptNode8.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) '#', node4, (com.google.javascript.rhino.head.Node) scope7, (com.google.javascript.rhino.head.Node) scriptNode8, 2);
        com.google.javascript.rhino.head.Node node16 = scope7.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getEndLineno();
        java.lang.Object obj22 = astRoot20.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        astRoot20.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.Node node30 = scriptNode28.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = scriptNode28.getFunctions();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int33 = astRoot18.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.setTop(scriptNode37);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor39 = scope35.iterator();
        astRoot18.setParentScope(scope35);
        scope7.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        astRoot18.setLineno(7);
        astRoot18.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = astRoot46.getAstRoot();
        java.lang.String str48 = astRoot47.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = astRoot47.getTop();
        com.google.javascript.rhino.head.Node node50 = astRoot47.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getEndLineno();
        java.lang.Object obj53 = astRoot51.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray54 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet55 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet55, commentArray54);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet55);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet55);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot47, (-280309866));
        int int61 = astRoot47.getBaseLineno();
        com.google.javascript.rhino.head.Node node62 = astRoot47.getLastChild();
        astRoot47.setInStrictMode(true);
        boolean boolean65 = astRoot47.hasChildren();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(nodeItor39);
        org.junit.Assert.assertNotNull(astRoot47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AstRoot" + "'", str48, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(commentArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = scope10.spliterator();
        astRoot8.addChildScope(scope10);
        java.lang.String str14 = astRoot8.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment15 = null;
        astRoot8.setJsDocNode(comment15);
        astRoot8.setEncodedSourceStart(4);
        astRoot8.removeChildren();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot8);
        astRoot1.setBounds(365262889, (-1106041107));
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((-892379193), 365262889);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node27 = astRoot1.getChildBefore((com.google.javascript.rhino.head.Node) scope26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean11 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 100");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        boolean boolean2 = astRoot0.hasChildren();
        com.google.javascript.rhino.head.Node node3 = astRoot0.getLastChild();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope19.setTop(scriptNode21);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scope19.iterator();
        astRoot2.setParentScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot2.getAstRoot();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) astRoot2, 526823265);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode33 = astRoot32.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode34.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode34);
        astRoot32.setInStrictMode(true);
        int int40 = astRoot32.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        astRoot41.checkParentLinks();
        int int50 = astRoot41.getIntProp(11, 32);
        int int51 = astRoot41.getPosition();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((-738182430), (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot41, 2);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str58 = scriptNode55.getJsDoc();
        scriptNode55.clearParentScope();
        java.lang.String str61 = scriptNode55.toSource((-197385824));
        java.lang.String str63 = scriptNode55.makeIndent(170);
        astRoot32.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        scriptNode55.setEncodedSourceBounds((-1396439634), 955777565);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                    " + "'", str63, "                                                                                                                                                                                                                                                                                                                                                    ");
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        java.lang.String str4 = scriptNode2.debugPrint();
        scriptNode2.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        int int25 = astRoot15.getRegexpCount();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot15, 550287075);
        java.lang.String str28 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode2);
        boolean boolean30 = node29.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        scriptNode34.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        java.lang.String str43 = scriptNode34.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot44.getAstRoot();
        java.lang.String str46 = astRoot45.shortName();
        java.lang.String str48 = astRoot45.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = astRoot45.getFunctions();
        astRoot45.checkParentLinks();
        boolean boolean51 = astRoot45.hasConsistentReturnUsage();
        int int52 = astRoot45.getRegexpCount();
        scriptNode34.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot45);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList54 = scriptNode34.getStatements();
        scriptNode34.setPosition(526823265);
        scriptNode34.setLength(965524926);
        node29.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str28, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AstRoot" + "'", str46, "AstRoot");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(astNodeList54);
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(103333115);
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = astRoot5.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode7);
        astRoot5.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node13 = astRoot5.getNext();
        scriptNode0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot5);
        int int15 = scriptNode0.getPosition();
        int int16 = scriptNode0.getLineno();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(astNode6);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        java.lang.String str5 = astRoot1.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        java.lang.String str11 = astRoot7.makeIndent(18);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot7, 526823265);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean19 = compilerEnvirons14.recoverFromErrors();
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons14.getActivationNames();
        compilerEnvirons14.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = parser23.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot27.setEncodedSourceEnd(4);
        astRoot27.setEncodedSource("$0");
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot27);
        int int33 = astRoot7.getBaseLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor34 = null;
        astRoot7.visitComments(nodeVisitor34);
        astRoot7.setRelative(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        int int41 = scriptNode39.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = astRoot42.getAstRoot();
        java.lang.String str44 = astRoot43.shortName();
        java.lang.String str46 = astRoot43.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList47 = astRoot43.getFunctions();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) astRoot43, 6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int52 = astRoot51.getType();
        com.google.javascript.rhino.head.Node node53 = astRoot51.getFirstChild();
        astRoot51.putIntProp((int) (short) 100, 953557037);
        int int57 = astRoot51.getEndLineno();
        int int58 = astRoot51.getLineno();
        int int61 = astRoot51.getIntProp((-236001159), 0);
        astRoot43.target = astRoot51;
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                    " + "'", str11, "                                    ");
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astRoot43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AstRoot" + "'", str44, "AstRoot");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(functionNodeList47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 136 + "'", int52 == 136);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = astRoot0.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getNextTempName();
        java.lang.String str9 = scriptNode7.debugPrint();
        scriptNode7.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getEndLineno();
        java.lang.Object obj24 = astRoot22.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray25 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet26, commentArray25);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        int int30 = astRoot20.getRegexpCount();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot20, 550287075);
        java.lang.String str33 = scriptNode7.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = scriptNode7.getTop();
        com.google.javascript.rhino.head.Node node35 = scriptNode34.getNext();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = scriptNode34.getSymbol("-1\t  BLOCK 0 1\n");
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = scriptNode34.getParamOrVarName((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(commentArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str33, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(symbol37);
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(938587703);
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        int int4 = astRoot0.getParamCount();
        boolean boolean5 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot0.new NodeIterator();
        astRoot0.checkParentLinks();
        boolean boolean8 = astRoot0.hasSideEffects();
        java.lang.String str9 = astRoot0.debugPrint();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node29 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator30.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator31);
        com.google.javascript.rhino.head.Node node33 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node34 = node33.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        node33.addChildToFront((com.google.javascript.rhino.head.Node) scope35);
        int int37 = scope35.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = scope35.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int42 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scope35, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        node29.addChildToFront((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scope44.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        java.lang.String str50 = scriptNode47.toSource(5);
        astRoot41.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode47.getChildScopes();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-12) + "'", int42 == (-12));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "          {\n          }\n" + "'", str50, "          {\n          }\n");
        org.junit.Assert.assertNull(scopeList52);
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isXmlAvailable();
        boolean boolean12 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean13 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean14 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean15 = compilerEnvirons0.isIdeMode();
        int int16 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.Node node34 = astRoot31.getFirstChild();
        astRoot21.putProp(2, (java.lang.Object) astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        boolean boolean39 = scope36.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope36, scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getEndLineno();
        java.lang.Object obj49 = astRoot47.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray50 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet51, commentArray50);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet51);
        astRoot47.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode55);
        astRoot45.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = astRoot45.getComments();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str66 = scriptNode65.getNextTempName();
        com.google.javascript.rhino.head.Node node67 = scriptNode65.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode65.getFunctions();
        int int69 = scriptNode65.getEncodedSourceEnd();
        java.lang.String str70 = scope40.toStringTree(scriptNode65);
        boolean boolean71 = scriptNode65.hasConsistentReturnUsage();
        scriptNode65.setEncodedSourceEnd((-1396439634));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = scriptNode65.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(commentArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertNull(commentSet63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        int int14 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastChild();
        int int16 = scriptNode11.getEndLineno();
        astRoot3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.lang.String str18 = scriptNode11.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = scriptNode11.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node21 = scriptNode11.setType(0);
        scriptNode11.setEncodedSource("11\tSCRIPT 11 1\n");
        boolean boolean24 = scriptNode11.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(functionNode19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        int int10 = astRoot8.getEncodedSourceEnd();
        int int11 = astRoot8.getFunctionCount();
        astRoot8.setEncodedSourceStart(25);
        int int14 = astRoot8.getLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.lang.String str35 = scope30.toSource(12);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot38, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = astRoot38.getComments();
        node36.addChildToBack((com.google.javascript.rhino.head.Node) astRoot38);
        com.google.javascript.rhino.head.Node node44 = astRoot38.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator47 = positionComparator45.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator46);
        com.google.javascript.rhino.head.Node node48 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node49 = node48.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        node48.addChildToFront((com.google.javascript.rhino.head.Node) scope50);
        int int52 = scope50.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol54 = scope50.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int57 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) scope50, (com.google.javascript.rhino.head.ast.AstNode) astRoot56);
        node44.addChildToFront((com.google.javascript.rhino.head.Node) astRoot56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int60 = astRoot59.getEndLineno();
        java.lang.Object obj61 = astRoot59.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray62 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet63, commentArray62);
        astRoot59.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet63);
        astRoot56.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet63);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet63);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet63);
        java.lang.String str70 = astRoot4.toSource((int) (byte) 1);
        astRoot4.setInStrictMode(false);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = astRoot4.getSymbols();
        astRoot4.putIntProp((-508712079), 1171068332);
        com.google.javascript.rhino.head.Node node77 = astRoot4.getLastChild();
        astRoot4.removeProp(301884070);
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                        {\n                        }\n" + "'", str35, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(commentSet42);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(astNodeComparator47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(symbol54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-12) + "'", int57 == (-12));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(commentArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "  $0;\n" + "'", str70, "  $0;\n");
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(node77);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons10.getErrorReporter();
        compilerEnvirons7.setErrorReporter(errorReporter13);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = iRFactory15.parse("                          ", "/", 1796887248);
        int int20 = astRoot19.getType();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump21 = astRoot19.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertNotNull(astRoot19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(170);
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        int int12 = astRoot2.getRegexpCount();
        com.google.javascript.rhino.head.Node node13 = astRoot2.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = astRoot2.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator16 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        int int26 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode20, (com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.lang.String str33 = astRoot27.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = astRoot27.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int44 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot27, (com.google.javascript.rhino.head.ast.AstNode) astRoot36);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot36, 24);
        astRoot36.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = astRoot36.getAstRoot();
        astRoot36.setEncodedSource("                          ");
        astRoot2.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot36);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) astRoot2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(astRoot48);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(10, "136");
        node2.putIntProp((int) (byte) -1, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        java.lang.String str8 = scriptNode6.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node12 = scope11.getNext();
        com.google.javascript.rhino.head.Node node13 = scriptNode6.getChildBefore(node12);
        java.lang.String str14 = scriptNode6.getEncodedSource();
        scriptNode6.flattenSymbolTable(true);
        java.lang.String str17 = node2.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.lang.String str25 = astRoot19.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode29.getSymbols();
        java.lang.String str31 = astRoot26.toStringTree(scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.setTop(scriptNode35);
        java.lang.String str38 = scope33.toSource(12);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = astRoot19.getSymbols();
        scriptNode6.setSymbols(symbolList40);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode6.labelId((-239565131));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str8, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "136" + "'", str28, "136");
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                        {\n                        }\n" + "'", str38, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList40);
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = astRoot1.getFunctions();
        java.lang.String str9 = astRoot1.toSource();
        int int10 = astRoot1.getFunctionCount();
        astRoot1.checkParentLinks();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getNextTempName();
        scope12.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode14.getChildScopes();
        astRoot1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode14);
        astRoot1.removeProp(437731425);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = astRoot1.getSymbols();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, 2933643);
        boolean boolean24 = astRoot1.hasChildren();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        boolean boolean18 = scope15.hasSideEffects();
        int int19 = scope11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope15);
        boolean boolean20 = scope15.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node22 = scope15.setType((int) (byte) 100);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = scope15.getSymbolTable();
        boolean boolean24 = scope15.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1895172106) + "'", int19 == (-1895172106));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        java.lang.String str27 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode1.getTop();
        com.google.javascript.rhino.head.Node node29 = scriptNode28.getNext();
        int int32 = node29.getIntProp((-791309074), 24);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 24 + "'", int32 == 24);
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setGenerateObserverCount(true);
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = astRoot21.getAstRoot();
        int int36 = astRoot21.getLength();
        astRoot21.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        int int46 = scriptNode42.getIntProp((int) 'a', 19);
        scriptNode42.removeChildren();
        astRoot21.setCompilerData((java.lang.Object) scriptNode42);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 19 + "'", int46 == 19);
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment37 = null;
        astRoot30.setJsDocNode(comment37);
        astRoot30.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean43 = astRoot42.hasSideEffects();
        int int44 = astRoot42.getParamCount();
        astRoot30.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot42);
        scriptNode29.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot42);
        astRoot42.setEndLineno(14);
        astRoot42.setLength((-1610320791));
        int int51 = astRoot42.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope52 = astRoot42.getEnclosingScope();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(scope52);
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = astRoot1.getTop();
        int int5 = astRoot1.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = astRoot1.getSymbols();
        java.lang.String str7 = astRoot1.getNextTempName();
        java.lang.String str8 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        boolean boolean12 = compilerEnvirons9.recoverFromErrors();
        boolean boolean13 = compilerEnvirons9.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory14 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.ast.Comment comment22 = null;
        scriptNode20.setJsDocNode(comment22);
        int int24 = scriptNode20.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scope26.getChildScopes();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope26, (int) (short) 10);
        java.lang.Object obj31 = scope26.getProp((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray36 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList37, symbolArray36);
        astRoot34.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        astRoot34.addChildScope(scope41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getEndLineno();
        java.lang.Object obj49 = astRoot47.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray50 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet51, commentArray50);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet51);
        astRoot47.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode55);
        int int60 = astRoot45.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot45);
        com.google.javascript.rhino.head.Node node63 = astRoot45.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = astRoot64.getAstRoot();
        java.lang.String str66 = astRoot65.shortName();
        java.lang.String str68 = astRoot65.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = astRoot65.getFunctions();
        astRoot65.checkParentLinks();
        boolean boolean71 = astRoot65.hasChildren();
        int int72 = astRoot65.getLineno();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot65, (int) ' ');
        int int75 = astRoot45.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = iRFactory14.transformTree(astRoot45);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(278475323, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode76, (-547091060));
        astRoot1.setSourceName("775058292\tSCRIPT 775058292 1851732708\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$1" + "'", str7, "$1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$2" + "'", str8, "$2");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(symbolArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(commentArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(astRoot65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AstRoot" + "'", str66, "AstRoot");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(scriptNode76);
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        astRoot0.removeProp((int) (short) 0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode21 = astRoot20.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int26 = astRoot18.getParamCount();
        java.lang.String str27 = astRoot18.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray31 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList32, symbolArray31);
        astRoot29.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList32);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        astRoot29.addChildScope(scope36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getEndLineno();
        java.lang.Object obj44 = astRoot42.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray45 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet46 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet46, commentArray45);
        astRoot42.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet46);
        astRoot42.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getNextTempName();
        com.google.javascript.rhino.head.Node node52 = scriptNode50.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode50.getFunctions();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int55 = astRoot40.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot40);
        astRoot40.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int62 = astRoot61.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int64 = astRoot63.getEndLineno();
        java.lang.Object obj65 = astRoot63.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray66 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet67 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet67, commentArray66);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        astRoot63.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getNextTempName();
        com.google.javascript.rhino.head.Node node73 = scriptNode71.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = scriptNode71.getFunctions();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot61, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) scriptNode71);
        astRoot40.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot63);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot63);
        boolean boolean78 = astRoot11.isInStrictMode();
        astRoot0.putProp(1020469049, (java.lang.Object) astRoot11);
        com.google.javascript.rhino.head.Node node82 = com.google.javascript.rhino.head.Node.newString(966287688, "14\tSCRIPT 14 1\n");
        // The following exception was thrown during execution in test generation
        try {
            astRoot11.setDefault(node82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNull(astNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(symbolArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(commentArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(commentArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(functionNodeList74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(node82);
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(653625563);
        boolean boolean2 = scriptNode1.hasSideEffects();
        scriptNode1.setPosition(14);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        com.google.javascript.rhino.head.Node node7 = astRoot0.getLastSibling();
        com.google.javascript.rhino.head.Node node8 = astRoot0.target;
        java.lang.String str9 = astRoot0.getSourceName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getNext();
        java.lang.String str8 = astRoot0.getEncodedSource();
        com.google.javascript.rhino.head.Node node9 = astRoot0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = astRoot0.getStatements();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(astNodeList10);
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        scriptNode0.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        astRoot10.addChildScope(scope12);
        java.lang.String str16 = astRoot10.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope24.setTop(scriptNode26);
        java.lang.String str29 = scope24.toSource(12);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot32, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = astRoot32.getComments();
        node30.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.Node node38 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator39 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator41 = positionComparator39.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator40);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node43 = node42.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        node42.addChildToFront((com.google.javascript.rhino.head.Node) scope44);
        int int46 = scope44.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol48 = scope44.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int51 = positionComparator40.compare((com.google.javascript.rhino.head.ast.AstNode) scope44, (com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        node38.addChildToFront((com.google.javascript.rhino.head.Node) astRoot50);
        com.google.javascript.rhino.head.Node node53 = astRoot50.getLastSibling();
        astRoot50.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str59 = astRoot58.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode61 = astRoot60.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode62.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) scriptNode62);
        int int66 = astRoot58.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope67.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot58, scope67);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope67);
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        scope71.addChild((com.google.javascript.rhino.head.ast.AstNode) scope72);
        boolean boolean74 = scope71.hasSideEffects();
        int int75 = scope67.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope71);
        boolean boolean76 = scope71.hasConsistentReturnUsage();
        astRoot50.addChildrenToFront((com.google.javascript.rhino.head.Node) scope71);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int79 = astRoot78.getEndLineno();
        java.lang.Object obj80 = astRoot78.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol82 = astRoot78.getSymbol("java.io.IOException: ");
        astRoot78.setSourceName("java.io.IOException: ");
        java.lang.String str86 = astRoot78.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot87 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str88 = astRoot87.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope89 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator90 = scope89.spliterator();
        astRoot87.addChildScope(scope89);
        java.lang.String str93 = astRoot87.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap94 = astRoot87.getSymbolTable();
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot78, (com.google.javascript.rhino.head.Node) astRoot87);
        com.google.javascript.rhino.head.ast.AstRoot astRoot96 = astRoot87.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot97 = astRoot96.getAstRoot();
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot96);
        int int99 = scriptNode0.depth();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                        {\n                        }\n" + "'", str29, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(commentSet36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(astNodeComparator41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(symbol48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-12) + "'", int51 == (-12));
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-431917759) + "'", int75 == (-431917759));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(symbol82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "$0" + "'", str88, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNotNull(astRoot96);
        org.junit.Assert.assertNotNull(astRoot97);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean14 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        java.lang.String str11 = astRoot2.debugPrint();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot2);
        astRoot2.flattenSymbolTable(false);
        java.lang.Object obj15 = astRoot2.getCompilerData();
        astRoot2.setBounds(1246810839, (-638464135));
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getEndLineno();
        java.lang.Object obj23 = astRoot21.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray24 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet25, commentArray24);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet25);
        astRoot21.checkParentLinks();
        astRoot21.setEndLineno((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(0);
        scriptNode36.setEncodedSourceBounds(12, 10);
        scriptNode34.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        java.lang.String str43 = scriptNode34.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot44.getAstRoot();
        java.lang.String str46 = astRoot45.shortName();
        java.lang.String str48 = astRoot45.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = astRoot45.getFunctions();
        astRoot45.checkParentLinks();
        boolean boolean51 = astRoot45.hasConsistentReturnUsage();
        int int52 = astRoot45.getRegexpCount();
        scriptNode34.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot45);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot21, (com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newString(852076584, "                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot(23890841);
        java.lang.String str60 = astRoot59.getJsDoc();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(557642528, (com.google.javascript.rhino.head.Node) scriptNode34, node57, (com.google.javascript.rhino.head.Node) astRoot59, 242344114);
        astRoot2.putProp(0, (java.lang.Object) scriptNode34);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = scriptNode34.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope65 = scriptNode34.getParentScope();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str11, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(commentArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AstRoot" + "'", str46, "AstRoot");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(scope65);
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Comment comment8 = null;
        astRoot0.setJsDocNode(comment8);
        com.google.javascript.rhino.head.ast.Comment comment10 = astRoot0.getJsDocNode();
        astRoot0.setEncodedSource("\210");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral13 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addRegExp(regExpLiteral13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(comment10);
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(1471166993);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList2 = astRoot1.getStatements();
        astRoot1.removeChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = astRoot1.addFunction(functionNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeList2);
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException21 = errorReporter15.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException27 = errorReporter15.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        compilerEnvirons0.setErrorReporter(errorReporter15);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean31 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean32 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertNotNull(evaluatorException21);
        org.junit.Assert.assertNotNull(evaluatorException27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setStrictMode(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertNotNull(errorReporter12);
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(24);
        boolean boolean2 = scope1.hasChildren();
        scope1.putIntProp((-484812922), 550287075);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getNextTempName();
        java.lang.String str9 = scriptNode7.debugPrint();
        scriptNode7.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        java.lang.String str15 = astRoot13.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode16.getSymbols();
        java.lang.String str18 = astRoot13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int21 = astRoot20.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getEndLineno();
        java.lang.Object obj24 = astRoot22.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray25 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet26 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet26, commentArray25);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet26);
        int int30 = astRoot20.getRegexpCount();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot20, 550287075);
        com.google.javascript.rhino.head.Node node33 = astRoot13.target;
        java.lang.String str34 = astRoot13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = astRoot13.getTop();
        java.lang.String str36 = astRoot13.toSource();
        astRoot13.setBounds((-1610320791), 526823265);
        int int40 = astRoot13.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        java.lang.String str43 = astRoot41.debugPrint();
        astRoot41.setInStrictMode(true);
        scope1.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot41);
        int int47 = scope1.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str50 = astRoot49.debugPrint();
        astRoot49.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment53 = null;
        astRoot49.setJsDocNode(comment53);
        java.lang.String str55 = astRoot49.getSourceName();
        com.google.javascript.rhino.head.Node node56 = astRoot49.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = astRoot57.getAstRoot();
        java.lang.String str59 = astRoot58.shortName();
        java.lang.String str60 = astRoot58.getSourceName();
        int int61 = astRoot58.getAbsolutePosition();
        int int62 = astRoot58.getPosition();
        astRoot49.addChildToFront((com.google.javascript.rhino.head.Node) astRoot58);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) astRoot58);
        int int65 = scope1.getType();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(commentArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str43, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 24 + "'", int47 == 24);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str50, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(astRoot58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AstRoot" + "'", str59, "AstRoot");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 129 + "'", int65 == 129);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setWarnTrailingComma(true);
        boolean boolean4 = compilerEnvirons1.isRecordingLocalJsDocComments();
        compilerEnvirons1.setWarnTrailingComma(false);
        compilerEnvirons1.setAllowSharpComments(false);
        boolean boolean9 = compilerEnvirons1.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        compilerEnvirons10.setWarnTrailingComma(false);
        compilerEnvirons10.setAllowSharpComments(false);
        boolean boolean18 = compilerEnvirons10.isGenerateDebugInfo();
        compilerEnvirons10.setIdeMode(false);
        compilerEnvirons10.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons23.getErrorReporter();
        boolean boolean27 = compilerEnvirons23.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter28 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser29 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10, errorReporter28);
        com.google.javascript.rhino.head.Parser parser30 = new com.google.javascript.rhino.head.Parser(compilerEnvirons1, errorReporter28);
        errorReporter28.warning("-1", "21", 24, "", (-17617447));
        errorReporter28.warning("$1", "                                ", (-443550523), "775058292", 441866554);
        com.google.javascript.rhino.head.Parser parser43 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(errorReporter28);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGeneratingSource();
        boolean boolean22 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean23 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean24 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        int int5 = astRoot1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot7.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = astRoot7.getComments();
        astRoot1.target = astRoot7;
        java.lang.String str27 = astRoot7.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str33 = scriptNode30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope36, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = astRoot39.getAstRoot();
        java.lang.String str41 = astRoot40.shortName();
        java.lang.String str42 = astRoot40.getSourceName();
        astRoot40.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap44 = astRoot40.getSymbolTable();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        java.lang.String str48 = astRoot46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = astRoot46.getTop();
        int int50 = astRoot46.getParamCount();
        boolean boolean51 = astRoot46.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator52 = astRoot46.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol54 = astRoot46.getSymbol("                                    ");
        boolean boolean55 = astRoot46.isInStrictMode();
        astRoot40.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot46);
        astRoot7.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot46);
        astRoot7.removeProp(381115453);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        java.lang.String str62 = astRoot60.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = astRoot60.getTop();
        int int64 = astRoot60.getParamCount();
        astRoot60.checkParentLinks();
        astRoot60.setEndLineno(775058292);
        com.google.javascript.rhino.head.Node node68 = astRoot60.getFirstChild();
        com.google.javascript.rhino.head.Node node69 = astRoot60.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.addChildToFront(node69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertNull(commentSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(astRoot40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AstRoot" + "'", str41, "AstRoot");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(symbol54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(node69);
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = astRoot29.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        boolean boolean38 = scope35.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope35, scope39);
        astRoot29.replaceWith(scope35);
        java.lang.String str44 = scope35.debugPrint();
        astRoot23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        java.lang.String str47 = astRoot23.toSource((-2110645446));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator48 = astRoot23.new NodeIterator();
        com.google.javascript.rhino.head.Node node49 = nodeIterator48.next();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(scopeList34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n" + "'", str44, "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{\n{\n}\n}\n" + "'", str47, "{\n{\n}\n}\n");
        org.junit.Assert.assertNotNull(node49);
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = astRoot5.getParent();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.Node node11 = scope9.getFirstChild();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope9);
        astRoot5.target = node12;
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot5, (com.google.javascript.rhino.head.ast.Scope) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList47 = astRoot30.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode48.toSource(0);
        scriptNode48.clearParentScope();
        boolean boolean52 = scriptNode48.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator57 = scope56.spliterator();
        astRoot54.addChildScope(scope56);
        java.lang.String str60 = astRoot54.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        java.lang.String str63 = astRoot61.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode64.getSymbols();
        java.lang.String str66 = astRoot61.toStringTree(scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scope67.addChild((com.google.javascript.rhino.head.ast.AstNode) scope68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope68.setTop(scriptNode70);
        java.lang.String str73 = scope68.toSource(12);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode64, (com.google.javascript.rhino.head.Node) scope68);
        astRoot54.setBaseLineno(19);
        scriptNode48.addChildToBack((com.google.javascript.rhino.head.Node) astRoot54);
        astRoot54.removeChildren();
        astRoot54.setLength(1115693949);
        java.lang.String str81 = astRoot30.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot54);
        com.google.javascript.rhino.head.ast.Symbol symbol83 = astRoot30.getSymbol("                        {\n                        }\n");
        int int84 = astRoot5.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot30);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot5, (-55137080));
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(astNode6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(scopeList47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{\n}\n" + "'", str50, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "136" + "'", str63, "136");
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                        {\n                        }\n" + "'", str73, "                        {\n                        }\n");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(symbol83);
// flaky:         org.junit.Assert.assertTrue("'" + int84 + "' != '" + 917048139 + "'", int84 == 917048139);
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean34 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons44.setWarnTrailingComma(true);
        java.lang.String[] strArray56 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        compilerEnvirons44.setActivationNames((java.util.Set<java.lang.String>) strSet57);
        compilerEnvirons35.setActivationNames((java.util.Set<java.lang.String>) strSet57);
        compilerEnvirons35.setAllowMemberExprAsFunctionName(true);
        int int63 = compilerEnvirons35.getOptimizationLevel();
        boolean boolean64 = compilerEnvirons35.getAllowSharpComments();
        java.util.Set<java.lang.String> strSet65 = compilerEnvirons35.getActivationNames();
        compilerEnvirons0.setActivationNames(strSet65);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strSet65);
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-289553421), "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot((-236001159));
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = astRoot4.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        astRoot6.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = astRoot6.getAstRoot();
        java.lang.String str11 = astRoot10.shortName();
        astRoot10.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor13 = null;
        astRoot10.visitComments(nodeVisitor13);
        astRoot10.setRelative((-665324045));
        java.lang.String str17 = astRoot10.shortName();
        node2.addChildAfter((com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot10);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node19 = astRoot4.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AstRoot" + "'", str11, "AstRoot");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AstRoot" + "'", str17, "AstRoot");
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setRecordingLocalJsDocComments(false);
        boolean boolean21 = compilerEnvirons18.isGeneratingSource();
        compilerEnvirons18.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons24.getErrorReporter();
        boolean boolean28 = compilerEnvirons24.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons24.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException35 = errorReporter29.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter29.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons18, errorReporter29);
        compilerEnvirons0.setErrorReporter(errorReporter29);
        int int44 = compilerEnvirons0.getOptimizationLevel();
        int int45 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertNotNull(evaluatorException35);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        int int30 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode24, (com.google.javascript.rhino.head.ast.AstNode) scope27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        int int36 = scriptNode33.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node37 = scriptNode33.getLastChild();
        scriptNode33.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = null;
        scriptNode33.setSymbolTable(strMap40);
        int int42 = scriptNode33.getEndLineno();
        com.google.javascript.rhino.head.Node node45 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode33, node45, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray50 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList51, symbolArray50);
        astRoot48.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList51);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope54.addChild((com.google.javascript.rhino.head.ast.AstNode) scope55);
        astRoot48.addChildScope(scope55);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList58 = astRoot48.getStatements();
        scriptNode33.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot48);
        int int60 = scriptNode33.getLineno();
        int int61 = scriptNode33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator65 = scope63.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node67 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node68 = node67.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        node67.addChildToFront((com.google.javascript.rhino.head.Node) scope69);
        scope63.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode66, node67);
        scriptNode66.flattenSymbolTable(false);
        int int74 = scriptNode66.getType();
        java.lang.String str75 = scriptNode66.toString();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str77 = astRoot76.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator79 = scope78.spliterator();
        astRoot76.addChildScope(scope78);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList81 = astRoot76.getChildScopes();
        scriptNode66.setCompilerData((java.lang.Object) scopeList81);
        int int83 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode33, (com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.lang.String str84 = scriptNode66.getEncodedSource();
        com.google.javascript.rhino.head.ast.Symbol symbol85 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode66.putSymbol(symbol85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(symbolArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(astNodeList58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 136 + "'", int74 == 136);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "136" + "'", str75, "136");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator79);
        org.junit.Assert.assertNotNull(scopeList81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator24 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator25 = positionComparator21.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str31 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope34, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = astRoot37.getAstRoot();
        java.lang.String str39 = astRoot38.shortName();
        java.lang.String str40 = astRoot38.getSourceName();
        astRoot38.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap42 = astRoot38.getSymbolTable();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) astRoot38);
        int int44 = scope34.getLineno();
        com.google.javascript.rhino.head.Node node45 = scope34.getLastSibling();
        int int46 = scope34.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray50 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList51, symbolArray50);
        astRoot48.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList51);
        boolean boolean54 = astRoot48.hasConsistentReturnUsage();
        astRoot48.setLineno((-3));
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) astRoot48);
        int int58 = positionComparator24.compare((com.google.javascript.rhino.head.ast.AstNode) scope34, (com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        java.lang.String str60 = astRoot48.toSource((-1291599107));
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope66 = scope62.getParentScope();
        boolean boolean67 = scope62.hasConsistentReturnUsage();
        astRoot48.setCompilerData((java.lang.Object) boolean67);
        java.lang.String str70 = astRoot48.makeIndent(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getNextTempName();
        int int73 = scriptNode71.depth();
        com.google.javascript.rhino.head.ast.Comment comment74 = null;
        scriptNode71.setJsDocNode(comment74);
        int int76 = scriptNode71.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int78 = astRoot77.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = astRoot77.getComments();
        int int82 = astRoot77.getIntProp(0, 0);
        astRoot77.setSourceName("    {\n    }\n");
        scriptNode71.target = astRoot77;
        com.google.javascript.rhino.head.ast.Symbol symbol87 = astRoot77.getSymbol("java.io.IOException: java.io.IOException: java.io.IOException");
        astRoot48.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot77);
        int int89 = astRoot77.getRegexpCount();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(astRoot38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AstRoot" + "'", str39, "AstRoot");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(symbolArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(scope66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                                " + "'", str70, "                                                ");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(commentSet79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(symbol87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        java.lang.String str9 = scriptNode5.toSource();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        int int10 = astRoot8.getEncodedSourceEnd();
        int int11 = astRoot8.getFunctionCount();
        astRoot8.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        astRoot15.setEncodedSourceBounds(21, (int) (short) 10);
        astRoot15.setInStrictMode(true);
        astRoot8.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot15);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = astRoot15.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scope28.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node33 = node32.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        node32.addChildToFront((com.google.javascript.rhino.head.Node) scope34);
        scope28.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, node32);
        scriptNode31.flattenSymbolTable(false);
        int int39 = scriptNode31.getType();
        scriptNode31.setBaseLineno(5);
        int int42 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        com.google.javascript.rhino.head.Node node44 = astRoot0.setType((-1438167940));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor45 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1326393489 + "'", int42 == 1326393489);
        org.junit.Assert.assertNotNull(node44);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot33, scope42);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope42);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        scope46.addChild((com.google.javascript.rhino.head.ast.AstNode) scope47);
        boolean boolean49 = scope46.hasSideEffects();
        int int50 = scope42.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode30, scope46);
        java.lang.String str52 = scope46.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope46.visit(nodeVisitor53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-445178606) + "'", int50 == (-445178606));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n" + "'", str52, "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean9 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        int int3 = astRoot0.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = astRoot0.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = functionNode4.getFunctions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(functionNode4);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getNext();
        java.lang.Object obj8 = astRoot0.getCompilerData();
        astRoot0.setEncodedSourceBounds(0, 548641306);
        com.google.javascript.rhino.head.Parser parser12 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = parser12.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getEndLineno();
        java.lang.Object obj21 = astRoot19.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        java.lang.String str37 = astRoot35.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode38.getSymbols();
        java.lang.String str40 = astRoot35.toStringTree(scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope42.setTop(scriptNode44);
        java.lang.String str47 = scope42.toSource(12);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot50, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = astRoot50.getComments();
        node48.addChildToBack((com.google.javascript.rhino.head.Node) astRoot50);
        com.google.javascript.rhino.head.Node node56 = astRoot50.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator57 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator58 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator59 = positionComparator57.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator58);
        com.google.javascript.rhino.head.Node node60 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node61 = node60.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        node60.addChildToFront((com.google.javascript.rhino.head.Node) scope62);
        int int64 = scope62.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol66 = scope62.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int69 = positionComparator58.compare((com.google.javascript.rhino.head.ast.AstNode) scope62, (com.google.javascript.rhino.head.ast.AstNode) astRoot68);
        node56.addChildToFront((com.google.javascript.rhino.head.Node) astRoot68);
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int72 = astRoot71.getEndLineno();
        java.lang.Object obj73 = astRoot71.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray74 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet75 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet75, commentArray74);
        astRoot71.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        astRoot68.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        com.google.javascript.rhino.head.Node node82 = astRoot0.getFirstChild();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(astRoot16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "136" + "'", str37, "136");
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(commentSet54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(astNodeComparator59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(symbol66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-12) + "'", int69 == (-12));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(commentArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(node82);
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope3 = astRoot1.getDefiningScope("AstRoot");
        astRoot1.setEncodedSourceStart((int) (byte) -1);
        int int6 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor7 = null;
        astRoot1.visitComments(nodeVisitor7);
        java.lang.String str9 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray16 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList17, symbolArray16);
        astRoot14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        astRoot14.addChildScope(scope21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        astRoot27.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getNextTempName();
        com.google.javascript.rhino.head.Node node37 = scriptNode35.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode35.getFunctions();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int40 = astRoot25.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot25);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList42 = astRoot25.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = astRoot25.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment51 = null;
        astRoot44.setJsDocNode(comment51);
        int int53 = astRoot44.getType();
        java.lang.String str54 = astRoot44.getEncodedSource();
        astRoot44.setInStrictMode(false);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(703513808, (com.google.javascript.rhino.head.Node) scope12, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot44, (int) (byte) 1);
        astRoot1.addChildToFront((com.google.javascript.rhino.head.Node) scope12);
        java.lang.String str61 = astRoot1.toSource((-28147116));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "11\tSCRIPT 11 1\n" + "'", str9, "11\tSCRIPT 11 1\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(symbolArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList42);
        org.junit.Assert.assertNotNull(astRoot43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 136 + "'", int53 == 136);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        int int11 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        int int23 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode17, (com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = astRoot24.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot33, 24);
        astRoot33.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot33.getAstRoot();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = astRoot33.getAstRoot();
        int int48 = astRoot47.getType();
        java.lang.Object obj50 = astRoot47.getProp((-419350393));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertNotNull(astRoot47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 136 + "'", int48 == 136);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException26 = errorReporter20.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter20);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(evaluatorException26);
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = scriptNode26.getStatements();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = astRoot30.getAstRoot();
        java.lang.String str32 = astRoot31.shortName();
        java.lang.String str33 = astRoot31.getSourceName();
        astRoot31.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = astRoot31.getSymbolTable();
        java.lang.String str37 = astRoot31.makeIndent(32);
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.Comment comment39 = astRoot31.getJsDocNode();
        java.lang.String str40 = astRoot31.getEncodedSource();
        astRoot31.setEncodedSourceEnd(444385247);
        boolean boolean43 = astRoot31.isInStrictMode();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AstRoot" + "'", str32, "AstRoot");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                " + "'", str37, "                                                                ");
        org.junit.Assert.assertNull(comment39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        astRoot0.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = astRoot0.getSymbolTable();
        java.lang.Object obj4 = astRoot0.getCompilerData();
        astRoot0.setEncodedSourceEnd(717979331);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot8.getAstRoot();
        java.lang.String str10 = astRoot9.shortName();
        com.google.javascript.rhino.head.Node node11 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node12 = node11.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        node11.addChildToFront((com.google.javascript.rhino.head.Node) scope13);
        int int15 = scope13.getLineno();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scope13, (int) ' ');
        astRoot0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot9);
        astRoot0.setBaseLineno(956776324);
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AstRoot" + "'", str10, "AstRoot");
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        astRoot7.flattenSymbolTable(true);
        java.lang.String str30 = astRoot7.toSource((int) (short) 10);
        astRoot7.setRelative((-134670566));
        astRoot7.setEncodedSource("-1796887249\tSCRIPT -1796887249 1\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-1617990777), "526823265");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        scriptNode0.setBounds((int) (byte) 0, 3);
        boolean boolean8 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet12 = compilerEnvirons9.getActivationNames();
        boolean boolean13 = compilerEnvirons9.recoverFromErrors();
        boolean boolean14 = compilerEnvirons9.getWarnTrailingComma();
        boolean boolean15 = compilerEnvirons9.isIdeMode();
        boolean boolean16 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = astRoot20.getAstRoot();
        java.lang.String str22 = astRoot21.shortName();
        java.lang.String str23 = astRoot21.getSourceName();
        astRoot21.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = astRoot21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = iRFactory19.transformTree(astRoot21);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        scriptNode0.setBounds((-17617447), (-1233410715));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = scriptNode0.addFunction(functionNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(astRoot21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AstRoot" + "'", str22, "AstRoot");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(scriptNode26);
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot35.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getNextTempName();
        com.google.javascript.rhino.head.Node node45 = scriptNode43.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode43.getFunctions();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode43);
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot35);
        astRoot12.setBaseLineno(1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getNextTempName();
        com.google.javascript.rhino.head.Node node53 = scriptNode51.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode51.getFunctions();
        int int55 = scriptNode51.getEncodedSourceEnd();
        scriptNode51.setBounds((int) (byte) 0, 3);
        astRoot12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        int int60 = scriptNode51.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor61 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode51.visit(nodeVisitor61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet12 = compilerEnvirons9.getActivationNames();
        boolean boolean13 = compilerEnvirons9.recoverFromErrors();
        boolean boolean14 = compilerEnvirons9.getWarnTrailingComma();
        boolean boolean15 = compilerEnvirons9.isIdeMode();
        boolean boolean16 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setWarnTrailingComma(true);
        boolean boolean23 = compilerEnvirons20.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17, errorReporter24);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter24);
        boolean boolean27 = compilerEnvirons9.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setWarnTrailingComma(true);
        boolean boolean31 = compilerEnvirons28.isRecordingLocalJsDocComments();
        compilerEnvirons28.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException40 = errorReporter34.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter34);
        compilerEnvirons0.setErrorReporter(errorReporter34);
        compilerEnvirons0.setGenerateObserverCount(true);
        compilerEnvirons0.setAllowSharpComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory47 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        astRoot48.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = astRoot48.getAstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        java.lang.String str57 = astRoot55.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode58.getSymbols();
        java.lang.String str60 = astRoot55.toStringTree(scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.addChild((com.google.javascript.rhino.head.ast.AstNode) scope62);
        int int64 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode58, (com.google.javascript.rhino.head.ast.AstNode) scope61);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator68 = scope67.spliterator();
        astRoot65.addChildScope(scope67);
        java.lang.String str71 = astRoot65.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList72 = astRoot65.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot76.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot74, (com.google.javascript.rhino.head.Node) astRoot76, (com.google.javascript.rhino.head.Node) scriptNode78);
        int int82 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot65, (com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        astRoot52.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = iRFactory47.transformTree(astRoot74);
        astRoot74.setBaseLineno(191686611);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertNotNull(evaluatorException40);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(astRoot52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "136" + "'", str57, "136");
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(functionNodeList72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(scriptNode84);
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = astRoot0.getChildScopes();
        java.lang.String str6 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node7 = astRoot0.target;
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = parser8.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot12.setInStrictMode(true);
        astRoot12.checkParentLinks();
        astRoot0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = astRoot0.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node18 = astRoot0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNotNull(scopeList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "136" + "'", str6, "136");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertNotNull(astRoot17);
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        int int45 = astRoot31.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Comment comment46 = astRoot31.getJsDocNode();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(comment46);
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        int int15 = astRoot11.getType();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = astRoot11.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = astRoot18.getTop();
        int int22 = astRoot18.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = astRoot18.getSymbols();
        java.lang.String str24 = astRoot18.getNextTempName();
        java.lang.String str25 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        boolean boolean29 = compilerEnvirons26.recoverFromErrors();
        boolean boolean30 = compilerEnvirons26.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons26);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.Comment comment39 = null;
        scriptNode37.setJsDocNode(comment39);
        int int41 = scriptNode37.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scope43.getChildScopes();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope43, (int) (short) 10);
        java.lang.Object obj48 = scope43.getProp((-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray53 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList54, symbolArray53);
        astRoot51.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList54);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope57.addChild((com.google.javascript.rhino.head.ast.AstNode) scope58);
        astRoot51.addChildScope(scope58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int65 = astRoot64.getEndLineno();
        java.lang.Object obj66 = astRoot64.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray67 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet68 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet68, commentArray67);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet68);
        astRoot64.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str73 = scriptNode72.getNextTempName();
        com.google.javascript.rhino.head.Node node74 = scriptNode72.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList75 = scriptNode72.getFunctions();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) scriptNode72);
        int int77 = astRoot62.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot62);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot62);
        com.google.javascript.rhino.head.Node node80 = astRoot62.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot82 = astRoot81.getAstRoot();
        java.lang.String str83 = astRoot82.shortName();
        java.lang.String str85 = astRoot82.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList86 = astRoot82.getFunctions();
        astRoot82.checkParentLinks();
        boolean boolean88 = astRoot82.hasChildren();
        int int89 = astRoot82.getLineno();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scope43, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) astRoot82, (int) ' ');
        int int92 = astRoot62.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode93 = iRFactory31.transformTree(astRoot62);
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(278475323, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode93, (-547091060));
        com.google.javascript.rhino.head.ast.Symbol symbol97 = astRoot18.getSymbol("        {\n        }\n");
        // The following exception was thrown during execution in test generation
        try {
            astRoot11.setLoop((com.google.javascript.rhino.head.ast.Jump) astRoot18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 136 + "'", int15 == 136);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$1" + "'", str24, "$1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$2" + "'", str25, "$2");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(symbolArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(commentArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(functionNodeList75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNotNull(astRoot82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AstRoot" + "'", str83, "AstRoot");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(functionNodeList86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(scriptNode93);
        org.junit.Assert.assertNull(symbol97);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.removeProp((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        scriptNode0.setBounds(0, (-1291599107));
        int int13 = scriptNode0.getLength();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setEndLineno((-1127219093));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1291599107) + "'", int13 == (-1291599107));
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isIdeMode();
        boolean boolean17 = compilerEnvirons0.isIdeMode();
        boolean boolean18 = compilerEnvirons0.reportWarningAsError();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        scriptNode4.flattenSymbolTable(false);
        int int12 = scriptNode4.getType();
        java.lang.String str13 = scriptNode4.toString();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scriptNode4.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        astRoot15.checkParentLinks();
        int int24 = astRoot15.getIntProp(11, 32);
        scriptNode4.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot15);
        int int26 = astRoot15.getLength();
        astRoot15.setEncodedSourceBounds(272885524, (-665324045));
        java.lang.String str31 = astRoot15.toSource(8);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "136" + "'", str13, "136");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-621736483));
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode18.addRegExp(regExpLiteral28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scope32.spliterator();
        astRoot30.addChildScope(scope32);
        java.lang.String str36 = astRoot30.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment37 = null;
        astRoot30.setJsDocNode(comment37);
        astRoot30.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean43 = astRoot42.hasSideEffects();
        int int44 = astRoot42.getParamCount();
        astRoot30.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot42);
        scriptNode29.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot42);
        astRoot42.setEndLineno(14);
        astRoot42.setLength((-1610320791));
        int int51 = astRoot42.getFunctionCount();
        boolean boolean52 = astRoot42.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        com.google.javascript.rhino.head.ast.Comment comment58 = null;
        scriptNode56.setJsDocNode(comment58);
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scriptNode56.getSymbol("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getNextTempName();
        java.lang.String str65 = scriptNode63.debugPrint();
        scriptNode63.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str70 = astRoot69.getNextTempName();
        java.lang.String str71 = astRoot69.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode72.getSymbols();
        java.lang.String str74 = astRoot69.toStringTree(scriptNode72);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot69);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int77 = astRoot76.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int79 = astRoot78.getEndLineno();
        java.lang.Object obj80 = astRoot78.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray81 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet82 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet82, commentArray81);
        astRoot78.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        astRoot76.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet82);
        int int86 = astRoot76.getRegexpCount();
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) astRoot69, (com.google.javascript.rhino.head.Node) astRoot76, 550287075);
        astRoot69.flattenSymbolTable(true);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet91 = astRoot69.getComments();
        java.lang.String str93 = astRoot69.toSource((-280309866));
        // The following exception was thrown during execution in test generation
        try {
            astRoot42.replaceChildAfter((com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) astRoot69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str65, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "$0" + "'", str70, "$0");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "136" + "'", str71, "136");
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(commentArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNull(commentSet91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str6 = astRoot5.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scope7.spliterator();
        astRoot5.addChildScope(scope7);
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot5);
        java.lang.String str11 = astRoot4.debugPrint();
        java.lang.String str13 = astRoot4.makeIndent(16);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = astRoot4.spliterator();
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0\tSCRIPT 0 2\n0\t  EXPR_RESULT 0 2\n0\t    NAME 0 2 $0\n" + "'", str11, "0\tSCRIPT 0 2\n0\t  EXPR_RESULT 0 2\n0\t    NAME 0 2 $0\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                " + "'", str13, "                                ");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int25 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot17, scope26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray37 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet38 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet38, commentArray37);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        astRoot34.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = scriptNode42.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode42.getFunctions();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int47 = astRoot32.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope49.setTop(scriptNode51);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor53 = scope49.iterator();
        astRoot32.setParentScope(scope49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = astRoot32.getAstRoot();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) astRoot32, 526823265);
        int int58 = astRoot32.getLineno();
        astRoot17.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot32);
        java.lang.Object obj60 = astRoot17.getCompilerData();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(commentArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(nodeItor53);
        org.junit.Assert.assertNotNull(astRoot55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser3 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean4 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean5 = compilerEnvirons0.isGeneratingSource();
        boolean boolean6 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(215041883);
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-932305774), (-1142433170));
        com.google.javascript.rhino.head.Node node3 = node2.getLastChild();
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        astRoot2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        scope19.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        scope19.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        boolean boolean77 = astRoot66.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = astRoot66.getTop();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode78);
        java.lang.String str80 = scriptNode13.debugPrint();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str80, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int29 = astRoot14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot14);
        astRoot3.removeProp(8);
        com.google.javascript.rhino.head.ast.Scope scope33 = astRoot3.getParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor34 = null;
        astRoot3.visitComments(nodeVisitor34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getNextTempName();
        com.google.javascript.rhino.head.Node node38 = scriptNode36.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode36.getFunctions();
        int int40 = scriptNode36.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getNextTempName();
        com.google.javascript.rhino.head.Node node43 = scriptNode41.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode41.getFunctions();
        int int45 = scriptNode41.getEncodedSourceEnd();
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode51 = astRoot50.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode52);
        int int56 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope57.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot48, scope57);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap60 = astRoot48.getSymbolTable();
        scriptNode36.setSymbolTable(strMap60);
        astRoot3.setSymbolTable(strMap60);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator63 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str65 = astRoot64.getNextTempName();
        java.lang.String str66 = astRoot64.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode67.getSymbols();
        java.lang.String str69 = astRoot64.toStringTree(scriptNode67);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        scope70.addChild((com.google.javascript.rhino.head.ast.AstNode) scope71);
        int int73 = positionComparator63.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode67, (com.google.javascript.rhino.head.ast.AstNode) scope70);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator77 = scope76.spliterator();
        astRoot74.addChildScope(scope76);
        java.lang.String str80 = astRoot74.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = astRoot74.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str84 = astRoot83.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode86 = astRoot85.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode87.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot83, (com.google.javascript.rhino.head.Node) astRoot85, (com.google.javascript.rhino.head.Node) scriptNode87);
        int int91 = positionComparator63.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot74, (com.google.javascript.rhino.head.ast.AstNode) astRoot83);
        com.google.javascript.rhino.head.ast.Comment[] commentArray92 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet93 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet93, commentArray92);
        astRoot83.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet93);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet93);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet93);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(astNode51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "136" + "'", str66, "136");
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "$0" + "'", str84, "$0");
        org.junit.Assert.assertNull(astNode86);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(commentArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode1.getSymbols();
        int int8 = scriptNode1.getLength();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scope11.spliterator();
        astRoot9.addChildScope(scope11);
        java.lang.String str15 = astRoot9.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment16 = null;
        astRoot9.setJsDocNode(comment16);
        int int18 = astRoot9.getType();
        java.lang.String str19 = astRoot9.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap20 = null;
        astRoot9.setSymbolTable(strMap20);
        int int22 = astRoot9.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot((-236001159));
        astRoot9.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = astRoot24.getAstRoot();
        int int27 = astRoot24.getLength();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(278475323, (-443001414));
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((-112076812), (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot24, node30);
        boolean boolean32 = scriptNode1.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(astRoot26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        int int34 = astRoot21.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray38 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList39, symbolArray38);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList39);
        boolean boolean42 = astRoot36.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons43.setWarnTrailingComma(true);
        boolean boolean46 = compilerEnvirons43.isRecordingLocalJsDocComments();
        compilerEnvirons43.setWarnTrailingComma(false);
        compilerEnvirons43.setAllowSharpComments(false);
        boolean boolean51 = compilerEnvirons43.isGenerateDebugInfo();
        astRoot36.setCompilerData((java.lang.Object) boolean51);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot36);
        com.google.javascript.rhino.head.ast.Comment comment54 = null;
        astRoot36.setJsDocNode(comment54);
        java.lang.String str56 = astRoot36.toString();
        astRoot21.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot36);
        java.lang.Object obj58 = astRoot21.getCompilerData();
        astRoot21.setPosition(3);
        com.google.javascript.rhino.head.Node node61 = astRoot21.target;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(symbolArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "136" + "'", str56, "136");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(node61);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot1.getSymbol("java.io.IOException: ");
        astRoot1.setEncodedSourceStart(0);
        java.lang.String str9 = astRoot1.makeIndent(13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray14 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList15, symbolArray14);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        astRoot12.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode33.getFunctions();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int38 = astRoot23.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node41 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scope53.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        scope53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode56, node57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        java.lang.String str64 = node57.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        java.lang.String str65 = astRoot62.getNextTempName();
        boolean boolean66 = astRoot62.hasSideEffects();
        java.lang.String str68 = astRoot62.toSource(100);
        node41.addChildAfter((com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot62);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node71 = astRoot1.getLastChild();
        int int72 = astRoot1.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = astRoot1.getTop();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                          " + "'", str9, "                          ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(symbolArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(scriptNode73);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.setPosition(0);
        java.lang.String str22 = astRoot1.toSource(32);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scope25.getChildScopes();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope25.spliterator();
        astRoot1.replaceWith(scope25);
        com.google.javascript.rhino.head.Node node29 = scope25.getNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(node29);
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        java.lang.String str11 = astRoot0.toSource();
        java.lang.String str12 = astRoot0.toString();
        com.google.javascript.rhino.head.Node node13 = astRoot0.getNext();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "136" + "'", str12, "136");
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot21.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot21.getParent();
        java.lang.String str36 = astRoot21.toSource(488584366);
        astRoot21.setInStrictMode(false);
        int int39 = astRoot21.depth();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot21.putSymbol(symbol40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode1.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, (com.google.javascript.rhino.head.ast.Scope) scriptNode1);
        java.lang.String str15 = scriptNode1.getJsDoc();
        int int16 = scriptNode1.getEncodedSourceEnd();
        java.lang.Object obj17 = scriptNode1.getCompilerData();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean21 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(2, (int) '#');
        scope2.setLength(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment29 = null;
        astRoot22.setJsDocNode(comment29);
        astRoot22.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean35 = astRoot34.hasSideEffects();
        int int36 = astRoot34.getParamCount();
        astRoot22.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(0);
        scriptNode38.setEncodedSourceBounds(12, 10);
        scriptNode38.setSourceName("");
        astRoot22.setTop(scriptNode38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray49 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList50, symbolArray49);
        astRoot47.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList50);
        boolean boolean53 = astRoot47.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap54 = astRoot47.getSymbolTable();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot47);
        astRoot7.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment58 = astRoot7.getJsDocNode();
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = astRoot7.getAstRoot();
        int int61 = astRoot7.getEncodedSourceEnd();
        java.lang.String str62 = astRoot7.getJsDoc();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(symbolArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(comment58);
        org.junit.Assert.assertNotNull(astRoot60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Comment comment8 = null;
        astRoot0.setJsDocNode(comment8);
        com.google.javascript.rhino.head.ast.Comment comment10 = astRoot0.getJsDocNode();
        astRoot0.setEncodedSource("\210");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode20.toSource(0);
        scriptNode20.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) '#', node16, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode20, 2);
        scriptNode20.setEndLineno(11);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        int int40 = positionComparator30.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode34, (com.google.javascript.rhino.head.ast.AstNode) scope37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scope43.spliterator();
        astRoot41.addChildScope(scope43);
        java.lang.String str47 = astRoot41.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList48 = astRoot41.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = positionComparator30.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot41, (com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.Comment[] commentArray59 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet60 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet60, commentArray59);
        astRoot50.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet60);
        astRoot50.setPosition((int) (short) -1);
        java.lang.Object obj65 = astRoot50.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.replaceChild((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) astRoot50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(comment10);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(functionNodeList48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(commentArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope1.getParentScope();
        boolean boolean6 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getNextTempName();
        java.lang.String str10 = scriptNode8.debugPrint();
        scriptNode8.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getEndLineno();
        java.lang.Object obj25 = astRoot23.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray26 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet27, commentArray26);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        int int31 = astRoot21.getRegexpCount();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot21, 550287075);
        com.google.javascript.rhino.head.Node node34 = astRoot14.target;
        // The following exception was thrown during execution in test generation
        try {
            scope1.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) astRoot14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str10, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(commentArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(node34);
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor16 = null;
        astRoot3.visitComments(nodeVisitor16);
        int int18 = astRoot3.getEncodedSourceStart();
        java.lang.String str19 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope20 = astRoot3.getParentScope();
        com.google.javascript.rhino.head.ast.Comment comment21 = null;
        astRoot3.setJsDocNode(comment21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getEndLineno();
        java.lang.Object obj28 = astRoot26.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot26.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        astRoot26.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode34.getFunctions();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode34);
        int int39 = astRoot26.getRegexpCount();
        com.google.javascript.rhino.head.Node node40 = astRoot26.getNext();
        astRoot26.setEncodedSourceBounds((-8), (-264283662));
        astRoot3.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot26);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) '#', 0);
        java.lang.String str48 = scope47.toSource();
        astRoot3.addChildScope(scope47);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str19, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{\n}\n" + "'", str48, "{\n}\n");
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.Scope scope10 = astRoot0.getParentScope();
        int int11 = astRoot0.getPosition();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        boolean boolean15 = compilerEnvirons0.isStrictMode();
        boolean boolean16 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean17 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(437731425);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 437731425");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(272885524, 0);
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        astRoot7.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        scriptNode18.setEncodedSourceEnd(0);
        int int26 = scriptNode18.getType();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        scriptNode18.removeProp(27392615);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setStrictMode(true);
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons11.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setWarnTrailingComma(true);
        java.lang.String[] strArray37 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        compilerEnvirons25.setActivationNames((java.util.Set<java.lang.String>) strSet38);
        compilerEnvirons16.setActivationNames((java.util.Set<java.lang.String>) strSet38);
        compilerEnvirons11.setActivationNames((java.util.Set<java.lang.String>) strSet38);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet38);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons44.setRecordingLocalJsDocComments(false);
        boolean boolean47 = compilerEnvirons44.isGeneratingSource();
        compilerEnvirons44.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons50.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons50.getErrorReporter();
        boolean boolean54 = compilerEnvirons50.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = compilerEnvirons50.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException61 = errorReporter55.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter55.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser68 = new com.google.javascript.rhino.head.Parser(compilerEnvirons44, errorReporter55);
        com.google.javascript.rhino.head.Parser parser69 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter55);
        boolean boolean70 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter71 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setStrictMode(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(errorReporter55);
        org.junit.Assert.assertNotNull(evaluatorException61);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(errorReporter71);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setXmlAvailable(true);
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str14 = astRoot13.debugPrint();
        astRoot13.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment17 = null;
        astRoot13.setJsDocNode(comment17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = astRoot13.getChildScopes();
        java.lang.String str20 = astRoot13.debugPrint();
        astRoot13.clearParentScope();
        com.google.javascript.rhino.head.Node node22 = iRFactory11.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope23 = node22.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str14, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str20, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNotNull(node22);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean21 = compilerEnvirons0.isRecordingComments();
        java.util.Set<java.lang.String> strSet22 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strSet22);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "^" + "'", str1, "^");
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-3));
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.Node node3 = astRoot0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList4 = astRoot0.getStatements();
        java.lang.String str6 = astRoot0.toSource(23);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope(17, 10);
        astRoot0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = astRoot11.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot11.getSymbols();
        astRoot0.setSymbols(symbolList22);
        com.google.javascript.rhino.head.Node node24 = astRoot0.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode30 = astRoot29.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int35 = astRoot27.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot27, scope36);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scope43.spliterator();
        astRoot41.addChildScope(scope43);
        java.lang.String str47 = astRoot41.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        java.lang.String str50 = astRoot48.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = scriptNode51.getSymbols();
        java.lang.String str53 = astRoot48.toStringTree(scriptNode51);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope54.addChild((com.google.javascript.rhino.head.ast.AstNode) scope55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope55.setTop(scriptNode57);
        java.lang.String str60 = scope55.toSource(12);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope55);
        astRoot41.setBaseLineno(19);
        astRoot41.checkParentLinks();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(14, 26);
        scope36.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot41, node67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getNextTempName();
        com.google.javascript.rhino.head.Node node71 = scriptNode69.target;
        int int72 = scriptNode69.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node73 = scriptNode69.getLastChild();
        int int74 = scriptNode69.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap75 = scriptNode69.getSymbolTable();
        astRoot41.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        astRoot41.removeChildren();
        boolean boolean78 = astRoot41.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = astRoot41.getTop();
        com.google.javascript.rhino.head.ast.Scope scope80 = scriptNode79.getParentScope();
        astRoot0.setParentScope(scope80);
        astRoot0.checkParentLinks();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(astNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(astNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "136" + "'", str50, "136");
        org.junit.Assert.assertNotNull(symbolList52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "                        {\n                        }\n" + "'", str60, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "$0" + "'", str70, "$0");
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(scriptNode79);
        org.junit.Assert.assertNull(scope80);
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.Node node3 = scriptNode0.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            node3.setDouble((double) (-230610608));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean12 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons0.getErrorReporter();
        boolean boolean14 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((-543879055));
        astRoot7.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot12);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Node node18 = scriptNode16.target;
        int int19 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node20 = scriptNode16.getLastChild();
        int int21 = scriptNode16.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = scriptNode16.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = scope25.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node29 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node30 = node29.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        node29.addChildToFront((com.google.javascript.rhino.head.Node) scope31);
        scope25.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode28, node29);
        scope25.setRelative(5);
        scriptNode16.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = astRoot38.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = astRoot38.spliterator();
        com.google.javascript.rhino.head.Node node49 = astRoot38.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator51 = scope50.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getNextTempName();
        scope50.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode52.getChildScopes();
        scriptNode52.clearParentScope();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode16, node49, (com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator58 = node49.new NodeIterator();
        com.google.javascript.rhino.head.Node node59 = node49.getLastSibling();
        astRoot7.addChildrenToFront(node49);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(nodeSpliterator51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertNotNull(node59);
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot0.getFunctions();
        java.lang.String str8 = astRoot0.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray9 = astRoot0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        int int3 = compilerEnvirons0.getLanguageVersion();
        int int4 = compilerEnvirons0.getLanguageVersion();
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        int int6 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean12 = compilerEnvirons11.recoverFromErrors();
        compilerEnvirons11.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        boolean boolean18 = compilerEnvirons15.isRecordingLocalJsDocComments();
        compilerEnvirons15.setWarnTrailingComma(false);
        compilerEnvirons15.setAllowSharpComments(false);
        boolean boolean23 = compilerEnvirons15.isGenerateDebugInfo();
        compilerEnvirons15.setIdeMode(false);
        compilerEnvirons15.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser34 = new com.google.javascript.rhino.head.Parser(compilerEnvirons15, errorReporter33);
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons11, errorReporter33);
        compilerEnvirons0.setErrorReporter(errorReporter33);
        errorReporter33.warning("775058292\tSCRIPT 775058292 1851732708\n", "java.io.IOException: 8\tSCRIPT 8 1\n", 709642208, "-1\tBLOCK -1 1\n", (-214973135));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode6.getChildScopes();
        scriptNode6.setBaseLineno(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.removeProp((int) (short) 1);
        int int18 = scriptNode13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = parser19.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        astRoot23.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        com.google.javascript.rhino.head.ast.Symbol symbol31 = astRoot24.getSymbol("                  ");
        java.lang.String str33 = astRoot24.toSource(5);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot24, (-280309866));
        java.lang.String str37 = scriptNode6.makeIndent((-543879055));
        scriptNode6.clearParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode6.getFunctions();
        boolean boolean40 = scriptNode6.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(symbol31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int7 = scriptNode3.getIntProp((int) 'a', 19);
        scriptNode3.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        java.lang.String str12 = astRoot10.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode13.getSymbols();
        java.lang.String str15 = astRoot10.toStringTree(scriptNode13);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot10);
        astRoot10.setEndLineno(0);
        astRoot10.setRelative(630715541);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        com.google.javascript.rhino.head.Node node23 = scriptNode21.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot24.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        astRoot24.addChildScope(scope31);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList34 = astRoot24.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = astRoot24.getSymbols();
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        int int41 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = scriptNode42.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode42.getFunctions();
        int int46 = scriptNode42.getEncodedSourceEnd();
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode52 = astRoot51.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) scriptNode53);
        int int57 = astRoot49.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot49, scope58);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = astRoot49.getSymbolTable();
        scriptNode37.setSymbolTable(strMap61);
        scriptNode21.setSymbolTable(strMap61);
        astRoot10.setSymbolTable(strMap61);
        scriptNode3.setSymbolTable(strMap61);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 19 + "'", int7 == 19);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "136" + "'", str12, "136");
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(astNodeList34);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNull(astNode52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = astRoot3.getAstRoot();
        java.lang.String str5 = astRoot4.shortName();
        java.lang.String str6 = astRoot4.getSourceName();
        astRoot4.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = astRoot4.getSymbolTable();
        astRoot0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot4.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        int int16 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        int int21 = scriptNode17.getEncodedSourceEnd();
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        scriptNode12.setPosition(13);
        java.lang.String str25 = scriptNode12.toSource();
        com.google.javascript.rhino.head.Node node26 = scriptNode12.getNext();
        com.google.javascript.rhino.head.Node node28 = com.google.javascript.rhino.head.Node.newString("!");
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getEndLineno();
        java.lang.Object obj35 = astRoot33.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot33.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        com.google.javascript.rhino.head.Node node40 = astRoot33.getLastSibling();
        int int41 = node40.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        java.lang.String str44 = astRoot42.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        java.lang.String str47 = astRoot42.toStringTree(scriptNode45);
        java.lang.String str49 = astRoot42.toSource(0);
        java.lang.String str51 = astRoot42.toSource(25);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope32, node40, (com.google.javascript.rhino.head.Node) astRoot42);
        int int53 = astRoot42.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator57 = scope56.spliterator();
        astRoot54.addChildScope(scope56);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList59 = astRoot54.getChildScopes();
        java.lang.String str60 = astRoot54.toString();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot42, (com.google.javascript.rhino.head.ast.Scope) astRoot54);
        java.lang.String str62 = node28.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot42);
        scriptNode12.addChildToBack(node28);
        astRoot4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int66 = astRoot65.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray67 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList68, symbolArray67);
        astRoot65.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList68);
        int int71 = astRoot65.getEncodedSourceStart();
        astRoot4.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot65);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AstRoot" + "'", str5, "AstRoot");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 136 + "'", int41 == 136);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertNotNull(scopeList59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "136" + "'", str60, "136");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(symbolArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator3 = positionComparator1.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator2);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator5 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator6 = positionComparator4.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int19 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot10, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = astNodeComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator22 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = positionComparator21.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator22);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = astNodeComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator22);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator25 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator26 = astNodeComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator25);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = parser27.parse("", "-1\tSCRIPT -1 1\n", 19);
        com.google.javascript.rhino.head.ast.Comment comment32 = astRoot31.getJsDocNode();
        int int33 = astRoot31.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode39.toSource(0);
        scriptNode39.setEncodedSourceBounds(12, 10);
        scriptNode37.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator49 = scope48.spliterator();
        astRoot46.addChildScope(scope48);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = astRoot46.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        boolean boolean55 = scope52.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope52, scope56);
        astRoot46.replaceWith(scope52);
        int int61 = astRoot46.getEncodedSourceEnd();
        scriptNode39.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot46);
        int int63 = positionComparator25.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot31, (com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str65 = astRoot64.getNextTempName();
        java.lang.String str66 = astRoot64.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = astRoot64.getTop();
        int int68 = scriptNode67.getRegexpCount();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode67);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(955777565, (com.google.javascript.rhino.head.Node) scriptNode39, (-407655094));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str74 = scriptNode73.getNextTempName();
        int int75 = scriptNode73.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = astRoot76.getAstRoot();
        java.lang.String str78 = astRoot77.shortName();
        java.lang.String str80 = astRoot77.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = astRoot77.getFunctions();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode73, (com.google.javascript.rhino.head.Node) astRoot77, 6);
        java.lang.String str84 = scriptNode73.shortName();
        int int85 = scriptNode73.getFunctionCount();
        int int86 = scriptNode73.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode39.setContinue((com.google.javascript.rhino.head.Node) scriptNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator3);
        org.junit.Assert.assertNotNull(astNodeComparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertNotNull(astNodeComparator26);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertNull(comment32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 19 + "'", int33 == 19);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{\n}\n" + "'", str41, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator49);
        org.junit.Assert.assertNotNull(scopeList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "136" + "'", str66, "136");
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(astRoot77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "AstRoot" + "'", str78, "AstRoot");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ScriptNode" + "'", str84, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.setEncodedSourceEnd(171557313);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot0.new NodeIterator();
        java.lang.Object obj30 = astRoot0.getCompilerData();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        int int9 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope7.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int14 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) scope7, (com.google.javascript.rhino.head.ast.AstNode) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        boolean boolean24 = astRoot16.isInStrictMode();
        astRoot16.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int28 = astRoot27.getEndLineno();
        java.lang.Object obj29 = astRoot27.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        astRoot27.checkParentLinks();
        int int35 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot16, (com.google.javascript.rhino.head.ast.AstNode) astRoot27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator37 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(953557037);
        int int40 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray43 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList44, symbolArray43);
        astRoot41.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList44);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        astRoot41.addChildScope(scope48);
        scope48.setPosition(17);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator53 = scope48.spliterator();
        int int54 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode39, (com.google.javascript.rhino.head.ast.AstNode) scope48);
        scope48.setLineno((-379853048));
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-12) + "'", int14 == (-12));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-52) + "'", int35 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertNotNull(astNodeComparator37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(symbolArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 953557020 + "'", int54 == 953557020);
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        int int3 = compilerEnvirons0.getLanguageVersion();
        int int4 = compilerEnvirons0.getLanguageVersion();
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        int int6 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int10 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(412084289);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setDouble((double) 27392615);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.removeProp(8);
        com.google.javascript.rhino.head.ast.Scope scope31 = astRoot1.getParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor32 = null;
        astRoot1.visitComments(nodeVisitor32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode34.getFunctions();
        int int38 = scriptNode34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getNextTempName();
        com.google.javascript.rhino.head.Node node41 = scriptNode39.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode39.getFunctions();
        int int43 = scriptNode39.getEncodedSourceEnd();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int54 = astRoot46.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope55.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot46, scope55);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = astRoot46.getSymbolTable();
        scriptNode34.setSymbolTable(strMap58);
        astRoot1.setSymbolTable(strMap58);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setWarnTrailingComma(true);
        boolean boolean65 = compilerEnvirons62.getWarnTrailingComma();
        astRoot1.putProp(7, (java.lang.Object) boolean65);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        java.lang.String str69 = astRoot67.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode70.getSymbols();
        java.lang.String str72 = astRoot67.toStringTree(scriptNode70);
        java.lang.String str74 = astRoot67.toSource(0);
        java.lang.String str76 = astRoot67.toSource(25);
        astRoot1.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot67);
        com.google.javascript.rhino.head.Node node78 = astRoot1.getNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = astRoot1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "136" + "'", str69, "136");
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(node78);
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException20 = errorReporter14.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter14.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter14);
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setIdeMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter38 = compilerEnvirons35.getErrorReporter();
        compilerEnvirons32.setErrorReporter(errorReporter38);
        boolean boolean40 = compilerEnvirons32.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean42 = compilerEnvirons41.recoverFromErrors();
        compilerEnvirons41.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setWarnTrailingComma(true);
        boolean boolean48 = compilerEnvirons45.isRecordingLocalJsDocComments();
        compilerEnvirons45.setWarnTrailingComma(false);
        compilerEnvirons45.setAllowSharpComments(false);
        boolean boolean53 = compilerEnvirons45.isGenerateDebugInfo();
        compilerEnvirons45.setIdeMode(false);
        compilerEnvirons45.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons58 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons58.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter61 = compilerEnvirons58.getErrorReporter();
        boolean boolean62 = compilerEnvirons58.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter63 = compilerEnvirons58.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser64 = new com.google.javascript.rhino.head.Parser(compilerEnvirons45, errorReporter63);
        com.google.javascript.rhino.head.IRFactory iRFactory65 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons41, errorReporter63);
        errorReporter63.warning("{\n}\n", "136", (int) (byte) 100, "hi!", 10);
        compilerEnvirons32.setErrorReporter(errorReporter63);
        com.google.javascript.rhino.head.Parser parser73 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter63);
        boolean boolean74 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertNotNull(evaluatorException20);
        org.junit.Assert.assertNotNull(errorReporter38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(errorReporter61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(errorReporter63);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        astRoot0.setBaseLineno(14);
        astRoot0.setEncodedSourceStart((-1568335506));
        int int7 = astRoot0.depth();
        astRoot0.putIntProp((-133827546), 903468300);
        astRoot0.setEndLineno(665248667);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        int int3 = scriptNode1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot4.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str8 = astRoot5.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot5.getFunctions();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot5, 6);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scriptNode1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(0);
        scriptNode13.clearParentScope();
        boolean boolean17 = scriptNode13.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = null;
        scriptNode13.setSymbolTable(strMap18);
        int int20 = scriptNode13.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = scriptNode13.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode22.toSource(0);
        scriptNode22.clearParentScope();
        boolean boolean26 = scriptNode22.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        java.lang.String str37 = astRoot35.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode38.getSymbols();
        java.lang.String str40 = astRoot35.toStringTree(scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope42.setTop(scriptNode44);
        java.lang.String str47 = scope42.toSource(12);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope42);
        astRoot28.setBaseLineno(19);
        scriptNode22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot28);
        astRoot28.removeChildren();
        int int53 = astRoot28.getEncodedSourceEnd();
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.addChild((com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.Node node61 = scope59.getFirstChild();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope59);
        astRoot55.target = node62;
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = astRoot55.getAstRoot();
        boolean boolean65 = astRoot64.hasSideEffects();
        astRoot28.addChildToBack((com.google.javascript.rhino.head.Node) astRoot64);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        int int68 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral69 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addRegExp(regExpLiteral69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{\n}\n" + "'", str24, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "136" + "'", str37, "136");
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(astRoot64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser5 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(false);
        boolean boolean10 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        int int11 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        astRoot2.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = astRoot2.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = astRoot2.getParamOrVarName((-846380080));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -846380080");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSource("java.io.IOException: ");
        int int31 = astRoot12.getEncodedSourceEnd();
        int int32 = astRoot12.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node33 = astRoot12.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        int int6 = astRoot1.getFunctionCount();
        astRoot1.setInStrictMode(false);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = null;
        astRoot1.setComments(commentSet9);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet14 = compilerEnvirons11.getActivationNames();
        boolean boolean15 = compilerEnvirons11.recoverFromErrors();
        boolean boolean16 = compilerEnvirons11.getWarnTrailingComma();
        boolean boolean17 = compilerEnvirons11.isIdeMode();
        boolean boolean18 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setWarnTrailingComma(true);
        boolean boolean25 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons19, errorReporter26);
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser(compilerEnvirons11, errorReporter26);
        boolean boolean29 = compilerEnvirons11.isStrictMode();
        compilerEnvirons11.setStrictMode(false);
        compilerEnvirons11.setLanguageVersion((int) (byte) 100);
        astRoot1.setCompilerData((java.lang.Object) (byte) 100);
        int int35 = astRoot1.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope39 = astRoot37.getDefiningScope("AstRoot");
        astRoot37.setEncodedSourceStart((int) (byte) -1);
        int int42 = astRoot37.getEncodedSourceEnd();
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot37);
        // The following exception was thrown during execution in test generation
        try {
            astRoot37.setBaseLineno((-1291599107));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 136 + "'", int35 == 136);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException21 = errorReporter15.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException27 = errorReporter15.runtimeError("/", "    {\n    }\n", 11, "-1\tSCRIPT -1 1\n", 520361644);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException33 = errorReporter15.runtimeError("java.io.IOException: java.io.IOException: ", "{\n}\n", 520361644, "java.io.IOException: java.io.IOException", (int) (short) 10);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter15.runtimeError("java.io.IOException: java.io.IOException: hi!", "-1\t  BLOCK 0 1\n", (int) (byte) 0, "                  ", 6);
        compilerEnvirons0.setErrorReporter(errorReporter15);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons41 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons41.setWarnTrailingComma(true);
        boolean boolean44 = compilerEnvirons41.isRecordingLocalJsDocComments();
        compilerEnvirons41.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter47 = compilerEnvirons41.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException53 = errorReporter47.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException59 = errorReporter47.runtimeError("/", "AstRoot", (int) '4', "                                                                ", 1);
        compilerEnvirons0.setErrorReporter(errorReporter47);
        java.util.Set<java.lang.String> strSet61 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setLanguageVersion(0);
        boolean boolean64 = compilerEnvirons0.isGeneratingSource();
        boolean boolean65 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertNotNull(evaluatorException21);
        org.junit.Assert.assertNotNull(evaluatorException27);
        org.junit.Assert.assertNotNull(evaluatorException33);
        org.junit.Assert.assertNotNull(evaluatorException39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter47);
        org.junit.Assert.assertNotNull(evaluatorException53);
        org.junit.Assert.assertNotNull(evaluatorException59);
        org.junit.Assert.assertNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray9 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList10, symbolArray9);
        scriptNode5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode5.getTop();
        int int14 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot15.setSourceName("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor82 = null;
        astRoot81.visitComments(nodeVisitor82);
        astRoot15.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot81);
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        // The following exception was thrown during execution in test generation
        try {
            astRoot15.setBaseLineno((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertNotNull(symbolArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        int int10 = astRoot0.getPosition();
        java.lang.String str11 = astRoot0.debugPrint();
        java.lang.String str12 = astRoot0.toSource();
        astRoot0.setBounds((-1285574509), 688626213);
        astRoot0.setEncodedSource("java.io.IOException");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node18 = astRoot0.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str11, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons0.getErrorReporter();
        boolean boolean13 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean5 = compilerEnvirons0.isGenerateDebugInfo();
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        java.lang.String str20 = astRoot1.toSource(25);
        java.lang.String str22 = astRoot1.makeIndent((int) (short) 10);
        java.lang.String str23 = astRoot1.getSourceName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    " + "'", str22, "                    ");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = astRoot12.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot12.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getNextTempName();
        com.google.javascript.rhino.head.Node node33 = scriptNode31.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode31.getFunctions();
        int int35 = scriptNode31.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getNextTempName();
        com.google.javascript.rhino.head.Node node38 = scriptNode36.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode36.getFunctions();
        int int40 = scriptNode36.getEncodedSourceEnd();
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        int int42 = scriptNode31.getLength();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str45 = astRoot44.debugPrint();
        astRoot44.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment48 = null;
        astRoot44.setJsDocNode(comment48);
        java.lang.String str50 = astRoot44.getSourceName();
        scriptNode31.addChildToFront((com.google.javascript.rhino.head.Node) astRoot44);
        astRoot12.setCompilerData((java.lang.Object) scriptNode31);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str45, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = astRoot1.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingComments(true);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setIdeMode(true);
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        com.google.javascript.rhino.head.Parser parser2 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = parser2.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope9.spliterator();
        astRoot7.addChildScope(scope9);
        astRoot6.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot7);
        com.google.javascript.rhino.head.ast.Scope scope13 = astRoot6.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = astRoot14.getTop();
        int int18 = astRoot14.getParamCount();
        astRoot14.checkParentLinks();
        astRoot14.setEndLineno(775058292);
        java.lang.String str23 = astRoot14.toSource(955777565);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-2), (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(296531913, (com.google.javascript.rhino.head.Node) astRoot6);
        org.junit.Assert.assertNotNull(astRoot6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException5);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons8.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException17 = errorReporter11.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) evaluatorException17);
        iOException2.addSuppressed((java.lang.Throwable) evaluatorException17);
        java.io.IOException iOException20 = new java.io.IOException("{\n}\n", (java.lang.Throwable) evaluatorException17);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) evaluatorException17);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) evaluatorException17);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertNotNull(evaluatorException17);
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        compilerEnvirons4.setErrorReporter(errorReporter10);
        compilerEnvirons0.setErrorReporter(errorReporter10);
        int int13 = compilerEnvirons0.getLanguageVersion();
        boolean boolean14 = compilerEnvirons0.isRecordingComments();
        boolean boolean15 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setIdeMode(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        astRoot2.addChildScope(scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getEndLineno();
        java.lang.Object obj17 = astRoot15.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray18 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet19, commentArray18);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet19);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Node node25 = scriptNode23.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int28 = astRoot13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot13);
        int int31 = astRoot13.getParamCount();
        astRoot13.removeProp(21);
        java.lang.String str34 = astRoot13.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot13.visit(nodeVisitor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(commentArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.setTop(scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        scriptNode48.setCompilerData((java.lang.Object) scope51);
        scriptNode48.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.Node node58 = scriptNode56.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode56.getFunctions();
        int int60 = scriptNode56.getEncodedSourceEnd();
        scriptNode48.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode56);
        scriptNode48.setBaseLineno(6);
        scriptNode5.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        java.lang.String str67 = astRoot65.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = astRoot65.getTop();
        int int69 = astRoot65.getParamCount();
        boolean boolean70 = astRoot65.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator71 = astRoot65.new NodeIterator();
        astRoot65.checkParentLinks();
        int int73 = astRoot65.getRegexpCount();
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot65);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "136" + "'", str67, "136");
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        astRoot1.setEndLineno((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = astRoot1.getAstRoot();
        java.lang.String str6 = astRoot5.shortName();
        java.lang.String str7 = astRoot5.getEncodedSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray13 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet14, commentArray13);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.lang.String str25 = astRoot19.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode29.getSymbols();
        java.lang.String str31 = astRoot26.toStringTree(scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.setTop(scriptNode35);
        java.lang.String str38 = scope33.toSource(12);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot41, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = astRoot41.getComments();
        node39.addChildToBack((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.Node node47 = astRoot41.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator49 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator50 = positionComparator48.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator49);
        com.google.javascript.rhino.head.Node node51 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node52 = node51.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        node51.addChildToFront((com.google.javascript.rhino.head.Node) scope53);
        int int55 = scope53.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = scope53.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int60 = positionComparator49.compare((com.google.javascript.rhino.head.ast.AstNode) scope53, (com.google.javascript.rhino.head.ast.AstNode) astRoot59);
        node47.addChildToFront((com.google.javascript.rhino.head.Node) astRoot59);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getEndLineno();
        java.lang.Object obj64 = astRoot62.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray65 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet66, commentArray65);
        astRoot62.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot59.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot8.setSourceName("{\n}\n");
        java.lang.String str73 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-12), (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) astRoot8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = astRoot5.getChildScopes();
        astRoot5.checkParentLinks();
        astRoot5.setEncodedSourceStart((-289553421));
        com.google.javascript.rhino.head.ast.Scope scope79 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot5, scope79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(astRoot5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AstRoot" + "'", str6, "AstRoot");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(commentArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "136" + "'", str28, "136");
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                        {\n                        }\n" + "'", str38, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(commentSet45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(astNodeComparator50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(symbol57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-12) + "'", int60 == (-12));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(commentArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str73, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(scopeList75);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        java.lang.String str14 = astRoot7.toSource(17);
        astRoot7.clearParentScope();
        int int16 = astRoot7.getAbsolutePosition();
        int int17 = astRoot7.getLineno();
        boolean boolean18 = astRoot7.hasConsistentReturnUsage();
        astRoot7.setInStrictMode(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 25 + "'", int16 == 25);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        int int11 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        int int23 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode17, (com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = astRoot24.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot33, 24);
        astRoot33.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot33.getAstRoot();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = astRoot33.getAstRoot();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = astRoot47.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertNotNull(astRoot47);
        org.junit.Assert.assertNull(functionNode48);
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean20 = compilerEnvirons0.reportWarningAsError();
        boolean boolean21 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.flattenSymbolTable(false);
        int int10 = astRoot1.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = astRoot1.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str14 = astRoot13.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode16 = astRoot15.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        scriptNode17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode17.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor28 = null;
        astRoot27.visitComments(nodeVisitor28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray33 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList34, symbolArray33);
        astRoot31.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList34);
        boolean boolean37 = astRoot31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setWarnTrailingComma(true);
        boolean boolean41 = compilerEnvirons38.isRecordingLocalJsDocComments();
        compilerEnvirons38.setWarnTrailingComma(false);
        compilerEnvirons38.setAllowSharpComments(false);
        boolean boolean46 = compilerEnvirons38.isGenerateDebugInfo();
        astRoot31.setCompilerData((java.lang.Object) boolean46);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot31);
        astRoot27.addChildrenToBack(node48);
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot27);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = astRoot1.getTop();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(symbolArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(scriptNode52);
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        boolean boolean52 = astRoot51.hasSideEffects();
        astRoot15.addChildToBack((com.google.javascript.rhino.head.Node) astRoot51);
        java.lang.Object obj55 = astRoot51.getProp((int) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol57 = astRoot51.getSymbol("-1\tLE -1 1\n");
        com.google.javascript.rhino.head.Node node58 = astRoot51.getFirstChild();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(symbol57);
        org.junit.Assert.assertNull(node58);
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList2 = scope1.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.setTop(scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        scriptNode6.setCompilerData((java.lang.Object) scope9);
        scriptNode6.setEncodedSourceEnd(0);
        int int14 = scriptNode6.getType();
        int int15 = scriptNode6.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot17.getAstRoot();
        java.lang.String str19 = astRoot18.shortName();
        java.lang.String str20 = astRoot18.debugPrint();
        com.google.javascript.rhino.head.Node node21 = astRoot18.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = astRoot18.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        astRoot34.addChildScope(scope36);
        java.lang.String str40 = astRoot34.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope48.setTop(scriptNode50);
        java.lang.String str53 = scope48.toSource(12);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot56, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet60 = astRoot56.getComments();
        node54.addChildToBack((com.google.javascript.rhino.head.Node) astRoot56);
        com.google.javascript.rhino.head.Node node62 = astRoot56.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator63 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator64 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator65 = positionComparator63.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator64);
        com.google.javascript.rhino.head.Node node66 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node67 = node66.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        node66.addChildToFront((com.google.javascript.rhino.head.Node) scope68);
        int int70 = scope68.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol72 = scope68.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int75 = positionComparator64.compare((com.google.javascript.rhino.head.ast.AstNode) scope68, (com.google.javascript.rhino.head.ast.AstNode) astRoot74);
        node62.addChildToFront((com.google.javascript.rhino.head.Node) astRoot74);
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int78 = astRoot77.getEndLineno();
        java.lang.Object obj79 = astRoot77.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray80 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet81 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet81, commentArray80);
        astRoot77.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet81);
        astRoot74.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet81);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet81);
        astRoot18.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet81);
        astRoot18.setSourceName("                                                  ");
        int int89 = scriptNode6.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot18);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope90 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 136 + "'", int14 == 136);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                        {\n                        }\n" + "'", str53, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(commentSet60);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(astNodeComparator65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(symbol72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-12) + "'", int75 == (-12));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(commentArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-165784794) + "'", int89 == (-165784794));
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        boolean boolean9 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(170, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getNextTempName();
        scriptNode3.setLineno((int) (short) 10);
        java.lang.Object obj7 = scriptNode3.getCompilerData();
        scriptNode3.putIntProp((-297370766), 437731425);
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node12 = scriptNode3.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        com.google.javascript.rhino.head.ast.AstRoot astRoot88 = astRoot79.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot89 = astRoot88.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump90 = astRoot89.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-275165192) + "'", int67 == (-275165192));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(astRoot88);
        org.junit.Assert.assertNotNull(astRoot89);
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str4 = astRoot3.getNextTempName();
        java.lang.String str5 = astRoot3.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode6.getSymbols();
        java.lang.String str8 = astRoot3.toStringTree(scriptNode6);
        astRoot3.checkParentLinks();
        int int12 = astRoot3.getIntProp(11, 32);
        int int13 = astRoot3.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.clearParentScope();
        boolean boolean18 = scriptNode14.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = null;
        scriptNode14.setSymbolTable(strMap19);
        int int21 = scriptNode14.getRegexpCount();
        int int22 = scriptNode14.getRegexpCount();
        astRoot3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot3, (-280309866));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = node25.new NodeIterator();
        boolean boolean27 = nodeIterator26.hasNext();
        com.google.javascript.rhino.head.Node node28 = nodeIterator26.next();
        com.google.javascript.rhino.head.Node node29 = nodeIterator26.next();
        java.lang.Object obj31 = node29.getProp(381115453);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = node29.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        astRoot10.addChildScope(scope12);
        int int15 = astRoot10.getPosition();
        int int16 = astRoot10.getPosition();
        java.lang.String str17 = astRoot10.debugPrint();
        astRoot0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        boolean boolean19 = astRoot0.hasConsistentReturnUsage();
        astRoot0.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getNextTempName();
        com.google.javascript.rhino.head.Node node23 = scriptNode21.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = scriptNode21.getFunctions();
        int int25 = scriptNode21.getEncodedSourceEnd();
        scriptNode21.setBounds((int) (byte) 0, 3);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(functionNodeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node6 = scope5.getNext();
        com.google.javascript.rhino.head.Node node7 = scriptNode0.getChildBefore(node6);
        java.lang.String str8 = scriptNode0.getEncodedSource();
        scriptNode0.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node10 = scriptNode0.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        int int6 = scriptNode1.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scope10.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node15 = node14.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        node14.addChildToFront((com.google.javascript.rhino.head.Node) scope16);
        scope10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, node14);
        scope10.setRelative(5);
        scriptNode1.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = astRoot23.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = astRoot23.spliterator();
        com.google.javascript.rhino.head.Node node34 = astRoot23.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        scope35.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode37.getChildScopes();
        scriptNode37.clearParentScope();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode1, node34, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int43 = scriptNode37.getEndLineno();
        scriptNode37.setRelative(25);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.setTop(scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = scope2.iterator();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scope2, 444385247);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = scope2.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope10 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) functionNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertNull(functionNode9);
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        int int3 = astRoot0.getLineno();
        astRoot0.setEncodedSource("                        ");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        int int18 = positionComparator8.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode12, (com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.lang.String str25 = astRoot19.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = astRoot19.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode31 = astRoot30.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int36 = positionComparator8.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot19, (com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getEndLineno();
        java.lang.Object obj40 = astRoot38.getCompilerData();
        com.google.javascript.rhino.head.Node node41 = astRoot38.getFirstChild();
        astRoot28.putProp(2, (java.lang.Object) astRoot38);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scope43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope44);
        boolean boolean46 = scope43.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope43, scope47);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot54.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = scriptNode62.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = scriptNode62.getFunctions();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode62);
        astRoot52.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = astRoot52.getComments();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scope47, (com.google.javascript.rhino.head.Node) astRoot52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str73 = scriptNode72.getNextTempName();
        com.google.javascript.rhino.head.Node node74 = scriptNode72.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList75 = scriptNode72.getFunctions();
        int int76 = scriptNode72.getEncodedSourceEnd();
        java.lang.String str77 = scope47.toStringTree(scriptNode72);
        astRoot0.putProp(32, (java.lang.Object) scope47);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(astNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertNull(commentSet70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(functionNodeList75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        astRoot0.setRelative(1796887248);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getEndLineno();
        java.lang.Object obj26 = astRoot24.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        astRoot24.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int37 = astRoot22.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot22);
        astRoot22.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        astRoot0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = astRoot22.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = null;
        astRoot22.setParent(astNode44);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap46 = astRoot22.getSymbolTable();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        com.google.javascript.rhino.head.Node node5 = scriptNode3.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray8 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList9, symbolArray8);
        astRoot6.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList9);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope13);
        astRoot6.addChildScope(scope13);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = astRoot6.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = astRoot6.getSymbols();
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = astRoot19.getAstRoot();
        java.lang.String str21 = astRoot20.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = astRoot20.getTop();
        com.google.javascript.rhino.head.Node node23 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node24 = node23.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        node23.addChildToFront((com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = scope25.getAstRoot();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(437731425, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) scope25, (int) (short) 100);
        int int30 = astRoot20.getEncodedSourceStart();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot20);
        int int32 = scriptNode1.depth();
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(symbolArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(astNodeList16);
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertNotNull(astRoot20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AstRoot" + "'", str21, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(astRoot27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot2.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = astRoot12.getChildScopes();
        java.lang.String str18 = astRoot12.toString();
        astRoot2.addChildToBack((com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        astRoot23.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getNextTempName();
        com.google.javascript.rhino.head.Node node33 = scriptNode31.target;
        int int34 = scriptNode31.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node35 = scriptNode31.getLastChild();
        int int36 = scriptNode31.getEndLineno();
        astRoot23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap38 = astRoot23.getSymbolTable();
        int int39 = astRoot23.getType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, (com.google.javascript.rhino.head.ast.Scope) astRoot23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode42.toSource(0);
        scriptNode42.removeProp((int) (short) 1);
        int int47 = scriptNode42.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getEndLineno();
        java.lang.Object obj50 = astRoot48.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray51 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet52, commentArray51);
        astRoot48.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet52);
        astRoot48.checkParentLinks();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) astRoot48);
        java.lang.String str57 = astRoot48.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getNextTempName();
        java.lang.String str61 = scriptNode59.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = scriptNode59.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node63 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node64 = node63.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode59, node64, (com.google.javascript.rhino.head.Node) astRoot66);
        int int68 = astRoot66.getEncodedSourceEnd();
        int int69 = astRoot66.getFunctionCount();
        int int70 = astRoot66.getPosition();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(531785163, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((-1255375420), 9876721);
        // The following exception was thrown during execution in test generation
        try {
            astRoot48.setScope(scope74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scopeList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "136" + "'", str18, "136");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 136 + "'", int39 == 136);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{\n}\n" + "'", str44, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(commentArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AstRoot" + "'", str57, "AstRoot");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "$0" + "'", str60, "$0");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str61, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode62);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 14 + "'", int70 == 14);
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException20 = errorReporter14.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter14.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter14);
        errorReporter14.warning("97", "", (int) (byte) 10, "                                      {\n                                      }\n", (-536261095));
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertNotNull(evaluatorException20);
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.setTop(scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        scriptNode48.setCompilerData((java.lang.Object) scope51);
        scriptNode48.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.Node node58 = scriptNode56.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode56.getFunctions();
        int int60 = scriptNode56.getEncodedSourceEnd();
        scriptNode48.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode56);
        scriptNode48.setBaseLineno(6);
        scriptNode5.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = scriptNode48.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setIdeMode(false);
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons0.getErrorReporter();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter12);
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        int int5 = astRoot1.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot7.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = astRoot7.getComments();
        astRoot1.target = astRoot7;
        java.lang.String str27 = astRoot7.toSource();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = astRoot7.getExistingIntProp((-297370766));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertNull(commentSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        int int9 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, scope10);
        java.lang.String str13 = astRoot1.getEncodedSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean19 = compilerEnvirons14.recoverFromErrors();
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons14.getActivationNames();
        compilerEnvirons14.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.IRFactory iRFactory23 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str26 = astRoot25.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = iRFactory23.transformTree(astRoot25);
        astRoot1.addChildToFront((com.google.javascript.rhino.head.Node) astRoot25);
        com.google.javascript.rhino.head.Node node29 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot25.addChildrenToFront(node29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str26, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNotNull(scriptNode27);
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        astRoot1.setBaseLineno(19);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = astRoot1.getComments();
        astRoot1.setEncodedSourceEnd(16);
        com.google.javascript.rhino.head.Node node27 = astRoot1.target;
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor28 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertNull(commentSet24);
        org.junit.Assert.assertNull(node27);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        int int2 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        boolean boolean6 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        astRoot6.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = astRoot18.getAstRoot();
        astRoot6.putProp(18, (java.lang.Object) astRoot19);
        astRoot6.clearParentScope();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertNotNull(astRoot19);
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        int int58 = compilerEnvirons0.getLanguageVersion();
        boolean boolean59 = compilerEnvirons0.isXmlAvailable();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(903468300);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 903468300");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        int int7 = scriptNode0.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(0);
        scriptNode9.clearParentScope();
        boolean boolean13 = scriptNode9.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope17.spliterator();
        astRoot15.addChildScope(scope17);
        java.lang.String str21 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        java.lang.String str24 = astRoot22.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode25.getSymbols();
        java.lang.String str27 = astRoot22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scope28.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope29.setTop(scriptNode31);
        java.lang.String str34 = scope29.toSource(12);
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope29);
        astRoot15.setBaseLineno(19);
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.removeChildren();
        int int40 = astRoot15.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        astRoot15.setBounds(11, 775058292);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        java.lang.String str49 = astRoot47.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode50.getSymbols();
        java.lang.String str52 = astRoot47.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        int int56 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode50, (com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator60 = scope59.spliterator();
        astRoot57.addChildScope(scope59);
        java.lang.String str63 = astRoot57.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = astRoot57.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str67 = astRoot66.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode69 = astRoot68.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) astRoot68, (com.google.javascript.rhino.head.Node) scriptNode70);
        int int74 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot57, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot66, 24);
        astRoot66.removeChildren();
        java.lang.String str78 = astRoot66.toString();
        astRoot15.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot66);
        astRoot15.setEncodedSourceEnd((int) 'a');
        astRoot15.setEncodedSourceBounds(88171227, 563913884);
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str86 = astRoot85.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope87 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator88 = scope87.spliterator();
        astRoot85.addChildScope(scope87);
        java.lang.String str91 = astRoot85.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList92 = astRoot85.getFunctions();
        java.lang.String str93 = astRoot85.toSource();
        int int94 = astRoot15.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot85);
        com.google.javascript.rhino.head.Node node95 = astRoot85.getLastChild();
        astRoot85.clearParentScope();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                        {\n                        }\n" + "'", str34, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "136" + "'", str49, "136");
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertNull(astNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "136" + "'", str78, "136");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "$0" + "'", str86, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(functionNodeList92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNull(node95);
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        astRoot10.setBaseLineno(14);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot10);
        java.lang.String str16 = astRoot10.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = astRoot17.getComments();
        int int20 = astRoot17.getRegexpCount();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor21 = null;
        astRoot17.visitComments(nodeVisitor21);
        astRoot10.target = astRoot17;
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot10.getParent();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(commentSet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(astNode24);
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        boolean boolean17 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(526823265);
        scope1.removeChildren();
        com.google.javascript.rhino.head.ast.Comment comment3 = null;
        scope1.setJsDocNode(comment3);
        int int5 = scope1.getLength();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-1010753011), (-819749953));
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException1);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException4);
        iOException1.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException11 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("hi!", (java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException("-1\t  BLOCK 0 1\n");
        iOException8.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException8.addSuppressed((java.lang.Throwable) iOException21);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        boolean boolean52 = astRoot50.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Symbol symbol53 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot50.putSymbol(symbol53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-169902641) + "'", int51 == (-169902641));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = parser9.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot13.setEncodedSourceEnd(4);
        java.lang.String str16 = astRoot13.debugPrint();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot13.getParent();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = astRoot13.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0\tSCRIPT 0 0\n" + "'", str16, "0\tSCRIPT 0 0\n");
        org.junit.Assert.assertNull(astNode17);
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray4 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList5, symbolArray4);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList5);
        boolean boolean8 = astRoot2.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isGenerateDebugInfo();
        astRoot2.setCompilerData((java.lang.Object) boolean17);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2);
        astRoot2.setPosition(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = astRoot22.getAstRoot();
        java.lang.String str24 = astRoot23.shortName();
        java.lang.String str26 = astRoot23.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = astRoot23.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray30 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList31, symbolArray30);
        astRoot28.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList31);
        boolean boolean34 = astRoot28.hasChildren();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = astRoot23.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray37 = astRoot36.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(symbolArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(astRoot23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AstRoot" + "'", str24, "AstRoot");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(symbolArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(astRoot36);
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        com.google.javascript.rhino.head.Parser parser0 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = parser0.parse("", "-1\tSCRIPT -1 1\n", 19);
        astRoot4.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node9 = com.google.javascript.rhino.head.Node.newString((-414560696), "                        {\n                        }\n");
        astRoot4.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        java.lang.String str13 = astRoot11.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = scriptNode14.getSymbols();
        java.lang.String str16 = astRoot11.toStringTree(scriptNode14);
        astRoot11.checkParentLinks();
        com.google.javascript.rhino.head.Node node18 = astRoot11.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        boolean boolean23 = compilerEnvirons20.recoverFromErrors();
        compilerEnvirons20.setRecordingComments(true);
        astRoot11.putProp(11, (java.lang.Object) true);
        astRoot11.setInStrictMode(true);
        int int29 = astRoot4.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        astRoot4.visitComments(nodeVisitor30);
        org.junit.Assert.assertNotNull(astRoot4);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "136" + "'", str13, "136");
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-818134700));
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        java.lang.String str11 = astRoot9.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode12.getSymbols();
        java.lang.String str14 = astRoot9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        java.lang.String str21 = scope16.toSource(12);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot24, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = astRoot24.getComments();
        node22.addChildToBack((com.google.javascript.rhino.head.Node) astRoot24);
        com.google.javascript.rhino.head.Node node30 = astRoot24.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node35 = node34.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        node34.addChildToFront((com.google.javascript.rhino.head.Node) scope36);
        int int38 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scope36.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int43 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scope36, (com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        node30.addChildToFront((com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node45 = astRoot42.getLastSibling();
        astRoot42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = astRoot52.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) scriptNode54);
        int int58 = astRoot50.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot50, scope59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope59);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        boolean boolean66 = scope63.hasSideEffects();
        int int67 = scope59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean68 = scope63.hasConsistentReturnUsage();
        astRoot42.addChildrenToFront((com.google.javascript.rhino.head.Node) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getEndLineno();
        java.lang.Object obj72 = astRoot70.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol74 = astRoot70.getSymbol("java.io.IOException: ");
        astRoot70.setSourceName("java.io.IOException: ");
        java.lang.String str78 = astRoot70.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str80 = astRoot79.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scope81.spliterator();
        astRoot79.addChildScope(scope81);
        java.lang.String str85 = astRoot79.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = astRoot79.getSymbolTable();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot79);
        int int88 = astRoot42.getEncodedSourceStart();
        java.lang.String str89 = astRoot42.getEncodedSource();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet90 = astRoot42.getComments();
        boolean boolean91 = astRoot42.hasConsistentReturnUsage();
        astRoot42.flattenSymbolTable(false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                        {\n                        }\n" + "'", str21, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(commentSet28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-12) + "'", int43 == (-12));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 281135490 + "'", int67 == 281135490);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(symbol74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(commentSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = astRoot0.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = astRoot0.new NodeIterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        int int3 = compilerEnvirons0.getLanguageVersion();
        int int4 = compilerEnvirons0.getLanguageVersion();
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        int int6 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        boolean boolean11 = compilerEnvirons0.isGeneratingSource();
        java.util.Set<java.lang.String> strSet12 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strSet12);
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isRecordingComments();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons7.getErrorReporter();
        boolean boolean11 = compilerEnvirons7.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons7.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException18 = errorReporter12.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons0.setErrorReporter(errorReporter12);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean22 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertNotNull(evaluatorException18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot0.target = astRoot7;
        int int18 = astRoot0.getParamCount();
        java.lang.String str19 = astRoot0.shortName();
        java.lang.Object obj21 = astRoot0.getProp((int) (byte) 10);
        java.lang.Object obj23 = astRoot0.getProp((-1593445669));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope24 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setRecordingLocalJsDocComments(false);
        boolean boolean14 = compilerEnvirons11.isGeneratingSource();
        compilerEnvirons11.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        compilerEnvirons17.setWarnTrailingComma(false);
        compilerEnvirons17.setAllowSharpComments(false);
        boolean boolean25 = compilerEnvirons17.isGenerateDebugInfo();
        compilerEnvirons17.setIdeMode(false);
        compilerEnvirons17.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons30.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons30.getErrorReporter();
        boolean boolean34 = compilerEnvirons30.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter35 = compilerEnvirons30.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser36 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17, errorReporter35);
        compilerEnvirons11.setErrorReporter(errorReporter35);
        compilerEnvirons0.setErrorReporter(errorReporter35);
        boolean boolean39 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean40 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(errorReporter35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = scriptNode24.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int29 = astRoot14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot14);
        node31.removeProp(541550340);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.setTop(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        scriptNode37.setCompilerData((java.lang.Object) scope40);
        scriptNode37.setEncodedSourceEnd(0);
        int int45 = scriptNode37.getType();
        int int46 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node47 = scriptNode37.target;
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope49.setTop(scriptNode51);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scope53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        scriptNode51.setCompilerData((java.lang.Object) scope54);
        scriptNode51.setEncodedSourceEnd(0);
        int int59 = scriptNode51.getType();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(365262889, node31, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode51, 1171068332);
        com.google.javascript.rhino.head.Node node62 = scriptNode51.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope63 = scriptNode51.getParentScope();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 136 + "'", int45 == 136);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 136 + "'", int59 == 136);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNull(scope63);
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int7 = scriptNode3.getIntProp((int) 'a', 19);
        int int8 = scriptNode3.getFunctionCount();
        scriptNode3.setEncodedSourceEnd(22);
        int int11 = scriptNode3.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray12 = scriptNode3.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 19 + "'", int7 == 19);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1576490526));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = iRFactory10.transformTree(astRoot12);
        java.lang.String str19 = astRoot12.toSource(1034001328);
        java.lang.String str20 = astRoot12.toSource();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        com.google.javascript.rhino.head.ast.Scope scope3 = astRoot1.getDefiningScope("AstRoot");
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = astRoot1.getSymbols();
        java.lang.Class<?> wildcardClass12 = symbolList11.getClass();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot0.target = astRoot7;
        int int18 = astRoot7.getType();
        java.lang.String str19 = astRoot7.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope20 = astRoot7.getEnclosingScope();
        astRoot7.setEndLineno(550287075);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.ast.Scope scope24 = astRoot7.getParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        com.google.javascript.rhino.head.Node node32 = astRoot25.getLastSibling();
        com.google.javascript.rhino.head.Node node33 = astRoot25.target;
        // The following exception was thrown during execution in test generation
        try {
            int int34 = astRoot7.getIndexForNameNode(node33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str19, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node33);
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toSource();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode11.toSource(0);
        scriptNode11.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) '#', node7, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) scriptNode11, 2);
        com.google.javascript.rhino.head.Node node19 = scope10.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getEndLineno();
        java.lang.Object obj25 = astRoot23.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray26 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet27, commentArray26);
        astRoot23.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet27);
        astRoot23.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getNextTempName();
        com.google.javascript.rhino.head.Node node33 = scriptNode31.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode31.getFunctions();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int36 = astRoot21.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope38.setTop(scriptNode40);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor42 = scope38.iterator();
        astRoot21.setParentScope(scope38);
        scope10.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot21);
        astRoot0.putProp(520361644, (java.lang.Object) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = astRoot47.getAstRoot();
        java.lang.String str49 = astRoot48.shortName();
        java.lang.String str50 = astRoot48.debugPrint();
        com.google.javascript.rhino.head.Node node51 = astRoot48.getFirstChild();
        boolean boolean52 = astRoot48.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        java.lang.String str55 = astRoot53.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode56.getSymbols();
        java.lang.String str58 = astRoot53.toStringTree(scriptNode56);
        astRoot53.checkParentLinks();
        int int62 = astRoot53.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int65 = astRoot64.getEndLineno();
        java.lang.Object obj66 = astRoot64.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray67 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet68 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet68, commentArray67);
        astRoot64.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet68);
        com.google.javascript.rhino.head.Node node71 = astRoot64.getLastSibling();
        int int72 = node71.getType();
        astRoot53.putProp((int) ' ', (java.lang.Object) node71);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot53, 26);
        astRoot53.setBaseLineno(23);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(commentArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor42);
        org.junit.Assert.assertNotNull(astRoot48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AstRoot" + "'", str49, "AstRoot");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "136" + "'", str55, "136");
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(commentArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 136 + "'", int72 == 136);
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope(122705610, 3);
        scope11.setLineno(550287075);
        int int14 = scope11.getLineno();
        astRoot1.addChildrenToBack((com.google.javascript.rhino.head.Node) scope11);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump16 = scope11.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 550287075 + "'", int14 == 550287075);
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int16 = astRoot8.getParamCount();
        java.lang.String str17 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot30.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        astRoot53.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode61);
        astRoot30.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        astRoot53.setEncodedSourceBounds((int) (short) -1, 13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor71 = null;
        astRoot53.visitComments(nodeVisitor71);
        astRoot53.setBounds(1115693949, 653625563);
        java.lang.String str76 = astRoot53.debugPrint();
        astRoot53.setInStrictMode(true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "1115693949\tSCRIPT 1115693949 -462068386\n" + "'", str76, "1115693949\tSCRIPT 1115693949 -462068386\n");
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        com.google.javascript.rhino.head.Node node39 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.Node node40 = astRoot32.target;
        astRoot12.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        astRoot32.setEncodedSourceBounds(1942790351, (-289553421));
        java.lang.String str45 = astRoot32.debugPrint();
        int int46 = astRoot32.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump47 = astRoot32.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str45, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons10.getErrorReporter();
        compilerEnvirons7.setErrorReporter(errorReporter13);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = iRFactory15.parse("                          ", "/", 1796887248);
        int int20 = astRoot19.getType();
        int int21 = astRoot19.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray22 = astRoot19.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertNotNull(astRoot19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node29 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator30.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator31);
        com.google.javascript.rhino.head.Node node33 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node34 = node33.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        node33.addChildToFront((com.google.javascript.rhino.head.Node) scope35);
        int int37 = scope35.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = scope35.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int42 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scope35, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        node29.addChildToFront((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.Node node44 = astRoot41.getLastSibling();
        astRoot41.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode52 = astRoot51.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) scriptNode53);
        int int57 = astRoot49.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot49, scope58);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope58);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope62.addChild((com.google.javascript.rhino.head.ast.AstNode) scope63);
        boolean boolean65 = scope62.hasSideEffects();
        int int66 = scope58.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope62);
        boolean boolean67 = scope62.hasConsistentReturnUsage();
        astRoot41.addChildrenToFront((com.google.javascript.rhino.head.Node) scope62);
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator70 = scope69.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getNextTempName();
        scope69.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = scriptNode71.getChildScopes();
        scriptNode71.clearParentScope();
        scriptNode71.setEncodedSourceStart((-61111));
        astRoot41.setTop(scriptNode71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = astRoot41.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-12) + "'", int42 == (-12));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNull(astNode52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-583098700) + "'", int66 == (-583098700));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertNull(scopeList74);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot35.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getNextTempName();
        com.google.javascript.rhino.head.Node node45 = scriptNode43.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode43.getFunctions();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode43);
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot35);
        astRoot12.setBaseLineno(1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getNextTempName();
        com.google.javascript.rhino.head.Node node53 = scriptNode51.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode51.getFunctions();
        int int55 = scriptNode51.getEncodedSourceEnd();
        scriptNode51.setBounds((int) (byte) 0, 3);
        astRoot12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap60 = scriptNode51.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(strMap60);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Comment comment12 = scriptNode8.getJsDocNode();
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.lang.String str14 = scriptNode8.debugPrint();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment24 = null;
        astRoot17.setJsDocNode(comment24);
        astRoot17.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean30 = astRoot29.hasSideEffects();
        int int31 = astRoot29.getParamCount();
        astRoot17.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode33.toSource(0);
        scriptNode33.setEncodedSourceBounds(12, 10);
        scriptNode33.setSourceName("");
        astRoot17.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray44 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList45, symbolArray44);
        astRoot42.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList45);
        boolean boolean48 = astRoot42.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot42.getSymbolTable();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot42);
        int int51 = astRoot2.depth();
        astRoot2.setBaseLineno(548641306);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{\n}\n" + "'", str35, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(symbolArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        int int10 = astRoot0.getRegexpCount();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = astRoot0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Comment comment12 = astRoot0.getJsDocNode();
        astRoot0.setLineno((-1115328205));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = astRoot0.getTop();
        scriptNode15.putIntProp((int) ' ', (-1438167940));
        int int19 = scriptNode15.getEndLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        boolean boolean34 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(1034001328);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("java.io.IOException: 8\tSCRIPT 8 1\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node4 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int10 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, scope11);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope18.spliterator();
        astRoot16.addChildScope(scope18);
        java.lang.String str22 = astRoot16.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        java.lang.String str25 = astRoot23.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode26.getSymbols();
        java.lang.String str28 = astRoot23.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scope29.addChild((com.google.javascript.rhino.head.ast.AstNode) scope30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope30.setTop(scriptNode32);
        java.lang.String str35 = scope30.toSource(12);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope30);
        astRoot16.setBaseLineno(19);
        astRoot16.checkParentLinks();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, 26);
        scope11.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot16, node42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getNextTempName();
        com.google.javascript.rhino.head.Node node46 = scriptNode44.target;
        int int47 = scriptNode44.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastChild();
        int int49 = scriptNode44.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scriptNode44.getSymbolTable();
        astRoot16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        astRoot16.removeChildren();
        boolean boolean53 = astRoot16.hasSideEffects();
        com.google.javascript.rhino.head.Node node54 = astRoot16.getLastChild();
        boolean boolean55 = astRoot16.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                        {\n                        }\n" + "'", str35, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        boolean boolean9 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = astRoot0.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = nodeIterator10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        compilerEnvirons19.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException31 = errorReporter25.runtimeError("$0", "                        {\n                        }\n", (int) (byte) 1, "$0", 100);
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter25);
        boolean boolean33 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean36 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(evaluatorException31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = astRoot0.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment11 = astRoot0.getJsDocNode();
        int int12 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(astNodeList10);
        org.junit.Assert.assertNull(comment11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int12 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setStrictMode(true);
        boolean boolean16 = compilerEnvirons13.recoverFromErrors();
        compilerEnvirons13.setRecordingComments(true);
        boolean boolean19 = compilerEnvirons13.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons23.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons23.getErrorReporter();
        compilerEnvirons20.setErrorReporter(errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory28 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons13, errorReporter26);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException34 = errorReporter26.runtimeError("java.io.IOException:   {\n  }\n", "-1\tSCRIPT -1 1\n", 25, "0", 1051569336);
        errorReporter26.warning("  $0;\n", "{\n}\n", (-138693843), "-11\tBLOCK -11 1\n", 278475323);
        compilerEnvirons0.setErrorReporter(errorReporter26);
        compilerEnvirons0.setGeneratingSource(false);
        boolean boolean44 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons0.getErrorReporter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertNotNull(evaluatorException34);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter45);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-1610320791));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -1610320791");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isXmlAvailable();
        boolean boolean12 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setGenerateObserverCount(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        boolean boolean25 = compilerEnvirons9.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9);
        compilerEnvirons9.setAllowSharpComments(true);
        compilerEnvirons9.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setWarnTrailingComma(true);
        boolean boolean34 = compilerEnvirons31.isRecordingLocalJsDocComments();
        compilerEnvirons31.setWarnTrailingComma(false);
        compilerEnvirons31.setAllowSharpComments(false);
        boolean boolean39 = compilerEnvirons31.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons40.setWarnTrailingComma(true);
        java.lang.String[] strArray52 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        compilerEnvirons40.setActivationNames((java.util.Set<java.lang.String>) strSet53);
        compilerEnvirons31.setActivationNames((java.util.Set<java.lang.String>) strSet53);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet53);
        boolean boolean58 = compilerEnvirons9.isXmlAvailable();
        boolean boolean59 = compilerEnvirons9.isGeneratingSource();
        boolean boolean60 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter61 = compilerEnvirons9.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter61);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(errorReporter61);
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 541550340);
        java.lang.String str9 = scope8.toString();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) scope8);
        int int11 = astRoot0.getFunctionCount();
        java.lang.String str12 = astRoot0.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = astRoot14.getLastSibling();
        java.lang.String str24 = astRoot14.toSource(0);
        java.lang.String str25 = astRoot14.toSource();
        astRoot0.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = astRoot14.getAstRoot();
        com.google.javascript.rhino.head.Parser parser28 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = parser28.parse("", "-1\tSCRIPT -1 1\n", 19);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = astRoot32.getComments();
        astRoot14.setCompilerData((java.lang.Object) astRoot32);
        astRoot32.setInStrictMode(false);
        int int37 = astRoot32.getEncodedSourceEnd();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "129" + "'", str9, "129");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertNotNull(astRoot32);
        org.junit.Assert.assertNull(commentSet33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        astRoot12.checkParentLinks();
        com.google.javascript.rhino.head.Node node19 = astRoot12.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        boolean boolean24 = compilerEnvirons21.recoverFromErrors();
        compilerEnvirons21.setRecordingComments(true);
        astRoot12.putProp(11, (java.lang.Object) true);
        astRoot12.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = iRFactory11.transformTree(astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int33 = astRoot32.getType();
        com.google.javascript.rhino.head.Node node34 = astRoot32.getFirstChild();
        astRoot32.putIntProp((int) (short) 100, 953557037);
        int int38 = astRoot32.getEndLineno();
        int int39 = astRoot32.getLineno();
        int int42 = astRoot32.getIntProp((-236001159), 0);
        int int43 = astRoot32.getPosition();
        java.lang.String str44 = astRoot32.getNextTempName();
        astRoot32.setRelative(22);
        int int47 = astRoot12.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot32);
        com.google.javascript.rhino.head.ast.Comment comment48 = null;
        astRoot32.setJsDocNode(comment48);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = astRoot32.getFunctionNode(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 136 + "'", int33 == 136);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot1, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot1.getComments();
        astRoot1.setEncodedSourceStart(761599885);
        astRoot1.setSourceName("java.io.IOException: java.io.IOException");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(commentSet5);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment5 = null;
        astRoot1.setJsDocNode(comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = astRoot1.getChildScopes();
        java.lang.String str8 = astRoot1.debugPrint();
        astRoot1.clearParentScope();
        int int10 = astRoot1.getEndLineno();
        int int11 = astRoot1.getPosition();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str8, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        int int6 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        astRoot30.visitComments(nodeVisitor31);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        scriptNode36.setCompilerData((java.lang.Object) scope39);
        scriptNode36.setEncodedSourceEnd(0);
        int int44 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot30, (com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        int int45 = astRoot30.getLineno();
        astRoot30.setEncodedSourceBounds((-1610320791), 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 11 + "'", int44 == 11);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean27 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        boolean boolean31 = compilerEnvirons28.recoverFromErrors();
        compilerEnvirons28.setRecordingComments(true);
        compilerEnvirons28.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons36.getErrorReporter();
        boolean boolean40 = compilerEnvirons36.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter41 = compilerEnvirons36.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException47 = errorReporter41.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        com.google.javascript.rhino.head.Parser parser48 = new com.google.javascript.rhino.head.Parser(compilerEnvirons28, errorReporter41);
        compilerEnvirons0.setErrorReporter(errorReporter41);
        boolean boolean50 = compilerEnvirons0.isRecordingComments();
        boolean boolean51 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorReporter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(errorReporter41);
        org.junit.Assert.assertNotNull(evaluatorException47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        java.lang.String str10 = astRoot0.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = null;
        astRoot0.setSymbolTable(strMap11);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        boolean boolean17 = compilerEnvirons14.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons14.getErrorReporter();
        compilerEnvirons14.setGeneratingSource(false);
        compilerEnvirons14.setReservedKeywordAsIdentifier(false);
        compilerEnvirons14.setGenerateDebugInfo(true);
        int int25 = compilerEnvirons14.getOptimizationLevel();
        astRoot0.setCompilerData((java.lang.Object) compilerEnvirons14);
        com.google.javascript.rhino.head.Node node27 = astRoot0.getNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node28 = astRoot0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node27);
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = astRoot4.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = astRoot4.getSymbols();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.lang.String str25 = astRoot19.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode29.getSymbols();
        java.lang.String str31 = astRoot26.toStringTree(scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.setTop(scriptNode35);
        java.lang.String str38 = scope33.toSource(12);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot41, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = astRoot41.getComments();
        node39.addChildToBack((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.Node node47 = astRoot41.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator49 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator50 = positionComparator48.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator49);
        com.google.javascript.rhino.head.Node node51 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node52 = node51.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        node51.addChildToFront((com.google.javascript.rhino.head.Node) scope53);
        int int55 = scope53.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = scope53.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int60 = positionComparator49.compare((com.google.javascript.rhino.head.ast.AstNode) scope53, (com.google.javascript.rhino.head.ast.AstNode) astRoot59);
        node47.addChildToFront((com.google.javascript.rhino.head.Node) astRoot59);
        com.google.javascript.rhino.head.Node node62 = astRoot59.getLastSibling();
        boolean boolean63 = astRoot59.hasSideEffects();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot59);
        scriptNode1.addChildrenToFront(node64);
        java.lang.String str66 = scriptNode1.getNextTempName();
        scriptNode1.setEncodedSourceEnd((-8));
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str70 = astRoot69.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator72 = scope71.spliterator();
        astRoot69.addChildScope(scope71);
        java.lang.String str75 = astRoot69.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment76 = null;
        astRoot69.setJsDocNode(comment76);
        astRoot69.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean82 = astRoot81.hasSideEffects();
        int int83 = astRoot81.getParamCount();
        astRoot69.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot81);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode85.toSource(0);
        scriptNode85.setEncodedSourceBounds(12, 10);
        scriptNode85.setSourceName("");
        astRoot69.setTop(scriptNode85);
        java.lang.String str95 = astRoot69.toSource((-2110645446));
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot69);
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node((-53), (com.google.javascript.rhino.head.Node) astRoot69);
        com.google.javascript.rhino.head.Node node98 = astRoot69.target;
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "136" + "'", str28, "136");
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                        {\n                        }\n" + "'", str38, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(commentSet45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(astNodeComparator50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(symbol57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-12) + "'", int60 == (-12));
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "$0" + "'", str70, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{\n}\n" + "'", str87, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
        org.junit.Assert.assertNull(node98);
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(9, "java.io.IOException: java.io.IOException: hi!");
        com.google.javascript.rhino.head.ast.Scope scope3 = node2.getScope();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(scope3);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet11 = compilerEnvirons8.getActivationNames();
        boolean boolean12 = compilerEnvirons8.recoverFromErrors();
        boolean boolean13 = compilerEnvirons8.getWarnTrailingComma();
        boolean boolean14 = compilerEnvirons8.isIdeMode();
        boolean boolean15 = compilerEnvirons8.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setWarnTrailingComma(true);
        boolean boolean22 = compilerEnvirons19.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser24 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter23);
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter23);
        boolean boolean26 = compilerEnvirons8.isStrictMode();
        compilerEnvirons8.setIdeMode(false);
        boolean boolean29 = compilerEnvirons8.isRecordingLocalJsDocComments();
        boolean boolean30 = compilerEnvirons8.isRecordingLocalJsDocComments();
        astRoot0.setCompilerData((java.lang.Object) boolean30);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        com.google.javascript.rhino.head.IRFactory iRFactory0 = new com.google.javascript.rhino.head.IRFactory();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        java.lang.String str4 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = scriptNode2.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node6 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node7 = node6.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode2, node7, (com.google.javascript.rhino.head.Node) astRoot9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = iRFactory0.transformTree(astRoot9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = astRoot12.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        boolean boolean21 = scope18.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope18, scope22);
        astRoot12.replaceWith(scope18);
        scope18.setLength((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol30 = scope18.getSymbol("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Node node31 = iRFactory0.transform((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.Node node32 = node31.getLastChild();
        com.google.javascript.rhino.head.ast.Comment comment33 = null;
        node31.setJsDocNode(comment33);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str4, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scopeList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(symbol30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        com.google.javascript.rhino.head.Node node1 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-21), node1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.getSourceName();
        astRoot1.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setWarnTrailingComma(true);
        boolean boolean35 = compilerEnvirons32.isRecordingLocalJsDocComments();
        compilerEnvirons32.setWarnTrailingComma(false);
        compilerEnvirons32.setAllowSharpComments(false);
        boolean boolean40 = compilerEnvirons32.isGenerateDebugInfo();
        compilerEnvirons32.setIdeMode(false);
        compilerEnvirons32.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter48 = compilerEnvirons45.getErrorReporter();
        boolean boolean49 = compilerEnvirons45.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons45.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser51 = new com.google.javascript.rhino.head.Parser(compilerEnvirons32, errorReporter50);
        com.google.javascript.rhino.head.IRFactory iRFactory52 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = iRFactory52.parse("                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", 5);
        astRoot1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node60 = scriptNode58.target;
        int int61 = scriptNode58.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node62 = scriptNode58.getLastChild();
        scriptNode58.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = null;
        scriptNode58.setSymbolTable(strMap65);
        astRoot56.setTop(scriptNode58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = scriptNode58.getTop();
        com.google.javascript.rhino.head.ast.Comment comment69 = scriptNode68.getJsDocNode();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(astRoot56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertNull(comment69);
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str5 = astRoot2.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = astRoot2.getFunctions();
        astRoot2.checkParentLinks();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        astRoot2.visitComments(nodeVisitor8);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, 852076584);
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(functionNodeList6);
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean5 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator1.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.Node node6 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node7 = node6.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        node6.addChildToFront((com.google.javascript.rhino.head.Node) scope8);
        int int10 = scope8.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol12 = scope8.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int15 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) scope8, (com.google.javascript.rhino.head.ast.AstNode) astRoot14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = astRoot19.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode21);
        boolean boolean25 = astRoot17.isInStrictMode();
        astRoot17.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getEndLineno();
        java.lang.Object obj30 = astRoot28.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray31 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet32 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet32, commentArray31);
        astRoot28.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet32);
        astRoot28.checkParentLinks();
        int int36 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot17, (com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator37 = positionComparator1.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        com.google.javascript.rhino.head.Node node40 = scriptNode38.target;
        int int41 = scriptNode38.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node42 = scriptNode38.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.Comment comment50 = null;
        scriptNode48.setJsDocNode(comment50);
        int int52 = scriptNode48.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope(20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scope54.getChildScopes();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scope54, (int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode48.getChildScopes();
        int int59 = positionComparator4.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode38, (com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode(3);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope64.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scope68.addChild((com.google.javascript.rhino.head.ast.AstNode) scope69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope69.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode73.toSource(0);
        scriptNode73.setEncodedSourceBounds(12, 10);
        scriptNode71.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode73);
        com.google.javascript.rhino.head.ast.Scope scope80 = scriptNode71.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode71.getFunctions();
        com.google.javascript.rhino.head.Node node83 = scriptNode71.setType((int) (short) 10);
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(1246810839, (com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scope64, (com.google.javascript.rhino.head.Node) scriptNode71);
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node((-331679258), (com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scope64);
        int int86 = scope64.depth();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(symbol12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-12) + "'", int15 == (-12));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(commentArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-52) + "'", int36 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{\n}\n" + "'", str75, "{\n}\n");
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        astRoot4.setLineno(703513808);
        java.lang.String str15 = astRoot4.toSource(272885524);
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot0.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = astRoot0.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons15.getErrorReporter();
        boolean boolean19 = compilerEnvirons15.isGenerateObserverCount();
        compilerEnvirons15.setRecordingComments(true);
        boolean boolean22 = compilerEnvirons15.isGenerateObserverCount();
        boolean boolean23 = compilerEnvirons15.isGenerateDebugInfo();
        compilerEnvirons15.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory30 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons15, errorReporter29);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        int int42 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode36, (com.google.javascript.rhino.head.ast.AstNode) scope39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        astRoot43.addChildScope(scope45);
        java.lang.String str49 = astRoot43.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = astRoot43.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode55 = astRoot54.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int60 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot43, (com.google.javascript.rhino.head.ast.AstNode) astRoot52);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot52, 24);
        astRoot52.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = iRFactory30.transformTree(astRoot52);
        int int65 = astRoot52.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = astRoot7.getAstRoot();
        astRoot0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = astRoot7.getFunctions();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(astRoot67);
        org.junit.Assert.assertNotNull(functionNodeList69);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-209993672), "-61111\tSCRIPT -61111 1\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot6.getAstRoot();
        java.lang.String str8 = astRoot7.shortName();
        com.google.javascript.rhino.head.Node node9 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node10 = node9.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        node9.addChildToFront((com.google.javascript.rhino.head.Node) scope11);
        int int13 = scope11.getLineno();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scope11, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope17);
        astRoot7.addChildrenToFront((com.google.javascript.rhino.head.Node) scope17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = astRoot7.new NodeIterator();
        int int21 = astRoot7.getPosition();
        astRoot7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getNextTempName();
        int int26 = scriptNode24.depth();
        com.google.javascript.rhino.head.ast.Comment comment27 = null;
        scriptNode24.setJsDocNode(comment27);
        com.google.javascript.rhino.head.Node node29 = scriptNode24.getLastSibling();
        scriptNode24.setRelative(1471166993);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(1115693949, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        com.google.javascript.rhino.head.Node node36 = scriptNode34.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode34.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        java.lang.String str40 = scriptNode38.debugPrint();
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        astRoot7.putProp(453396462, (java.lang.Object) scriptNode34);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int44 = scriptNode34.addFunction(functionNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AstRoot" + "'", str8, "AstRoot");
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str40, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str4 = astRoot1.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList5 = astRoot1.getFunctions();
        astRoot1.checkParentLinks();
        boolean boolean7 = astRoot1.hasChildren();
        int int8 = astRoot1.getLineno();
        boolean boolean9 = astRoot1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = astRoot1.getLastSibling();
        int int11 = astRoot1.getEncodedSourceEnd();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(functionNodeList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(4, (-717691128));
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.Node node4 = scope2.getFirstChild();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope2);
        scope2.setRelative(100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray10 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList11, symbolArray10);
        astRoot8.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList11);
        boolean boolean14 = astRoot8.hasChildren();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) astRoot8);
        // The following exception was thrown during execution in test generation
        try {
            scope2.setDouble((double) (-307188518));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(symbolArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean10 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setIdeMode(false);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        int int10 = astRoot0.getRegexpCount();
        com.google.javascript.rhino.head.Node node11 = astRoot0.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = astRoot0.getSymbolTable();
        int int15 = astRoot0.getIntProp((int) (byte) 10, 973854177);
        astRoot0.setRelative(653625563);
        int int18 = astRoot0.getParamCount();
        java.lang.String str20 = astRoot0.toSource(6);
        com.google.javascript.rhino.head.ast.Comment comment21 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addComment(comment21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 973854177 + "'", int15 == 973854177);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException26 = errorReporter20.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter20);
        compilerEnvirons0.setAllowSharpComments(true);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion((-131519396));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: -131519396");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(evaluatorException26);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        boolean boolean9 = compilerEnvirons0.isRecordingComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        compilerEnvirons0.setOptimizationLevel(4);
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException15 = errorReporter9.runtimeError("21", "                                    ", 32, "          {\n          }\n", 278475323);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) evaluatorException15);
        java.lang.Throwable[] throwableArray17 = evaluatorException15.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertNotNull(evaluatorException15);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = astRoot4.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.Node node9 = null;
        astRoot4.target = node9;
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot4);
        java.lang.String str13 = astRoot4.toSource(1159083728);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int30 = astRoot17.getRegexpCount();
        com.google.javascript.rhino.head.Node node31 = astRoot17.getNext();
        astRoot17.setBaseLineno(10);
        astRoot17.setEncodedSourceBounds(136, 3);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot4, (com.google.javascript.rhino.head.ast.Scope) astRoot17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope41.spliterator();
        astRoot39.addChildScope(scope41);
        java.lang.String str45 = astRoot39.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        java.lang.String str48 = astRoot46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = scriptNode49.getSymbols();
        java.lang.String str51 = astRoot46.toStringTree(scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope53.setTop(scriptNode55);
        java.lang.String str58 = scope53.toSource(12);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) scope53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot61, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = astRoot61.getComments();
        node59.addChildToBack((com.google.javascript.rhino.head.Node) astRoot61);
        com.google.javascript.rhino.head.Node node67 = astRoot61.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator68 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator69 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator70 = positionComparator68.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator69);
        com.google.javascript.rhino.head.Node node71 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node72 = node71.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        node71.addChildToFront((com.google.javascript.rhino.head.Node) scope73);
        int int75 = scope73.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol77 = scope73.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int80 = positionComparator69.compare((com.google.javascript.rhino.head.ast.AstNode) scope73, (com.google.javascript.rhino.head.ast.AstNode) astRoot79);
        node67.addChildToFront((com.google.javascript.rhino.head.Node) astRoot79);
        java.lang.String str82 = astRoot4.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot79);
        com.google.javascript.rhino.head.Node node83 = astRoot4.target;
        com.google.javascript.rhino.head.ast.Comment comment84 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot4.addComment(comment84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(symbol8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNotNull(symbolList50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                        {\n                        }\n" + "'", str58, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(commentSet65);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(astNodeComparator70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-12) + "'", int80 == (-12));
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(node83);
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        int int5 = astRoot0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = astRoot6.target;
        int int9 = astRoot6.getFunctionCount();
        java.lang.String str10 = astRoot6.toString();
        astRoot0.target = astRoot6;
        com.google.javascript.rhino.head.ast.Comment comment12 = null;
        astRoot6.setJsDocNode(comment12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot23, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot23.getComments();
        node21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = astRoot29.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        boolean boolean38 = scope35.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope35, scope39);
        astRoot29.replaceWith(scope35);
        java.lang.String str44 = scope35.debugPrint();
        astRoot23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        astRoot23.setInStrictMode(true);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(scopeList34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n" + "'", str44, "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope4 = astRoot0.getDefiningScope("java.io.IOException: ");
        int int5 = astRoot0.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList6 = astRoot0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getNextTempName();
        java.lang.String str9 = scriptNode7.debugPrint();
        scriptNode7.setLineno((int) (byte) -1);
        int int12 = scriptNode7.getFunctionCount();
        scriptNode7.setPosition(1022253418);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        com.google.javascript.rhino.head.ast.Symbol symbol17 = scriptNode7.getSymbol("java.io.IOException: 14\tSCRIPT 14 1\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(astNodeList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(symbol17);
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.IRFactory iRFactory7 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getEndLineno();
        java.lang.Object obj13 = astRoot11.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray14 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet15, commentArray14);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet15);
        astRoot11.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getNextTempName();
        com.google.javascript.rhino.head.Node node21 = scriptNode19.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList22 = scriptNode19.getFunctions();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str25 = astRoot9.toSource(20);
        boolean boolean26 = astRoot9.hasSideEffects();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = astRoot9.iterator();
        com.google.javascript.rhino.head.Node node28 = iRFactory7.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot9);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = node28.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(commentArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(functionNodeList22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeSpliterator29);
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        astRoot53.addChildScope(scope55);
        java.lang.String str59 = astRoot53.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str61 = astRoot60.getNextTempName();
        java.lang.String str62 = astRoot60.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode63.getSymbols();
        java.lang.String str65 = astRoot60.toStringTree(scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope66.addChild((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope67.setTop(scriptNode69);
        java.lang.String str72 = scope67.toSource(12);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope67);
        astRoot50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int76 = astRoot75.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray77 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList78, symbolArray77);
        astRoot75.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList78);
        astRoot75.clearParentScope();
        astRoot50.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot75);
        com.google.javascript.rhino.head.ast.Scope scope83 = astRoot75.getParentScope();
        java.lang.String str84 = astRoot75.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = astRoot75.getEnclosingFunction();
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1293528350) + "'", int51 == (-1293528350));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                        {\n                        }\n" + "'", str72, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(symbolArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(scope83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str84, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode85);
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        astRoot3.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        int int14 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastChild();
        int int16 = scriptNode11.getEndLineno();
        astRoot3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = astRoot3.getSymbolTable();
        int int19 = astRoot3.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor20 = null;
        astRoot3.visitComments(nodeVisitor20);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = astRoot3.new NodeIterator();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getEnclosingScope();
        scope26.putIntProp((-12), (-846380080));
        astRoot3.setParent((com.google.javascript.rhino.head.ast.AstNode) scope26);
        java.lang.String str31 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.Symbol symbol33 = astRoot3.getSymbol("java.io.IOException:   {\n  }\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertNotNull(scope26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1\t  SCRIPT 0 1\n-1\t    SCRIPT 0 1\n" + "'", str31, "-1\t  SCRIPT 0 1\n-1\t    SCRIPT 0 1\n");
        org.junit.Assert.assertNull(symbol33);
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        java.io.IOException iOException1 = new java.io.IOException("typeof");
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        int int5 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser14 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter13);
        boolean boolean15 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        boolean boolean16 = compilerEnvirons6.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setWarnTrailingComma(true);
        boolean boolean20 = compilerEnvirons17.isRecordingLocalJsDocComments();
        compilerEnvirons17.setWarnTrailingComma(false);
        compilerEnvirons17.setAllowSharpComments(false);
        boolean boolean25 = compilerEnvirons17.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        java.lang.String[] strArray38 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        compilerEnvirons26.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons17.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet39);
        boolean boolean45 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int48 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setRecordingComments(false);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        boolean boolean55 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope46.setTop(scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        scriptNode48.setCompilerData((java.lang.Object) scope51);
        scriptNode48.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.Node node58 = scriptNode56.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode56.getFunctions();
        int int60 = scriptNode56.getEncodedSourceEnd();
        scriptNode48.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode56);
        scriptNode48.setBaseLineno(6);
        scriptNode5.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        java.lang.String str66 = scriptNode48.toSource((-475744774));
        int int67 = scriptNode48.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump68 = scriptNode48.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{\n{\n}\n}\n" + "'", str66, "{\n{\n}\n}\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        scriptNode1.setRelative((-1));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = null;
        scriptNode1.setSymbolTable(strMap8);
        int int10 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString((-236001159), "                                                {\n                                                }\n");
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode1, node13, (int) (short) 1);
        int int16 = scriptNode1.getType();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = scriptNode1.getExistingIntProp((-310448759));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 136 + "'", int16 == 136);
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("!");
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.lang.Object obj8 = astRoot6.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray9 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet10 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet10, commentArray9);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet10);
        com.google.javascript.rhino.head.Node node13 = astRoot6.getLastSibling();
        int int14 = node13.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        java.lang.String str22 = astRoot15.toSource(0);
        java.lang.String str24 = astRoot15.toSource(25);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope5, node13, (com.google.javascript.rhino.head.Node) astRoot15);
        int int26 = astRoot15.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = astRoot27.getChildScopes();
        java.lang.String str33 = astRoot27.toString();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot15, (com.google.javascript.rhino.head.ast.Scope) astRoot27);
        java.lang.String str35 = node1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot15);
        java.lang.String str36 = astRoot15.shortName();
        boolean boolean37 = astRoot15.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = astRoot15.getTop();
        java.lang.String str39 = astRoot15.toString();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(commentArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 136 + "'", int14 == 136);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertNotNull(scopeList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AstRoot" + "'", str36, "AstRoot");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "136" + "'", str39, "136");
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons6.getErrorReporter();
        boolean boolean10 = compilerEnvirons6.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons6.getErrorReporter();
        compilerEnvirons6.setRecordingLocalJsDocComments(true);
        boolean boolean14 = compilerEnvirons6.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean16 = compilerEnvirons15.recoverFromErrors();
        int int17 = compilerEnvirons15.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser19 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter18);
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scope22.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node26 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node27 = node26.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        node26.addChildToFront((com.google.javascript.rhino.head.Node) scope28);
        scope22.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode25, node26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        java.lang.String str33 = node26.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot31);
        java.lang.String str34 = astRoot31.getNextTempName();
        boolean boolean35 = astRoot31.hasSideEffects();
        java.lang.String str37 = astRoot31.toSource(100);
        int int38 = astRoot31.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scope41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.Node node44 = scope42.getFirstChild();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope42);
        scope42.setRelative(100);
        com.google.javascript.rhino.head.ast.AstNode astNode48 = scope42.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getEndLineno();
        java.lang.Object obj51 = astRoot49.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol53 = astRoot49.getSymbol("java.io.IOException: ");
        astRoot49.setEncodedSourceStart(0);
        java.lang.String str57 = astRoot49.toSource(14);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astNode48, (com.google.javascript.rhino.head.Node) astRoot49);
        astRoot31.target = astRoot49;
        com.google.javascript.rhino.head.ast.Scope scope60 = astRoot31.getParentScope();
        astRoot31.checkParentLinks();
        astRoot31.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = iRFactory20.transformTree(astRoot31);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(astNode48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(symbol53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNotNull(scriptNode63);
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        scriptNode3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = astRoot12.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        boolean boolean21 = scope18.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        scope22.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope18, scope22);
        astRoot12.replaceWith(scope18);
        int int27 = astRoot12.getEncodedSourceEnd();
        scriptNode5.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot12);
        astRoot12.setSourceName("-1\t  BLOCK 0 1\n");
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.setTop(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope38);
        scriptNode35.setCompilerData((java.lang.Object) scope38);
        scriptNode35.setEncodedSourceEnd(0);
        int int43 = scriptNode35.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        scriptNode35.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(910648842, (com.google.javascript.rhino.head.Node) scriptNode35, (-846380080));
        scriptNode35.setLineno((int) (byte) 1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getEndLineno();
        java.lang.Object obj58 = astRoot56.getCompilerData();
        astRoot56.setBaseLineno(14);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor61 = astRoot56.iterator();
        boolean boolean62 = astRoot56.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor63 = null;
        astRoot56.visitComments(nodeVisitor63);
        scriptNode35.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator70 = scope69.spliterator();
        astRoot67.addChildScope(scope69);
        java.lang.String str73 = astRoot67.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        java.lang.String str76 = astRoot74.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = scriptNode77.getSymbols();
        java.lang.String str79 = astRoot74.toStringTree(scriptNode77);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        scope80.addChild((com.google.javascript.rhino.head.ast.AstNode) scope81);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope81.setTop(scriptNode83);
        java.lang.String str86 = scope81.toSource(12);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot67, (com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) scope81);
        astRoot67.setBaseLineno(19);
        astRoot67.checkParentLinks();
        java.lang.String str92 = astRoot67.toSource(136);
        scriptNode35.addChildToFront((com.google.javascript.rhino.head.Node) astRoot67);
        java.lang.String str94 = astRoot67.debugPrint();
        astRoot12.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot67);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scopeList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 136 + "'", int43 == 136);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(nodeItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "136" + "'", str76, "136");
        org.junit.Assert.assertNotNull(symbolList78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                        {\n                        }\n" + "'", str86, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str94, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        int int30 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode24, (com.google.javascript.rhino.head.ast.AstNode) scope27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator20);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator32 = positionComparator3.reversed();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str38 = scriptNode35.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope41, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot44.getAstRoot();
        java.lang.String str46 = astRoot45.shortName();
        java.lang.String str47 = astRoot45.getSourceName();
        astRoot45.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = astRoot45.getSymbolTable();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) astRoot45);
        java.lang.Object obj51 = astRoot45.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode57 = astRoot56.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode58);
        astRoot56.setInStrictMode(true);
        int int64 = astRoot56.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        java.lang.String str67 = astRoot65.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode68.getSymbols();
        java.lang.String str70 = astRoot65.toStringTree(scriptNode68);
        astRoot65.checkParentLinks();
        int int74 = astRoot65.getIntProp(11, 32);
        int int75 = astRoot65.getPosition();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((-738182430), (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) astRoot65, 2);
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope(23);
        scope79.removeProp(22);
        astRoot45.addChildAfter((com.google.javascript.rhino.head.Node) astRoot65, (com.google.javascript.rhino.head.Node) scope79);
        int int83 = astRoot45.depth();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope85 = new com.google.javascript.rhino.head.ast.Scope();
        scope84.addChild((com.google.javascript.rhino.head.ast.AstNode) scope85);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator87 = scope85.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node89 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node90 = node89.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope91 = new com.google.javascript.rhino.head.ast.Scope();
        node89.addChildToFront((com.google.javascript.rhino.head.Node) scope91);
        scope85.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode88, node89);
        int int94 = scope85.depth();
        int int95 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot45, (com.google.javascript.rhino.head.ast.AstNode) scope85);
        java.lang.String str97 = astRoot45.makeIndent((-621736483));
        astRoot45.removeProp(1183427271);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertNotNull(astNodeComparator32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AstRoot" + "'", str46, "AstRoot");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(astNode57);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "136" + "'", str67, "136");
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32 + "'", int74 == 32);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNotNull(node90);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet3 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = astRoot0.getAstRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertNull(commentSet3);
        org.junit.Assert.assertNotNull(astRoot4);
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setWarnTrailingComma(true);
        boolean boolean14 = compilerEnvirons11.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter15);
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter15);
        boolean boolean18 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean21 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setIdeMode(true);
        boolean boolean24 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        int int4 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastChild();
        int int6 = scriptNode1.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scope10.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node15 = node14.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        node14.addChildToFront((com.google.javascript.rhino.head.Node) scope16);
        scope10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, node14);
        scope10.setRelative(5);
        scriptNode1.putProp((int) (byte) 1, (java.lang.Object) 5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot25.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = astRoot23.getParamCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = astRoot23.spliterator();
        com.google.javascript.rhino.head.Node node34 = astRoot23.setType(550287075);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scope35.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        scope35.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode37.getChildScopes();
        scriptNode37.clearParentScope();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(65536, (com.google.javascript.rhino.head.Node) scriptNode1, node34, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode1.setEncodedSourceStart((int) (short) 100);
        com.google.javascript.rhino.head.Node node46 = scriptNode1.setType(917048139);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertNotNull(node46);
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot3.getRegexpCount();
        com.google.javascript.rhino.head.Node node17 = astRoot3.getNext();
        astRoot3.setBaseLineno(10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = astRoot3.getComments();
        astRoot3.setLength((-12));
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot3.getParent();
        astRoot3.setBounds(775058292, 653625563);
        astRoot3.setEncodedSourceBounds((-1610320791), 1159083728);
        astRoot3.checkParentLinks();
        boolean boolean31 = astRoot3.isInStrictMode();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(commentSet20);
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons10.getErrorReporter();
        boolean boolean14 = compilerEnvirons10.isGenerateObserverCount();
        compilerEnvirons10.setRecordingComments(true);
        boolean boolean17 = compilerEnvirons10.isGenerateObserverCount();
        boolean boolean18 = compilerEnvirons10.isGenerateDebugInfo();
        compilerEnvirons10.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory25 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons10, errorReporter24);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator27 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        java.lang.String str30 = astRoot28.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode31.getSymbols();
        java.lang.String str33 = astRoot28.toStringTree(scriptNode31);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        int int37 = positionComparator27.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode31, (com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope40.spliterator();
        astRoot38.addChildScope(scope40);
        java.lang.String str44 = astRoot38.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = astRoot38.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str48 = astRoot47.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode50 = astRoot49.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) scriptNode51);
        int int55 = positionComparator27.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot38, (com.google.javascript.rhino.head.ast.AstNode) astRoot47);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot47, 24);
        astRoot47.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = iRFactory25.transformTree(astRoot47);
        int int60 = astRoot47.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot47);
        java.lang.String str63 = astRoot47.toSource(10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNotNull(errorReporter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertNotNull(symbolList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertNull(astNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        int int50 = astRoot37.getAbsolutePosition();
        astRoot37.setBounds(520361644, (-443001414));
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator58 = scope57.spliterator();
        astRoot55.addChildScope(scope57);
        java.lang.String str61 = astRoot55.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = astRoot55.getFunctions();
        java.lang.String str63 = astRoot55.toSource();
        astRoot55.setBaseLineno(0);
        astRoot37.putProp(0, (java.lang.Object) astRoot55);
        int int67 = astRoot37.depth();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.debugPrint();
        astRoot0.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str7 = astRoot6.debugPrint();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = astRoot6.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getNextTempName();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.target;
        boolean boolean12 = scriptNode9.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode9.getSymbols();
        astRoot6.setSymbols(symbolList13);
        astRoot0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((-557946458), (-1255375420));
        // The following exception was thrown during execution in test generation
        try {
            int int19 = astRoot0.getIndexForNameNode((com.google.javascript.rhino.head.Node) scope18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str7, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(symbolList13);
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-61111));
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = astRoot2.getAstRoot();
        java.lang.String str4 = astRoot3.shortName();
        java.lang.String str5 = astRoot3.debugPrint();
        astRoot3.clearParentScope();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator7 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator9 = positionComparator7.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int22 = positionComparator7.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot13, (com.google.javascript.rhino.head.ast.AstNode) scope21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator23 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        java.lang.String str26 = astRoot24.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode27.getSymbols();
        java.lang.String str29 = astRoot24.toStringTree(scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        int int33 = positionComparator23.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode27, (com.google.javascript.rhino.head.ast.AstNode) scope30);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator34 = positionComparator7.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray38 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList39, symbolArray38);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList39);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scope42.addChild((com.google.javascript.rhino.head.ast.AstNode) scope43);
        astRoot36.addChildScope(scope43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getEndLineno();
        java.lang.Object obj51 = astRoot49.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray52 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet53, commentArray52);
        astRoot49.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        astRoot49.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getNextTempName();
        com.google.javascript.rhino.head.Node node59 = scriptNode57.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList60 = scriptNode57.getFunctions();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int62 = astRoot47.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot47);
        astRoot47.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode74.toSource(0);
        scriptNode74.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) '#', node70, (com.google.javascript.rhino.head.Node) scope73, (com.google.javascript.rhino.head.Node) scriptNode74, 2);
        int int82 = positionComparator7.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot47, (com.google.javascript.rhino.head.ast.AstNode) scope73);
        java.lang.String str83 = astRoot47.debugPrint();
        astRoot3.target = astRoot47;
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) astRoot47);
        org.junit.Assert.assertNotNull(astRoot3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AstRoot" + "'", str4, "AstRoot");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astNodeComparator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "136" + "'", str26, "136");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(symbolArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(commentArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(functionNodeList60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-3) + "'", int82 == (-3));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str83, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean7 = compilerEnvirons0.isGeneratingSource();
        java.util.Set<java.lang.String> strSet8 = null;
        compilerEnvirons0.setActivationNames(strSet8);
        compilerEnvirons0.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons12.getErrorReporter();
        boolean boolean16 = compilerEnvirons12.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons12.getErrorReporter();
        compilerEnvirons12.setRecordingLocalJsDocComments(true);
        boolean boolean20 = compilerEnvirons12.isRecordingComments();
        com.google.javascript.rhino.head.Parser parser21 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons22.getErrorReporter();
        compilerEnvirons22.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        compilerEnvirons28.setRecordingComments(true);
        boolean boolean35 = compilerEnvirons28.isGenerateObserverCount();
        boolean boolean36 = compilerEnvirons28.isGenerateDebugInfo();
        compilerEnvirons28.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons39.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory43 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons28, errorReporter42);
        boolean boolean44 = compilerEnvirons28.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons46 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons46.setRecordingLocalJsDocComments(false);
        boolean boolean49 = compilerEnvirons46.isGeneratingSource();
        compilerEnvirons46.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons52 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons52.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = compilerEnvirons52.getErrorReporter();
        boolean boolean56 = compilerEnvirons52.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter57 = compilerEnvirons52.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException63 = errorReporter57.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter57.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser70 = new com.google.javascript.rhino.head.Parser(compilerEnvirons46, errorReporter57);
        compilerEnvirons28.setErrorReporter(errorReporter57);
        java.util.Set<java.lang.String> strSet72 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons73 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons73.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter76 = compilerEnvirons73.getErrorReporter();
        boolean boolean77 = compilerEnvirons73.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter78 = compilerEnvirons73.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException84 = errorReporter78.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        com.google.javascript.rhino.head.Parser parser85 = new com.google.javascript.rhino.head.Parser(compilerEnvirons28, errorReporter78);
        com.google.javascript.rhino.head.Parser parser86 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter78);
        errorReporter78.warning("java.io.IOException: hi!", "14", (int) (short) 100, "        {\n        }\n", (-1285574509));
        com.google.javascript.rhino.head.IRFactory iRFactory93 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons12, errorReporter78);
        com.google.javascript.rhino.head.IRFactory iRFactory94 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter78);
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(errorReporter45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(errorReporter55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(errorReporter57);
        org.junit.Assert.assertNotNull(evaluatorException63);
        org.junit.Assert.assertNull(strSet72);
        org.junit.Assert.assertNotNull(errorReporter76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(errorReporter78);
        org.junit.Assert.assertNotNull(evaluatorException84);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getEndLineno();
        java.lang.Object obj7 = astRoot5.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray8 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet9, commentArray8);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet9);
        astRoot5.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode13.getFunctions();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        java.lang.String str24 = astRoot18.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment25 = null;
        astRoot18.setJsDocNode(comment25);
        astRoot18.setEncodedSourceStart(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        boolean boolean31 = astRoot30.hasSideEffects();
        int int32 = astRoot30.getParamCount();
        astRoot18.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode34.toSource(0);
        scriptNode34.setEncodedSourceBounds(12, 10);
        scriptNode34.setSourceName("");
        astRoot18.setTop(scriptNode34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int44 = astRoot43.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray45 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList46, symbolArray45);
        astRoot43.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        boolean boolean49 = astRoot43.hasConsistentReturnUsage();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = astRoot43.getSymbolTable();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot43);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons52 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons52.setWarnTrailingComma(true);
        boolean boolean55 = compilerEnvirons52.isRecordingLocalJsDocComments();
        compilerEnvirons52.setWarnTrailingComma(false);
        compilerEnvirons52.setAllowSharpComments(false);
        boolean boolean60 = compilerEnvirons52.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons61 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons61.setWarnTrailingComma(true);
        boolean boolean64 = compilerEnvirons61.isRecordingLocalJsDocComments();
        compilerEnvirons61.setWarnTrailingComma(false);
        compilerEnvirons61.setAllowSharpComments(false);
        boolean boolean69 = compilerEnvirons61.isGenerateDebugInfo();
        compilerEnvirons61.setIdeMode(false);
        compilerEnvirons61.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons74 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons74.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter77 = compilerEnvirons74.getErrorReporter();
        boolean boolean78 = compilerEnvirons74.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter79 = compilerEnvirons74.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser80 = new com.google.javascript.rhino.head.Parser(compilerEnvirons61, errorReporter79);
        com.google.javascript.rhino.head.Parser parser81 = new com.google.javascript.rhino.head.Parser(compilerEnvirons52, errorReporter79);
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = parser81.parse("                ", "-1", 100);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(88171227, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) astRoot85);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope87 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot85);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(commentArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{\n}\n" + "'", str36, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(symbolArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(errorReporter77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(errorReporter79);
        org.junit.Assert.assertNotNull(astRoot85);
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        java.lang.String str24 = astRoot18.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment25 = null;
        astRoot18.setJsDocNode(comment25);
        int int27 = astRoot18.getType();
        java.lang.String str28 = astRoot18.getEncodedSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = null;
        astRoot18.setSymbolTable(strMap29);
        int int31 = astRoot18.getEncodedSourceEnd();
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException();
        java.io.IOException iOException38 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException37);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException37);
        iOException34.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException44 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray45 = iOException44.getSuppressed();
        java.io.IOException iOException46 = new java.io.IOException("hi!", (java.lang.Throwable) iOException44);
        java.lang.Throwable[] throwableArray47 = iOException46.getSuppressed();
        iOException41.addSuppressed((java.lang.Throwable) iOException46);
        java.io.IOException iOException50 = new java.io.IOException("-1\t  BLOCK 0 1\n");
        iOException41.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException54 = new java.io.IOException();
        java.io.IOException iOException55 = new java.io.IOException("", (java.lang.Throwable) iOException54);
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException55);
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException56);
        iOException41.addSuppressed((java.lang.Throwable) iOException56);
        java.io.IOException iOException62 = new java.io.IOException();
        java.io.IOException iOException63 = new java.io.IOException("", (java.lang.Throwable) iOException62);
        java.io.IOException iOException64 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException63);
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) iOException64);
        java.io.IOException iOException66 = new java.io.IOException("", (java.lang.Throwable) iOException65);
        java.lang.Throwable[] throwableArray67 = iOException66.getSuppressed();
        java.io.IOException iOException69 = new java.io.IOException();
        java.io.IOException iOException70 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException69);
        java.lang.Throwable[] throwableArray71 = iOException69.getSuppressed();
        iOException66.addSuppressed((java.lang.Throwable) iOException69);
        java.io.IOException iOException75 = new java.io.IOException();
        java.io.IOException iOException76 = new java.io.IOException("", (java.lang.Throwable) iOException75);
        java.io.IOException iOException77 = new java.io.IOException("8\tSCRIPT 8 1\n", (java.lang.Throwable) iOException76);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons78 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons78.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter81 = compilerEnvirons78.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException87 = errorReporter81.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException88 = new java.io.IOException((java.lang.Throwable) evaluatorException87);
        iOException76.addSuppressed((java.lang.Throwable) iOException88);
        iOException66.addSuppressed((java.lang.Throwable) iOException76);
        iOException56.addSuppressed((java.lang.Throwable) iOException76);
        java.lang.Throwable[] throwableArray92 = iOException56.getSuppressed();
        java.io.IOException iOException93 = new java.io.IOException("$2", (java.lang.Throwable) iOException56);
        java.lang.Throwable[] throwableArray94 = iOException56.getSuppressed();
        astRoot18.setCompilerData((java.lang.Object) throwableArray94);
        // The following exception was thrown during execution in test generation
        try {
            scope8.setContinue((com.google.javascript.rhino.head.Node) astRoot18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 136 + "'", int27 == 136);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(errorReporter81);
        org.junit.Assert.assertNotNull(evaluatorException87);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        node4.addChildToFront((com.google.javascript.rhino.head.Node) scope6);
        int int8 = scope6.getLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scope6, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        astRoot2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot2.new NodeIterator();
        int int16 = astRoot2.getPosition();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        java.lang.String str21 = astRoot19.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode22.getSymbols();
        java.lang.String str24 = astRoot19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        int int28 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode22, (com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope31.spliterator();
        astRoot29.addChildScope(scope31);
        java.lang.String str35 = astRoot29.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = astRoot29.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str39 = astRoot38.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot40.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) scriptNode42);
        int int46 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot29, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot38, 24);
        astRoot38.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot38.getAstRoot();
        int int51 = astRoot2.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        com.google.javascript.rhino.head.ast.Symbol symbol53 = astRoot50.getSymbol("AstRoot");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor54 = null;
        astRoot50.visitComments(nodeVisitor54);
        int int56 = astRoot50.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList57 = astRoot50.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node58 = astRoot50.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(astRoot50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1996668726) + "'", int51 == (-1996668726));
        org.junit.Assert.assertNull(symbol53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(functionNodeList57);
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(false);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons0.getErrorReporter();
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean13 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException20 = errorReporter14.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter14.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter14);
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setIdeMode(true);
        compilerEnvirons0.setRecordingComments(true);
        int int34 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.ErrorReporter errorReporter35 = compilerEnvirons0.getErrorReporter();
        boolean boolean36 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertNotNull(evaluatorException20);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(errorReporter35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope18.setTop(scriptNode20);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor22 = scope18.iterator();
        astRoot1.setParentScope(scope18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setRecordingLocalJsDocComments(false);
        compilerEnvirons24.setRecoverFromErrors(false);
        compilerEnvirons24.setGenerateDebugInfo(false);
        compilerEnvirons24.setRecordingComments(true);
        boolean boolean33 = compilerEnvirons24.isRecordingComments();
        astRoot1.setCompilerData((java.lang.Object) boolean33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator39 = scope38.spliterator();
        astRoot36.addChildScope(scope38);
        java.lang.String str42 = astRoot36.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        java.lang.String str45 = astRoot43.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode46.getSymbols();
        java.lang.String str48 = astRoot43.toStringTree(scriptNode46);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope49.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope50.setTop(scriptNode52);
        java.lang.String str55 = scope50.toSource(12);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope50);
        int int57 = astRoot36.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str59 = astRoot58.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator61 = scope60.spliterator();
        astRoot58.addChildScope(scope60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getNextTempName();
        java.lang.String str65 = scriptNode63.debugPrint();
        scriptNode63.setLineno((int) (byte) -1);
        scriptNode63.flattenSymbolTable(true);
        astRoot58.setTop(scriptNode63);
        astRoot58.clearParentScope();
        astRoot36.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot58);
        com.google.javascript.rhino.head.Node node73 = astRoot58.target;
        int int74 = astRoot58.getLineno();
        java.lang.String str75 = astRoot58.debugPrint();
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot58);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = astRoot1.getEnclosingFunction();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(nodeItor22);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "136" + "'", str45, "136");
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                        {\n                        }\n" + "'", str55, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str65, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str75, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode77);
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(1471166993);
        int int2 = astRoot1.getAbsolutePosition();
        java.lang.String str3 = astRoot1.toString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1471166993 + "'", int2 == 1471166993);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        java.lang.String str7 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode8.getSymbols();
        com.google.javascript.rhino.head.Node node10 = scriptNode8.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = astRoot11.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot11.getSymbols();
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.Node node69 = astRoot66.getLastSibling();
        boolean boolean70 = astRoot66.hasSideEffects();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot66);
        scriptNode8.addChildrenToFront(node71);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-443001414), (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode8, (-1610320791));
        astRoot1.setBounds((-131519396), 444385247);
        astRoot1.setEncodedSource("java.io.IOException: java.io.IOException:   {\n  }\n");
        java.lang.String str80 = astRoot1.getEncodedSource();
        boolean boolean81 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor82 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "136" + "'", str7, "136");
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "java.io.IOException: java.io.IOException:   {\n  }\n" + "'", str80, "java.io.IOException: java.io.IOException:   {\n  }\n");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean27 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        boolean boolean31 = compilerEnvirons28.recoverFromErrors();
        compilerEnvirons28.setRecordingComments(true);
        compilerEnvirons28.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons36.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons36.getErrorReporter();
        boolean boolean40 = compilerEnvirons36.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter41 = compilerEnvirons36.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException47 = errorReporter41.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        com.google.javascript.rhino.head.Parser parser48 = new com.google.javascript.rhino.head.Parser(compilerEnvirons28, errorReporter41);
        compilerEnvirons0.setErrorReporter(errorReporter41);
        java.util.Set<java.lang.String> strSet50 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorReporter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(errorReporter41);
        org.junit.Assert.assertNotNull(evaluatorException47);
        org.junit.Assert.assertNull(strSet50);
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.lang.Object obj6 = astRoot1.getProp(23);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor7 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        int int9 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion(0);
        boolean boolean12 = compilerEnvirons0.isRecordingComments();
        boolean boolean13 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        compilerEnvirons10.setWarnTrailingComma(false);
        compilerEnvirons10.setAllowSharpComments(false);
        compilerEnvirons10.setStrictMode(true);
        boolean boolean20 = compilerEnvirons10.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setWarnTrailingComma(true);
        boolean boolean24 = compilerEnvirons21.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet25 = compilerEnvirons21.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setWarnTrailingComma(true);
        boolean boolean29 = compilerEnvirons26.isRecordingLocalJsDocComments();
        compilerEnvirons26.setWarnTrailingComma(false);
        compilerEnvirons26.setAllowSharpComments(false);
        boolean boolean34 = compilerEnvirons26.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        java.lang.String[] strArray47 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        compilerEnvirons35.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        compilerEnvirons26.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        compilerEnvirons21.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet48);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons54 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons54.setRecordingLocalJsDocComments(false);
        boolean boolean57 = compilerEnvirons54.isGeneratingSource();
        compilerEnvirons54.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons60 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons60.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter63 = compilerEnvirons60.getErrorReporter();
        boolean boolean64 = compilerEnvirons60.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter65 = compilerEnvirons60.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException71 = errorReporter65.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter65.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser78 = new com.google.javascript.rhino.head.Parser(compilerEnvirons54, errorReporter65);
        com.google.javascript.rhino.head.Parser parser79 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10, errorReporter65);
        compilerEnvirons0.setErrorReporter(errorReporter65);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setGenerateDebugInfo(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(errorReporter63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(errorReporter65);
        org.junit.Assert.assertNotNull(evaluatorException71);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int12 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.Parser parser13 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean14 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        int int12 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node13 = scriptNode3.target;
        scriptNode3.clearParentScope();
        java.lang.String str15 = scriptNode3.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode3.getFunctions();
        java.lang.String str17 = scriptNode3.toSource();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        java.lang.String str2 = astRoot0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode3.getSymbols();
        java.lang.String str5 = astRoot0.toStringTree(scriptNode3);
        astRoot0.checkParentLinks();
        int int9 = astRoot0.getIntProp(11, 32);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = astRoot17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode19);
        int int23 = astRoot15.getParamCount();
        java.lang.String str24 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot0.addChildAfter(node12, (com.google.javascript.rhino.head.Node) astRoot15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = astRoot0.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump28 = astRoot0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode27);
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        int int10 = astRoot8.getEncodedSourceEnd();
        astRoot8.setPosition(558597394);
        int int13 = astRoot8.getParamCount();
        java.lang.String str15 = astRoot8.toSource(956776324);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isGenerateDebugInfo();
        astRoot0.setCompilerData((java.lang.Object) boolean15);
        java.lang.String str17 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot0.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.lang.String str25 = astRoot19.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getEndLineno();
        java.lang.Object obj28 = astRoot26.getCompilerData();
        astRoot19.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot26);
        astRoot26.setPosition(25);
        astRoot26.setEncodedSourceStart(10);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scope34.addChild((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope35.setTop(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        scriptNode37.setCompilerData((java.lang.Object) scope40);
        scriptNode37.setEncodedSourceEnd(0);
        int int45 = scriptNode37.getType();
        astRoot26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        astRoot26.removeProp((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList49 = astRoot26.getStatements();
        java.lang.String str51 = astRoot26.toSource((-538615178));
        astRoot18.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot26);
        boolean boolean53 = astRoot26.isInStrictMode();
        // The following exception was thrown during execution in test generation
        try {
            int int54 = astRoot26.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 136 + "'", int45 == 136);
        org.junit.Assert.assertNotNull(astNodeList49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{\n}\n" + "'", str51, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons7.setWarnTrailingComma(true);
        boolean boolean10 = compilerEnvirons7.isRecordingLocalJsDocComments();
        compilerEnvirons7.setWarnTrailingComma(false);
        compilerEnvirons7.setAllowSharpComments(false);
        boolean boolean15 = compilerEnvirons7.isGenerateDebugInfo();
        astRoot0.setCompilerData((java.lang.Object) boolean15);
        com.google.javascript.rhino.head.Node node17 = astRoot0.target;
        com.google.javascript.rhino.head.Node node18 = astRoot0.target;
        int int19 = astRoot0.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        scriptNode1.removeProp(12);
        scriptNode1.setEncodedSourceBounds(953557037, (-1));
        scriptNode1.setRelative((int) ' ');
        java.lang.String str23 = scriptNode1.shortName();
        int int24 = scriptNode1.getEncodedSourceStart();
        java.lang.String str25 = scriptNode1.getNextTempName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode29.toSource(0);
        scriptNode29.removeProp((int) (short) 1);
        int int34 = scriptNode29.getEncodedSourceStart();
        scriptNode29.putIntProp(526823265, (-11));
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode28, (com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        java.lang.String str39 = scriptNode1.toStringTree(scriptNode29);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ScriptNode" + "'", str23, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 953557037 + "'", int24 == 953557037);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n}\n" + "'", str31, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scope0.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getNextTempName();
        scope0.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode2);
        scriptNode2.setCompilerData((java.lang.Object) 35);
        int int7 = scriptNode2.getRegexpCount();
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = iRFactory10.transformTree(astRoot12);
        java.lang.String str19 = astRoot12.toSource(1034001328);
        boolean boolean20 = astRoot12.isInStrictMode();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean9 = compilerEnvirons0.isRecordingComments();
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray3 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet4, commentArray3);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet4);
        astRoot0.checkParentLinks();
        astRoot0.setEndLineno((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(0);
        scriptNode15.setEncodedSourceBounds(12, 10);
        scriptNode13.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        java.lang.String str22 = scriptNode13.getSourceName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = astRoot23.getAstRoot();
        java.lang.String str25 = astRoot24.shortName();
        java.lang.String str27 = astRoot24.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = astRoot24.getFunctions();
        astRoot24.checkParentLinks();
        boolean boolean30 = astRoot24.hasConsistentReturnUsage();
        int int31 = astRoot24.getRegexpCount();
        scriptNode13.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot24);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        scriptNode13.removeChildren();
        com.google.javascript.rhino.head.ast.Symbol symbol35 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.putSymbol(symbol35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(commentArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AstRoot" + "'", str25, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getEndLineno();
        java.lang.Object obj7 = astRoot5.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray8 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet9, commentArray8);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet9);
        astRoot5.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode13.getFunctions();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) astRoot5, (com.google.javascript.rhino.head.Node) scriptNode13);
        int int18 = astRoot3.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope20.setTop(scriptNode22);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor24 = scope20.iterator();
        astRoot3.setParentScope(scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = astRoot3.getAstRoot();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) astRoot3, 526823265);
        int int29 = astRoot3.getLineno();
        com.google.javascript.rhino.head.Node node30 = astRoot3.getFirstChild();
        com.google.javascript.rhino.head.Node node31 = astRoot3.getLastChild();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((-892379193), (com.google.javascript.rhino.head.Node) astRoot3);
        astRoot3.setEncodedSourceEnd((-263596818));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(commentArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertNotNull(astRoot26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node31);
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        int int2 = scriptNode0.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = null;
        scriptNode0.setSymbolTable(strMap3);
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode0.getEnclosingScope();
        scriptNode0.setSourceName("java.io.IOException: ");
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int14 = astRoot4.getLength();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str16 = astRoot15.getNextTempName();
        java.lang.String str17 = astRoot15.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode18.getSymbols();
        java.lang.String str20 = astRoot15.toStringTree(scriptNode18);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.Node node22 = astRoot15.getNext();
        java.lang.Object obj23 = astRoot15.getCompilerData();
        astRoot15.setEncodedSourceBounds(0, 548641306);
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = parser27.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getEndLineno();
        java.lang.Object obj36 = astRoot34.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray37 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet38 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet38, commentArray37);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str44 = astRoot43.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        astRoot43.addChildScope(scope45);
        java.lang.String str49 = astRoot43.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str51 = astRoot50.getNextTempName();
        java.lang.String str52 = astRoot50.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode53.getSymbols();
        java.lang.String str55 = astRoot50.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scope56.addChild((com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope57.setTop(scriptNode59);
        java.lang.String str62 = scope57.toSource(12);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scope57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str66 = astRoot65.getNextTempName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot65, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet69 = astRoot65.getComments();
        node63.addChildToBack((com.google.javascript.rhino.head.Node) astRoot65);
        com.google.javascript.rhino.head.Node node71 = astRoot65.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator72 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator73 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator74 = positionComparator72.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator73);
        com.google.javascript.rhino.head.Node node75 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node76 = node75.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        node75.addChildToFront((com.google.javascript.rhino.head.Node) scope77);
        int int79 = scope77.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol81 = scope77.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int84 = positionComparator73.compare((com.google.javascript.rhino.head.ast.AstNode) scope77, (com.google.javascript.rhino.head.ast.AstNode) astRoot83);
        node71.addChildToFront((com.google.javascript.rhino.head.Node) astRoot83);
        com.google.javascript.rhino.head.ast.AstRoot astRoot86 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int87 = astRoot86.getEndLineno();
        java.lang.Object obj88 = astRoot86.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray89 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet90 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet90, commentArray89);
        astRoot86.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot83.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet90);
        astRoot4.target = astRoot15;
        com.google.javascript.rhino.head.ast.AstRoot astRoot98 = astRoot4.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump99 = astRoot4.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(astRoot31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(commentArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "136" + "'", str52, "136");
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                        {\n                        }\n" + "'", str62, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(commentSet69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(astNodeComparator74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(symbol81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-12) + "'", int84 == (-12));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(commentArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(astRoot98);
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        boolean boolean14 = astRoot10.hasSideEffects();
        java.lang.String str16 = astRoot10.toSource(100);
        int int17 = astRoot10.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.lang.String str25 = astRoot19.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode29.getSymbols();
        java.lang.String str31 = astRoot26.toStringTree(scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.setTop(scriptNode35);
        java.lang.String str38 = scope33.toSource(12);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = astRoot19.getSymbols();
        java.lang.String str41 = astRoot19.debugPrint();
        astRoot10.addChildToFront((com.google.javascript.rhino.head.Node) astRoot19);
        astRoot10.removeChildren();
        astRoot10.setLength(0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "136" + "'", str28, "136");
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                        {\n                        }\n" + "'", str38, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 10);
        com.google.javascript.rhino.head.Node node2 = scriptNode1.getNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray3 = scriptNode1.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1236319614);
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        scriptNode1.setSourceName("java.io.IOException: java.io.IOException");
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(23);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("");
        scriptNode1.target = scope10;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getNextTempName();
        java.lang.String str17 = scriptNode15.debugPrint();
        scriptNode15.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        astRoot28.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        int int38 = astRoot28.getRegexpCount();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot28, 550287075);
        int int41 = astRoot28.depth();
        com.google.javascript.rhino.head.Node node44 = com.google.javascript.rhino.head.Node.newString(10, "136");
        node44.putIntProp((int) (byte) -1, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getNextTempName();
        java.lang.String str50 = scriptNode48.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node54 = scope53.getNext();
        com.google.javascript.rhino.head.Node node55 = scriptNode48.getChildBefore(node54);
        java.lang.String str56 = scriptNode48.getEncodedSource();
        scriptNode48.flattenSymbolTable(true);
        java.lang.String str59 = node44.toStringTree(scriptNode48);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode48, 627479866);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode62.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode62.setEncodedSourceBounds((int) (short) 100, 10);
        java.lang.String str68 = scriptNode62.getJsDoc();
        java.lang.String str70 = scriptNode62.toSource(2);
        int int71 = scriptNode48.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump72 = scriptNode48.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "    {\n    }\n" + "'", str70, "    {\n    }\n");
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-384491211) + "'", int71 == (-384491211));
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot6.getAstRoot();
        java.lang.String str8 = astRoot7.shortName();
        java.lang.String str9 = astRoot7.getSourceName();
        java.lang.String str10 = astRoot7.toSource();
        java.lang.String str11 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot7);
        scriptNode0.setBounds((-665324045), (-396559699));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AstRoot" + "'", str8, "AstRoot");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 100);
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode1, node6, (com.google.javascript.rhino.head.Node) astRoot8);
        int int10 = astRoot8.getEncodedSourceEnd();
        int int11 = astRoot8.getFunctionCount();
        astRoot8.setEncodedSourceStart((int) (short) -1);
        java.lang.String str15 = astRoot8.toSource(23890841);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor16 = null;
        astRoot8.visitComments(nodeVisitor16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.Node node20 = astRoot18.setType((-396559699));
        java.lang.Object obj22 = astRoot18.getProp(3);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(astRoot18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.Context context30 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        boolean boolean4 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope6.setTop(scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        scriptNode8.setCompilerData((java.lang.Object) scope11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = scope15.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node19 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node20 = node19.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        node19.addChildToFront((com.google.javascript.rhino.head.Node) scope21);
        scope15.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode18, node19);
        scriptNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope1, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scope28.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node33 = node32.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        node32.addChildToFront((com.google.javascript.rhino.head.Node) scope34);
        scope28.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, node32);
        int int37 = scriptNode31.getEncodedSourceEnd();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        int int39 = scriptNode8.getLineno();
        scriptNode8.setEncodedSource("!");
        boolean boolean42 = scriptNode8.hasConsistentReturnUsage();
        scriptNode8.setEncodedSourceEnd(11);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = astRoot1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope7.setTop(scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scope11.addChild((com.google.javascript.rhino.head.ast.AstNode) scope12);
        scriptNode9.setCompilerData((java.lang.Object) scope12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = astRoot15.getAstRoot();
        java.lang.String str17 = astRoot16.shortName();
        java.lang.String str18 = astRoot16.debugPrint();
        scope12.addChildToFront((com.google.javascript.rhino.head.Node) astRoot16);
        astRoot1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int22 = astRoot21.getEndLineno();
        boolean boolean23 = astRoot21.hasChildren();
        astRoot1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot28.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int34 = astRoot21.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope36.setTop(scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        scriptNode38.setCompilerData((java.lang.Object) scope41);
        scriptNode38.setEncodedSourceEnd(0);
        int int46 = scriptNode38.getType();
        int int47 = scriptNode38.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node48 = scriptNode38.target;
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getEndLineno();
        java.lang.Object obj53 = astRoot51.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray54 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet55 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet55, commentArray54);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet55);
        astRoot49.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet55);
        astRoot49.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet61 = astRoot49.getComments();
        scriptNode38.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode38.getTop();
        astRoot21.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(astRoot16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AstRoot" + "'", str17, "AstRoot");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(astNode29);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1078815113 + "'", int34 == 1078815113);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 136 + "'", int46 == 136);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(commentArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(commentSet61);
        org.junit.Assert.assertNotNull(scriptNode63);
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot4.getRegexpCount();
        com.google.javascript.rhino.head.Node node18 = astRoot4.getNext();
        astRoot4.setBaseLineno(10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = astRoot4.getComments();
        astRoot4.setLength((-12));
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot4.getParent();
        astRoot4.setBounds(775058292, 653625563);
        astRoot4.setEncodedSourceBounds((-1610320791), 1159083728);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = astRoot32.getAstRoot();
        java.lang.String str34 = astRoot33.shortName();
        com.google.javascript.rhino.head.Node node35 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node36 = node35.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        node35.addChildToFront((com.google.javascript.rhino.head.Node) scope37);
        int int39 = scope37.getLineno();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scope37, (int) ' ');
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getEndLineno();
        java.lang.Object obj44 = astRoot42.getCompilerData();
        scope37.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot42);
        int int46 = scope37.getLineno();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scope37);
        astRoot4.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.AstNode astNode50 = astRoot4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = astNode50.toSource();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(commentSet21);
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertNotNull(astRoot33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AstRoot" + "'", str34, "AstRoot");
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(astNode50);
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        boolean boolean9 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        int int11 = compilerEnvirons0.getLanguageVersion();
        boolean boolean12 = compilerEnvirons0.isGenerateObserverCount();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Parser parser3 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = parser3.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int9 = astRoot8.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getEndLineno();
        java.lang.Object obj12 = astRoot10.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray13 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet14, commentArray13);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str20 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope21.spliterator();
        astRoot19.addChildScope(scope21);
        java.lang.String str25 = astRoot19.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        java.lang.String str28 = astRoot26.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode29.getSymbols();
        java.lang.String str31 = astRoot26.toStringTree(scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scope32.addChild((com.google.javascript.rhino.head.ast.AstNode) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope33.setTop(scriptNode35);
        java.lang.String str38 = scope33.toSource(12);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot41, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = astRoot41.getComments();
        node39.addChildToBack((com.google.javascript.rhino.head.Node) astRoot41);
        com.google.javascript.rhino.head.Node node47 = astRoot41.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator48 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator49 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator50 = positionComparator48.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator49);
        com.google.javascript.rhino.head.Node node51 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node52 = node51.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        node51.addChildToFront((com.google.javascript.rhino.head.Node) scope53);
        int int55 = scope53.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = scope53.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int60 = positionComparator49.compare((com.google.javascript.rhino.head.ast.AstNode) scope53, (com.google.javascript.rhino.head.ast.AstNode) astRoot59);
        node47.addChildToFront((com.google.javascript.rhino.head.Node) astRoot59);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getEndLineno();
        java.lang.Object obj64 = astRoot62.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray65 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet66, commentArray65);
        astRoot62.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot59.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        com.google.javascript.rhino.head.ast.Comment comment73 = null;
        astRoot1.setJsDocNode(comment73);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(commentArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "136" + "'", str28, "136");
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                        {\n                        }\n" + "'", str38, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(commentSet45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(astNodeComparator50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(symbol57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-12) + "'", int60 == (-12));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(commentArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setRecoverFromErrors(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.Node node10 = scope8.getFirstChild();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope8);
        astRoot4.target = node11;
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot4);
        int int14 = astRoot4.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList15 = astRoot4.getStatements();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(astNodeList15);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int16 = astRoot8.getParamCount();
        java.lang.String str17 = astRoot8.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray21 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList22, symbolArray21);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList22);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        astRoot19.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getNextTempName();
        com.google.javascript.rhino.head.Node node42 = scriptNode40.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int45 = astRoot30.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot19, (com.google.javascript.rhino.head.Node) astRoot30);
        astRoot30.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int52 = astRoot51.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int54 = astRoot53.getEndLineno();
        java.lang.Object obj55 = astRoot53.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        astRoot53.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        com.google.javascript.rhino.head.Node node63 = scriptNode61.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode61.getFunctions();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode61);
        astRoot30.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getNextTempName();
        java.lang.String str70 = scriptNode68.debugPrint();
        scriptNode68.setLineno((int) (byte) -1);
        scriptNode68.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode68.getTop();
        java.lang.String str77 = scriptNode68.toSource((-3));
        java.lang.String str78 = node67.toStringTree(scriptNode68);
        scriptNode68.setEncodedSourceEnd((-431917759));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(symbolArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "$0" + "'", str69, "$0");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str70, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{\n}\n" + "'", str77, "{\n}\n");
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        astRoot7.setPosition(25);
        java.lang.String str14 = astRoot7.toSource(17);
        astRoot7.clearParentScope();
        int int16 = astRoot7.getAbsolutePosition();
        int int17 = astRoot7.getLineno();
        boolean boolean18 = astRoot7.hasConsistentReturnUsage();
        boolean boolean19 = astRoot7.hasConsistentReturnUsage();
        int int22 = astRoot7.getIntProp(904952695, 1171068332);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 25 + "'", int16 == 25);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1171068332 + "'", int22 == 1171068332);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        boolean boolean12 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.Parser parser13 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray5 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList6, symbolArray5);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList6);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        astRoot3.addChildScope(scope10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = astRoot3.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = astRoot3.getSymbols();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot3);
        int int16 = scriptNode0.getAbsolutePosition();
        java.lang.String str17 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope19.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode23.toSource(0);
        scriptNode23.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator29 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        java.lang.String str32 = astRoot30.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        java.lang.String str35 = astRoot30.toStringTree(scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        int int39 = positionComparator29.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode33, (com.google.javascript.rhino.head.ast.AstNode) scope36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator43 = scope42.spliterator();
        astRoot40.addChildScope(scope42);
        java.lang.String str46 = astRoot40.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList47 = astRoot40.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str50 = astRoot49.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode52 = astRoot51.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot49, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) scriptNode53);
        int int57 = positionComparator29.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot40, (com.google.javascript.rhino.head.ast.AstNode) astRoot49);
        com.google.javascript.rhino.head.ast.Comment[] commentArray58 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet59 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet59, commentArray58);
        astRoot49.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet59);
        scope19.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) astRoot49);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope64.setTop(scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scope68.addChild((com.google.javascript.rhino.head.ast.AstNode) scope69);
        scriptNode66.setCompilerData((java.lang.Object) scope69);
        scriptNode66.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getNextTempName();
        com.google.javascript.rhino.head.Node node76 = scriptNode74.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode74.getFunctions();
        int int78 = scriptNode74.getEncodedSourceEnd();
        scriptNode66.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode74);
        scriptNode66.setBaseLineno(6);
        scriptNode23.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode66);
        java.lang.String str84 = scriptNode66.toSource((-475744774));
        scriptNode0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        java.lang.String str86 = scriptNode66.getSourceName();
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(symbolArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(functionNodeList47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNull(astNode52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(commentArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{\n{\n}\n}\n" + "'", str84, "{\n{\n}\n}\n");
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str17 = astRoot16.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = astRoot18.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) astRoot18, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int24 = astRoot16.getParamCount();
        java.lang.String str25 = astRoot16.debugPrint();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = astRoot28.getAstRoot();
        java.lang.String str30 = astRoot29.shortName();
        java.lang.String str32 = astRoot29.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = astRoot29.getFunctions();
        astRoot29.checkParentLinks();
        boolean boolean35 = astRoot29.hasChildren();
        int int36 = astRoot29.getLineno();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot29, 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = astRoot43.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int49 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scope50.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot41, scope50);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope50);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scope54.addChild((com.google.javascript.rhino.head.ast.AstNode) scope55);
        boolean boolean57 = scope54.hasSideEffects();
        int int58 = scope50.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope54);
        boolean boolean59 = scope54.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode64 = astRoot63.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot61, (com.google.javascript.rhino.head.Node) astRoot63, (com.google.javascript.rhino.head.Node) scriptNode65);
        int int69 = astRoot61.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        scope70.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot61, scope70);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap73 = astRoot61.getSymbolTable();
        scope54.setSymbolTable(strMap73);
        astRoot29.setSymbolTable(strMap73);
        astRoot16.setSymbolTable(strMap73);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet77 = astRoot16.getComments();
        astRoot10.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot16);
        com.google.javascript.rhino.head.Node node79 = astRoot16.getFirstChild();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AstRoot" + "'", str30, "AstRoot");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-185420069) + "'", int58 == (-185420069));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNull(astNode64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(commentSet77);
        org.junit.Assert.assertNull(node79);
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = astRoot1.getChildScopes();
        java.lang.String str7 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode8.getSymbols();
        com.google.javascript.rhino.head.Node node10 = scriptNode8.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = astRoot11.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot11.getSymbols();
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.Node node69 = astRoot66.getLastSibling();
        boolean boolean70 = astRoot66.hasSideEffects();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) astRoot66);
        scriptNode8.addChildrenToFront(node71);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-443001414), (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode8, (-1610320791));
        java.lang.String str76 = scriptNode8.makeIndent((-852661786));
        boolean boolean77 = scriptNode8.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(scopeList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "136" + "'", str7, "136");
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        java.util.Set<java.lang.String> strSet9 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.IRFactory iRFactory10 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        java.util.Set<java.lang.String> strSet11 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean14 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean6 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setIdeMode(true);
        boolean boolean11 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setIdeMode(true);
        java.util.Set<java.lang.String> strSet14 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strSet14);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        com.google.javascript.rhino.head.ast.Comment comment33 = astRoot21.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = comment33.hasSideEffects();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(comment33);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        astRoot0.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = astRoot0.getSymbolTable();
        java.lang.Object obj4 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment comment5 = astRoot0.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = comment5.getPosition();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(comment5);
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        java.lang.String str3 = astRoot1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = scriptNode4.getSymbols();
        java.lang.String str6 = astRoot1.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        int int10 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode4, (com.google.javascript.rhino.head.ast.AstNode) scope7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = astRoot11.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str21 = astRoot20.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode23 = astRoot22.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot20, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scriptNode24);
        int int28 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor31 = null;
        astRoot30.visitComments(nodeVisitor31);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scope33.addChild((com.google.javascript.rhino.head.ast.AstNode) scope34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope34.setTop(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        scriptNode36.setCompilerData((java.lang.Object) scope39);
        scriptNode36.setEncodedSourceEnd(0);
        int int44 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot30, (com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList45 = scriptNode36.getStatements();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "136" + "'", str3, "136");
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 11 + "'", int44 == 11);
        org.junit.Assert.assertNotNull(astNodeList45);
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator16 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        int int26 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode20, (com.google.javascript.rhino.head.ast.AstNode) scope23);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = astRoot29.getAstRoot();
        java.lang.String str31 = astRoot30.shortName();
        java.lang.String str33 = astRoot30.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = astRoot30.getFunctions();
        astRoot30.checkParentLinks();
        boolean boolean36 = astRoot30.hasChildren();
        int int37 = astRoot30.getLineno();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot30, 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot30, (com.google.javascript.rhino.head.ast.AstNode) astRoot40);
        java.lang.String str42 = astRoot40.toString();
        com.google.javascript.rhino.head.ast.Scope scope43 = astRoot40.getParentScope();
        java.lang.String str44 = astRoot40.toSource();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AstRoot" + "'", str31, "AstRoot");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "136" + "'", str42, "136");
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getEndLineno();
        java.lang.Object obj8 = astRoot6.getCompilerData();
        com.google.javascript.rhino.head.Node node9 = astRoot6.getFirstChild();
        boolean boolean10 = astRoot6.hasSideEffects();
        astRoot6.setEndLineno(278475323);
        int int13 = astRoot1.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1142053997) + "'", int13 == (-1142053997));
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        java.util.Set<java.lang.String> strSet4 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        compilerEnvirons5.setWarnTrailingComma(false);
        compilerEnvirons5.setAllowSharpComments(false);
        boolean boolean13 = compilerEnvirons5.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setIdeMode(true);
        boolean boolean38 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isIdeMode();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean10 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean6 = compilerEnvirons0.isXmlAvailable();
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setWarnTrailingComma(true);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        compilerEnvirons0.setIdeMode(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = astRoot0.getParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = astRoot0.getEnclosingFunction();
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(functionNode4);
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.isRecordingComments();
        boolean boolean59 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons62.setStrictMode(true);
        int int65 = compilerEnvirons62.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons66 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons66.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons69 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons69.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter72 = compilerEnvirons69.getErrorReporter();
        compilerEnvirons66.setErrorReporter(errorReporter72);
        compilerEnvirons62.setErrorReporter(errorReporter72);
        com.google.javascript.rhino.head.IRFactory iRFactory75 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter72);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean80 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(errorReporter72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot0.target = astRoot7;
        int int18 = astRoot7.getType();
        java.lang.String str19 = astRoot7.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope20 = astRoot7.getEnclosingScope();
        astRoot7.setEndLineno(550287075);
        astRoot7.setInStrictMode(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str19, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(scope20);
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: -1\t  BLOCK 0 1\n");
        // The following exception was thrown during execution in test generation
        try {
            int int2 = node1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        java.lang.String str7 = scriptNode5.debugPrint();
        scriptNode5.setLineno((int) (byte) -1);
        scriptNode5.flattenSymbolTable(true);
        astRoot0.setTop(scriptNode5);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment14 = null;
        astRoot0.setJsDocNode(comment14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str18 = astRoot17.debugPrint();
        astRoot17.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.Comment comment21 = null;
        astRoot17.setJsDocNode(comment21);
        java.lang.String str23 = astRoot17.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = astRoot17.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode30 = astRoot29.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int35 = astRoot27.getParamCount();
        java.lang.String str36 = astRoot27.debugPrint();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) astRoot27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = astRoot39.getAstRoot();
        java.lang.String str41 = astRoot40.shortName();
        java.lang.String str43 = astRoot40.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = astRoot40.getFunctions();
        astRoot40.checkParentLinks();
        boolean boolean46 = astRoot40.hasChildren();
        int int47 = astRoot40.getLineno();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot40, 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str53 = astRoot52.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode55 = astRoot54.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot52, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int60 = astRoot52.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        scope61.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot52, scope61);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope61);
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        scope65.addChild((com.google.javascript.rhino.head.ast.AstNode) scope66);
        boolean boolean68 = scope65.hasSideEffects();
        int int69 = scope61.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope65);
        boolean boolean70 = scope65.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str73 = astRoot72.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode75 = astRoot74.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode76.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot72, (com.google.javascript.rhino.head.Node) astRoot74, (com.google.javascript.rhino.head.Node) scriptNode76);
        int int80 = astRoot72.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        scope81.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot72, scope81);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap84 = astRoot72.getSymbolTable();
        scope65.setSymbolTable(strMap84);
        astRoot40.setSymbolTable(strMap84);
        astRoot27.setSymbolTable(strMap84);
        astRoot17.setSymbolTable(strMap84);
        astRoot0.setSymbolTable(strMap84);
        com.google.javascript.rhino.head.ast.Comment comment90 = null;
        astRoot0.setJsDocNode(comment90);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str7, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str18, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(functionNode24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(astNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AstRoot" + "'", str41, "AstRoot");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-466098989) + "'", int69 == (-466098989));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertNull(astNode75);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.Node node34 = astRoot31.getFirstChild();
        astRoot21.putProp(2, (java.lang.Object) astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        boolean boolean39 = scope36.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope36, scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getEndLineno();
        java.lang.Object obj49 = astRoot47.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray50 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet51, commentArray50);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet51);
        astRoot47.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode55);
        astRoot45.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = astRoot45.getComments();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) astRoot45);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList65 = astRoot45.getChildScopes();
        astRoot45.setEncodedSource("                                  {\n                                  }\n");
        java.lang.String str69 = astRoot45.toSource(4);
        astRoot45.removeProp((-605534234));
        com.google.javascript.rhino.head.Node node72 = astRoot45.target;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(commentArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertNull(commentSet63);
        org.junit.Assert.assertNull(scopeList65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(node72);
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(2, "                        {\n                        }\n");
        int int5 = node2.getIntProp(9, 15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getEndLineno();
        java.lang.Object obj11 = astRoot9.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray12 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet13, commentArray12);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet13);
        astRoot9.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getNextTempName();
        com.google.javascript.rhino.head.Node node19 = scriptNode17.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode17);
        int int22 = astRoot7.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = astRoot7.new NodeIterator();
        java.lang.String str25 = astRoot7.makeIndent(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getNextTempName();
        com.google.javascript.rhino.head.Node node28 = scriptNode26.target;
        int int29 = scriptNode26.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node30 = scriptNode26.getLastChild();
        int int31 = scriptNode26.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getEndLineno();
        java.lang.Object obj34 = astRoot32.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        astRoot32.removeProp((int) (short) 0);
        int int41 = astRoot32.getAbsolutePosition();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot32);
        node2.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.ast.Scope scope44 = null;
        astRoot7.setParentScope(scope44);
        int int46 = astRoot7.getBaseLineno();
        java.lang.String str47 = astRoot7.shortName();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 15 + "'", int5 == 15);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(commentArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                                                  " + "'", str25, "                                                  ");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AstRoot" + "'", str47, "AstRoot");
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot0.visitComments(nodeVisitor10);
        java.lang.String str13 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode21.toSource(0);
        scriptNode21.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) '#', node17, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode21, 2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode29.toSource(0);
        scriptNode29.clearParentScope();
        boolean boolean33 = scriptNode29.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str36 = astRoot35.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = scope37.spliterator();
        astRoot35.addChildScope(scope37);
        java.lang.String str41 = astRoot35.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        java.lang.String str44 = astRoot42.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        java.lang.String str47 = astRoot42.toStringTree(scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scope48.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope49.setTop(scriptNode51);
        java.lang.String str54 = scope49.toSource(12);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scope49);
        astRoot35.setBaseLineno(19);
        scriptNode29.addChildToBack((com.google.javascript.rhino.head.Node) astRoot35);
        node17.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode29);
        astRoot0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        scriptNode29.setRelative((-1276937147));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n}\n" + "'", str31, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                        {\n                        }\n" + "'", str54, "                        {\n                        }\n");
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scope5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        node2.putProp(0, (java.lang.Object) scriptNode7);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(471236572, node2);
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        java.lang.String str2 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node6 = scope5.getNext();
        com.google.javascript.rhino.head.Node node7 = scriptNode0.getChildBefore(node6);
        java.lang.String str8 = scriptNode0.getEncodedSource();
        scriptNode0.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setEndLineno((-431917759));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        java.lang.String str27 = astRoot14.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = astRoot14.getExistingIntProp(22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot12.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getEndLineno();
        java.lang.Object obj37 = astRoot35.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        astRoot35.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getNextTempName();
        com.google.javascript.rhino.head.Node node45 = scriptNode43.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode43.getFunctions();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode43);
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot35);
        astRoot12.setBaseLineno(1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getNextTempName();
        com.google.javascript.rhino.head.Node node53 = scriptNode51.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode51.getFunctions();
        int int55 = scriptNode51.getEncodedSourceEnd();
        scriptNode51.setBounds((int) (byte) 0, 3);
        astRoot12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        int int60 = scriptNode51.getEncodedSourceStart();
        int int61 = scriptNode51.getLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1246810839);
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        int int10 = scriptNode4.getEncodedSourceEnd();
        scriptNode4.setSourceName("java.io.IOException: !");
        java.lang.String str13 = scriptNode4.toSource();
        scriptNode4.setEncodedSourceBounds(441866554, 1330917185);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean10 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean11 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode1 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.Node node6 = scope4.getFirstChild();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope4);
        astRoot0.target = node7;
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot0.getAstRoot();
        astRoot9.checkParentLinks();
        java.lang.String str12 = astRoot9.toSource(35);
        com.google.javascript.rhino.head.Node node13 = astRoot9.getFirstChild();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = astRoot9.spliterator();
        org.junit.Assert.assertNull(astNode1);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        astRoot1.setInStrictMode(false);
        java.lang.String str5 = astRoot1.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        java.lang.String str11 = astRoot7.makeIndent(18);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) astRoot7, 526823265);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean19 = compilerEnvirons14.recoverFromErrors();
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons14.getActivationNames();
        compilerEnvirons14.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = parser23.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot27.setEncodedSourceEnd(4);
        astRoot27.setEncodedSource("$0");
        astRoot1.addChildAfter((com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot27);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList33 = astRoot7.getStatements();
        com.google.javascript.rhino.head.ast.Symbol symbol35 = astRoot7.getSymbol("com.google.javascript.rhino.head.EvaluatorException:   {\n  }\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node36 = astRoot7.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                    " + "'", str11, "                                    ");
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertNotNull(astNodeList33);
        org.junit.Assert.assertNull(symbol35);
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode(953557037);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode3.getFunctions();
        int int5 = scriptNode3.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = astRoot6.getChildScopes();
        astRoot6.checkParentLinks();
        scriptNode3.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot6);
        int int14 = astRoot6.getEndLineno();
        java.lang.String str16 = astRoot6.toSource(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(26);
        com.google.javascript.rhino.head.ast.Symbol symbol20 = scriptNode18.getSymbol("");
        int int21 = scriptNode18.getEncodedSourceEnd();
        astRoot6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(1635381144, node1, (com.google.javascript.rhino.head.Node) scriptNode18, 1099048785);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 953557037 + "'", int5 == 953557037);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(symbol20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getEndLineno();
        java.lang.Object obj15 = astRoot13.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol17 = astRoot13.getSymbol("java.io.IOException: ");
        astRoot13.setEncodedSourceStart(0);
        astRoot10.setCompilerData((java.lang.Object) astRoot13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        java.lang.String str26 = astRoot24.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode27.getSymbols();
        java.lang.String str29 = astRoot24.toStringTree(scriptNode27);
        astRoot24.checkParentLinks();
        int int33 = astRoot24.getIntProp(11, 32);
        int int34 = astRoot24.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode35.toSource(0);
        scriptNode35.clearParentScope();
        boolean boolean39 = scriptNode35.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = null;
        scriptNode35.setSymbolTable(strMap40);
        int int42 = scriptNode35.getRegexpCount();
        int int43 = scriptNode35.getRegexpCount();
        astRoot24.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(32, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot24, (-280309866));
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = astRoot24.getSymbols();
        astRoot13.setSymbols(symbolList47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = null;
        astRoot13.setSymbols(symbolList49);
        com.google.javascript.rhino.head.Node node52 = astRoot13.setType((-1293528350));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(symbol17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "136" + "'", str26, "136");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{\n}\n" + "'", str37, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNotNull(node52);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode1, 520361644);
        scriptNode1.setEndLineno(688626213);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        int int15 = scriptNode11.getIntProp((int) 'a', 19);
        scriptNode11.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        scriptNode11.setSymbols(symbolList18);
        scriptNode11.setPosition(0);
        int int22 = scriptNode1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot24.getAstRoot();
        java.lang.String str26 = astRoot25.shortName();
        java.lang.String str27 = astRoot25.debugPrint();
        com.google.javascript.rhino.head.Node node28 = astRoot25.getFirstChild();
        boolean boolean29 = astRoot25.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str31 = astRoot30.getNextTempName();
        java.lang.String str32 = astRoot30.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        java.lang.String str35 = astRoot30.toStringTree(scriptNode33);
        astRoot30.checkParentLinks();
        int int39 = astRoot30.getIntProp(11, 32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getEndLineno();
        java.lang.Object obj43 = astRoot41.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray44 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet45, commentArray44);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet45);
        com.google.javascript.rhino.head.Node node48 = astRoot41.getLastSibling();
        int int49 = node48.getType();
        astRoot30.putProp((int) ' ', (java.lang.Object) node48);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot30, 26);
        astRoot30.setInStrictMode(true);
        astRoot30.setBounds(1159083728, (int) ' ');
        int int58 = scriptNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot30);
        com.google.javascript.rhino.head.Parser parser59 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot63 = parser59.parse("", "-1\tSCRIPT -1 1\n", 19);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = astRoot63.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int66 = astRoot65.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getEndLineno();
        java.lang.Object obj69 = astRoot67.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray70 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet71 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet71, commentArray70);
        astRoot67.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot63.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet71);
        com.google.javascript.rhino.head.Parser parser77 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = parser77.parse("", "-1\tSCRIPT -1 1\n", 19);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet82 = astRoot81.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int84 = astRoot83.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int86 = astRoot85.getEndLineno();
        java.lang.Object obj87 = astRoot85.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray88 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet89 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet89, commentArray88);
        astRoot85.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet89);
        astRoot83.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet89);
        astRoot81.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet89);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet89);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList95 = astRoot30.getFunctions();
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 19 + "'", int15 == 19);
        org.junit.Assert.assertNotNull(symbolList18);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 891951792 + "'", int22 == 891951792);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AstRoot" + "'", str26, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(commentArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 136 + "'", int49 == 136);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(astRoot63);
        org.junit.Assert.assertNull(commentSet64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(commentArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(astRoot81);
        org.junit.Assert.assertNull(commentSet82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(commentArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionNodeList95);
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setRelative((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = astRoot12.getChildScopes();
        java.lang.String str18 = astRoot12.toString();
        com.google.javascript.rhino.head.Node node19 = astRoot12.target;
        int int20 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot12);
        com.google.javascript.rhino.head.Node node21 = null;
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray24 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList25, symbolArray24);
        astRoot22.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList25);
        astRoot22.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot22.target = astRoot29;
        int int40 = astRoot29.getType();
        java.lang.String str41 = astRoot29.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            astRoot12.replaceChild(node21, (com.google.javascript.rhino.head.Node) astRoot29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scopeList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "136" + "'", str18, "136");
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(symbolArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 136 + "'", int40 == 136);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean9 = astRoot1.isInStrictMode();
        astRoot1.setRelative((int) '4');
        astRoot1.setBounds(0, 3);
        com.google.javascript.rhino.head.Node node15 = astRoot1.getLastChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.setCompilerData((java.lang.Object) (byte) 100);
        scriptNode16.setEncodedSourceBounds((int) (short) 100, 10);
        java.lang.String str22 = scriptNode16.getJsDoc();
        java.lang.String str24 = scriptNode16.toSource(2);
        java.lang.String str25 = scriptNode16.debugPrint();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode33.toSource(0);
        scriptNode33.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) '#', node29, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode33, 2);
        com.google.javascript.rhino.head.Node node41 = scope32.getLastChild();
        java.lang.String str42 = scope32.shortName();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setFinally((com.google.javascript.rhino.head.Node) scriptNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "    {\n    }\n" + "'", str24, "    {\n    }\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{\n}\n" + "'", str35, "{\n}\n");
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Scope" + "'", str42, "Scope");
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray19 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList20, symbolArray19);
        astRoot17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        astRoot17.addChildScope(scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int31 = astRoot30.getEndLineno();
        java.lang.Object obj32 = astRoot30.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        astRoot30.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getNextTempName();
        com.google.javascript.rhino.head.Node node40 = scriptNode38.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode38.getFunctions();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) astRoot30, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int43 = astRoot28.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot28);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode52.toSource(0);
        scriptNode52.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) '#', node48, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode52, 2);
        com.google.javascript.rhino.head.Node node60 = scope51.getLastChild();
        com.google.javascript.rhino.head.Node node61 = astRoot17.getChildBefore(node60);
        java.lang.String str63 = astRoot17.toSource(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = iRFactory15.transformTree(astRoot17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = scriptNode64.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node66 = scriptNode64.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(symbolArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{\n}\n" + "'", str54, "{\n}\n");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertNotNull(scriptNode65);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-814774565));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -814774565");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment7 = null;
        astRoot0.setJsDocNode(comment7);
        int int9 = astRoot0.getType();
        java.lang.String str10 = astRoot0.getEncodedSource();
        astRoot0.setInStrictMode(false);
        astRoot0.checkParentLinks();
        int int14 = astRoot0.getEndLineno();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setOptimizationLevel(5);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setStrictMode(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        boolean boolean14 = compilerEnvirons10.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        java.lang.String[] strArray27 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet28);
        boolean boolean33 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean34 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode0.getFunctions();
        int int4 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getNextTempName();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList8 = scriptNode5.getFunctions();
        int int9 = scriptNode5.getEncodedSourceEnd();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        int int11 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        int int23 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode17, (com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope26.spliterator();
        astRoot24.addChildScope(scope26);
        java.lang.String str30 = astRoot24.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = astRoot24.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = astRoot35.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) astRoot35, (com.google.javascript.rhino.head.Node) scriptNode37);
        int int41 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot33, 24);
        astRoot33.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = astRoot33.getAstRoot();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = astRoot33.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor48 = null;
        astRoot47.visitComments(nodeVisitor48);
        int int50 = astRoot47.getEndLineno();
        java.lang.String str51 = astRoot47.debugPrint();
        java.lang.String str52 = astRoot47.debugPrint();
        int int53 = astRoot47.getEndLineno();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(functionNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(astRoot45);
        org.junit.Assert.assertNotNull(astRoot47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str51, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(8);
        java.lang.String str2 = astRoot1.debugPrint();
        int int5 = astRoot1.getIntProp((int) (short) 1, (-1));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor6 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8\tSCRIPT 8 1\n" + "'", str2, "8\tSCRIPT 8 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot((-543879055));
        astRoot7.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot12);
        com.google.javascript.rhino.head.ast.Symbol symbol15 = astRoot7.getSymbol("                        ");
        int int16 = astRoot7.getLength();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isIdeMode();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(764092790);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 764092790");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        astRoot0.setEncodedSourceStart(0);
        java.lang.String str8 = astRoot0.toSource(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = astRoot12.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray18 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList19, symbolArray18);
        scriptNode14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode14.getTop();
        int int23 = scriptNode22.getEncodedSourceEnd();
        astRoot0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode22);
        com.google.javascript.rhino.head.Node node25 = astRoot0.getLastChild();
        java.lang.String str26 = astRoot0.getSourceName();
        astRoot0.setEncodedSourceBounds((-1291599107), (-443001414));
        astRoot0.setSourceName("122705610");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertNotNull(symbolArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException("", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray13 = iOException11.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException("", (java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("8\tSCRIPT 8 1\n", (java.lang.Throwable) iOException18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons20.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException29 = errorReporter23.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) evaluatorException29);
        iOException18.addSuppressed((java.lang.Throwable) iOException30);
        iOException8.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException33 = new java.io.IOException("\210", (java.lang.Throwable) iOException8);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray35 = iOException34.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(errorReporter23);
        org.junit.Assert.assertNotNull(evaluatorException29);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        scope7.addChild((com.google.javascript.rhino.head.ast.AstNode) scope8);
        astRoot1.addChildScope(scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getEndLineno();
        java.lang.Object obj16 = astRoot14.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray17 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet18, commentArray17);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode22.getFunctions();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) scriptNode22);
        int int27 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot12);
        astRoot1.setBounds(10, (int) (byte) -1);
        astRoot1.checkParentLinks();
        java.lang.String str34 = astRoot1.toSource((-134670566));
        java.lang.String str35 = astRoot1.shortName();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList36 = astRoot1.getStatements();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setWarnTrailingComma(true);
        boolean boolean41 = compilerEnvirons38.isRecordingLocalJsDocComments();
        compilerEnvirons38.setWarnTrailingComma(false);
        compilerEnvirons38.setAllowSharpComments(false);
        compilerEnvirons38.setStrictMode(true);
        boolean boolean48 = compilerEnvirons38.getAllowSharpComments();
        boolean boolean49 = compilerEnvirons38.isGeneratingSource();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons38.getErrorReporter();
        astRoot1.putProp(142520083, (java.lang.Object) errorReporter50);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(commentArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AstRoot" + "'", str35, "AstRoot");
        org.junit.Assert.assertNotNull(astNodeList36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(errorReporter50);
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(0);
        scriptNode1.removeProp((int) (short) 1);
        int int6 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int8 = astRoot7.getEndLineno();
        java.lang.Object obj9 = astRoot7.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray10 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet11, commentArray10);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet11);
        astRoot7.checkParentLinks();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7);
        java.lang.String str16 = astRoot7.shortName();
        com.google.javascript.rhino.head.Node node17 = astRoot7.target;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(commentArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AstRoot" + "'", str16, "AstRoot");
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setRecoverFromErrors(true);
        boolean boolean9 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope13.spliterator();
        astRoot11.addChildScope(scope13);
        java.lang.String str17 = astRoot11.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope25.setTop(scriptNode27);
        java.lang.String str30 = scope25.toSource(12);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot33, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot33.getComments();
        node31.addChildToBack((com.google.javascript.rhino.head.Node) astRoot33);
        com.google.javascript.rhino.head.Node node39 = astRoot33.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator40.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator41);
        com.google.javascript.rhino.head.Node node43 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node44 = node43.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        node43.addChildToFront((com.google.javascript.rhino.head.Node) scope45);
        int int47 = scope45.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scope45.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int52 = positionComparator41.compare((com.google.javascript.rhino.head.ast.AstNode) scope45, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        node39.addChildToFront((com.google.javascript.rhino.head.Node) astRoot51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getEndLineno();
        java.lang.Object obj56 = astRoot54.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot51.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        astRoot0.setSourceName("{\n}\n");
        java.lang.String str65 = astRoot0.debugPrint();
        java.lang.String str66 = astRoot0.getEncodedSource();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                        {\n                        }\n" + "'", str30, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-12) + "'", int52 == (-12));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str65, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.Node node34 = astRoot31.getFirstChild();
        astRoot21.putProp(2, (java.lang.Object) astRoot31);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scope36.addChild((com.google.javascript.rhino.head.ast.AstNode) scope37);
        boolean boolean39 = scope36.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope36, scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int46 = astRoot45.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int48 = astRoot47.getEndLineno();
        java.lang.Object obj49 = astRoot47.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray50 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet51 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet51, commentArray50);
        astRoot47.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet51);
        astRoot47.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode55.getFunctions();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot45, (com.google.javascript.rhino.head.Node) astRoot47, (com.google.javascript.rhino.head.Node) scriptNode55);
        astRoot45.setEncodedSourceBounds(21, (int) (short) 10);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = astRoot45.getComments();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) astRoot45);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump65 = scope40.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(commentArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertNull(commentSet63);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(0);
        scriptNode0.clearParentScope();
        boolean boolean4 = scriptNode0.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        scriptNode0.setSymbolTable(strMap5);
        scriptNode0.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str11 = astRoot10.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = scope12.spliterator();
        astRoot10.addChildScope(scope12);
        java.lang.String str16 = astRoot10.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope24.setTop(scriptNode26);
        java.lang.String str29 = scope24.toSource(12);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot32, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = astRoot32.getComments();
        node30.addChildToBack((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.Node node38 = astRoot32.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator39 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator41 = positionComparator39.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator40);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node43 = node42.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        node42.addChildToFront((com.google.javascript.rhino.head.Node) scope44);
        int int46 = scope44.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol48 = scope44.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int51 = positionComparator40.compare((com.google.javascript.rhino.head.ast.AstNode) scope44, (com.google.javascript.rhino.head.ast.AstNode) astRoot50);
        node38.addChildToFront((com.google.javascript.rhino.head.Node) astRoot50);
        com.google.javascript.rhino.head.Node node53 = astRoot50.getLastSibling();
        astRoot50.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str59 = astRoot58.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode61 = astRoot60.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode62.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) astRoot60, (com.google.javascript.rhino.head.Node) scriptNode62);
        int int66 = astRoot58.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope();
        scope67.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot58, scope67);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope67);
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        scope71.addChild((com.google.javascript.rhino.head.ast.AstNode) scope72);
        boolean boolean74 = scope71.hasSideEffects();
        int int75 = scope67.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope71);
        boolean boolean76 = scope71.hasConsistentReturnUsage();
        astRoot50.addChildrenToFront((com.google.javascript.rhino.head.Node) scope71);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int79 = astRoot78.getEndLineno();
        java.lang.Object obj80 = astRoot78.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol82 = astRoot78.getSymbol("java.io.IOException: ");
        astRoot78.setSourceName("java.io.IOException: ");
        java.lang.String str86 = astRoot78.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot87 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str88 = astRoot87.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope89 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator90 = scope89.spliterator();
        astRoot87.addChildScope(scope89);
        java.lang.String str93 = astRoot87.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap94 = astRoot87.getSymbolTable();
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) astRoot78, (com.google.javascript.rhino.head.Node) astRoot87);
        com.google.javascript.rhino.head.ast.AstRoot astRoot96 = astRoot87.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot97 = astRoot96.getAstRoot();
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot96);
        java.lang.String str99 = astRoot96.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                        {\n                        }\n" + "'", str29, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(commentSet36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(astNodeComparator41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(symbol48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-12) + "'", int51 == (-12));
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-581074367) + "'", int75 == (-581074367));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(symbol82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "$0" + "'", str88, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNotNull(astRoot96);
        org.junit.Assert.assertNotNull(astRoot97);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "136" + "'", str99, "136");
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        java.lang.String[] strArray21 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean28 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean29 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean30 = compilerEnvirons0.isIdeMode();
        java.util.Set<java.lang.String> strSet31 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons32.setStrictMode(true);
        boolean boolean35 = compilerEnvirons32.isRecordingLocalJsDocComments();
        boolean boolean36 = compilerEnvirons32.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons37.setWarnTrailingComma(true);
        java.lang.String[] strArray49 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        compilerEnvirons37.setActivationNames((java.util.Set<java.lang.String>) strSet50);
        compilerEnvirons32.setActivationNames((java.util.Set<java.lang.String>) strSet50);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode1.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, (com.google.javascript.rhino.head.ast.Scope) scriptNode1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator16 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        int int26 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode20, (com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str28 = astRoot27.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scope29.spliterator();
        astRoot27.addChildScope(scope29);
        java.lang.String str33 = astRoot27.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = astRoot27.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode39 = astRoot38.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int44 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot27, (com.google.javascript.rhino.head.ast.AstNode) astRoot36);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot36, 24);
        astRoot36.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = astRoot36.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot36.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = astRoot36.getAstRoot();
        scope0.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot36);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap52 = astRoot36.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getEndLineno();
        java.lang.Object obj58 = astRoot56.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray59 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet60 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet60, commentArray59);
        astRoot56.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet60);
        astRoot56.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getNextTempName();
        com.google.javascript.rhino.head.Node node66 = scriptNode64.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode64.getFunctions();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode64);
        int int69 = astRoot54.getEncodedSourceStart();
        astRoot54.setRelative(100);
        int int72 = astRoot54.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = astRoot54.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str76 = astRoot75.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode78 = astRoot77.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode79.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot75, (com.google.javascript.rhino.head.Node) astRoot77, (com.google.javascript.rhino.head.Node) scriptNode79);
        int int83 = astRoot75.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope();
        scope84.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot75, scope84);
        java.lang.String str87 = astRoot75.getEncodedSource();
        astRoot73.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot75);
        // The following exception was thrown during execution in test generation
        try {
            astRoot36.setFinally((com.google.javascript.rhino.head.Node) astRoot73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(astRoot48);
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertNotNull(astRoot50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(commentArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 136 + "'", int72 == 136);
        org.junit.Assert.assertNotNull(astRoot73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "$0" + "'", str76, "$0");
        org.junit.Assert.assertNull(astNode78);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str4 = astRoot2.getSourceName();
        astRoot2.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons16.getErrorReporter();
        boolean boolean20 = compilerEnvirons16.isGenerateObserverCount();
        compilerEnvirons16.setRecordingComments(true);
        boolean boolean23 = compilerEnvirons16.isGenerateObserverCount();
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons27.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons16, errorReporter30);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        java.lang.String str36 = astRoot34.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode37.getSymbols();
        java.lang.String str39 = astRoot34.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scope40.addChild((com.google.javascript.rhino.head.ast.AstNode) scope41);
        int int43 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode37, (com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str45 = astRoot44.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scope46.spliterator();
        astRoot44.addChildScope(scope46);
        java.lang.String str50 = astRoot44.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = astRoot44.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str54 = astRoot53.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = astRoot55.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) astRoot55, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int61 = positionComparator33.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) astRoot53);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot53, 24);
        astRoot53.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = iRFactory31.transformTree(astRoot53);
        int int66 = astRoot53.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot68 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot8, 7);
        java.lang.String str71 = astRoot2.getEncodedSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str73 = astRoot72.getNextTempName();
        java.lang.String str74 = astRoot72.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList76 = scriptNode75.getSymbols();
        java.lang.String str77 = astRoot72.toStringTree(scriptNode75);
        scriptNode75.setSourceName("java.io.IOException:                         {\n                        }\n");
        astRoot2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        astRoot2.setBounds((-985380541), (-414560696));
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "136" + "'", str36, "136");
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(astRoot68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "136" + "'", str74, "136");
        org.junit.Assert.assertNotNull(symbolList76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean10 = compilerEnvirons9.recoverFromErrors();
        int int11 = compilerEnvirons9.getLanguageVersion();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory13 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter12);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setWarnTrailingComma(true);
        boolean boolean17 = compilerEnvirons14.getWarnTrailingComma();
        compilerEnvirons14.setGeneratingSource(true);
        compilerEnvirons14.setOptimizationLevel(4);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons22.setRecordingLocalJsDocComments(false);
        boolean boolean25 = compilerEnvirons22.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons26.getErrorReporter();
        boolean boolean30 = compilerEnvirons26.isGenerateObserverCount();
        compilerEnvirons26.setRecordingComments(true);
        boolean boolean33 = compilerEnvirons26.isGenerateObserverCount();
        boolean boolean34 = compilerEnvirons26.isGenerateDebugInfo();
        compilerEnvirons26.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons37.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter40 = compilerEnvirons37.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory41 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons26, errorReporter40);
        boolean boolean42 = compilerEnvirons26.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons44.setRecordingLocalJsDocComments(false);
        boolean boolean47 = compilerEnvirons44.isGeneratingSource();
        compilerEnvirons44.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons50.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons50.getErrorReporter();
        boolean boolean54 = compilerEnvirons50.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = compilerEnvirons50.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException61 = errorReporter55.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter55.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser68 = new com.google.javascript.rhino.head.Parser(compilerEnvirons44, errorReporter55);
        compilerEnvirons26.setErrorReporter(errorReporter55);
        com.google.javascript.rhino.head.Parser parser70 = new com.google.javascript.rhino.head.Parser(compilerEnvirons22, errorReporter55);
        java.util.Set<java.lang.String> strSet71 = compilerEnvirons22.getActivationNames();
        boolean boolean72 = compilerEnvirons22.isXmlAvailable();
        com.google.javascript.rhino.head.ErrorReporter errorReporter73 = compilerEnvirons22.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory74 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter73);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str76 = astRoot75.getNextTempName();
        java.lang.String str77 = astRoot75.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList79 = scriptNode78.getSymbols();
        java.lang.String str80 = astRoot75.toStringTree(scriptNode78);
        astRoot75.checkParentLinks();
        int int82 = astRoot75.depth();
        astRoot75.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = iRFactory74.transformTree(astRoot75);
        java.lang.String str86 = astRoot75.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = iRFactory13.transformTree(astRoot75);
        java.io.Reader reader88 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot91 = iRFactory13.parse(reader88, "", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorReporter40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(errorReporter43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(errorReporter55);
        org.junit.Assert.assertNotNull(evaluatorException61);
        org.junit.Assert.assertNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(errorReporter73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "$0" + "'", str76, "$0");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "136" + "'", str77, "136");
        org.junit.Assert.assertNotNull(symbolList79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(scriptNode85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(scriptNode87);
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        java.lang.String str8 = astRoot6.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode9.getSymbols();
        java.lang.String str11 = astRoot6.toStringTree(scriptNode9);
        astRoot6.checkParentLinks();
        int int15 = astRoot6.getIntProp(11, 32);
        int int16 = astRoot6.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource(0);
        scriptNode17.clearParentScope();
        boolean boolean21 = scriptNode17.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = null;
        scriptNode17.setSymbolTable(strMap22);
        int int24 = scriptNode17.getRegexpCount();
        int int25 = scriptNode17.getRegexpCount();
        astRoot6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        astRoot0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.AstNode astNode28 = scriptNode17.getParent();
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode17.getDefiningScope("                        {\n                        }\n");
        scriptNode17.setEncodedSource("-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n");
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList33 = scriptNode17.getStatements();
        boolean boolean34 = scriptNode17.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(astNode28);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNotNull(astNodeList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        node3.addChildToFront((com.google.javascript.rhino.head.Node) scope5);
        int int7 = scope5.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope5.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int12 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope5, (com.google.javascript.rhino.head.ast.AstNode) astRoot11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = astRoot16.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot14, (com.google.javascript.rhino.head.Node) astRoot16, (com.google.javascript.rhino.head.Node) scriptNode18);
        boolean boolean22 = astRoot14.isInStrictMode();
        astRoot14.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        int int33 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot25);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator35 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = positionComparator34.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator35);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator37 = positionComparator1.thenComparing(astNodeComparator36);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator38 = astNodeComparator37.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-12) + "'", int12 == (-12));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-52) + "'", int33 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertNotNull(astNodeComparator37);
        org.junit.Assert.assertNotNull(astNodeComparator38);
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        int int3 = astRoot0.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = astRoot0.getEnclosingFunction();
        java.lang.Object obj5 = astRoot0.getCompilerData();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(functionNode4);
        org.junit.Assert.assertNull(obj5);
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope3.addChild((com.google.javascript.rhino.head.ast.AstNode) scope4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        node1.putProp(0, (java.lang.Object) scriptNode6);
        int int9 = scriptNode6.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode6.getSymbols();
        scriptNode6.setLength(1246810839);
        com.google.javascript.rhino.head.ast.Scope scope14 = scriptNode6.getDefiningScope("{\n{\n}\n{\n}\n}\n");
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertNull(scope14);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = astRoot0.getFunctions();
        java.lang.String str8 = astRoot0.toSource();
        int int9 = astRoot0.getFunctionCount();
        astRoot0.checkParentLinks();
        java.lang.String str11 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Comment comment12 = null;
        astRoot0.setJsDocNode(comment12);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$1" + "'", str11, "$1");
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons3.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter6);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean10 = compilerEnvirons9.recoverFromErrors();
        compilerEnvirons9.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setWarnTrailingComma(true);
        boolean boolean16 = compilerEnvirons13.isRecordingLocalJsDocComments();
        compilerEnvirons13.setWarnTrailingComma(false);
        compilerEnvirons13.setAllowSharpComments(false);
        boolean boolean21 = compilerEnvirons13.isGenerateDebugInfo();
        compilerEnvirons13.setIdeMode(false);
        compilerEnvirons13.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons26.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons26.getErrorReporter();
        boolean boolean30 = compilerEnvirons26.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons26.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser32 = new com.google.javascript.rhino.head.Parser(compilerEnvirons13, errorReporter31);
        com.google.javascript.rhino.head.IRFactory iRFactory33 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter31);
        errorReporter31.warning("{\n}\n", "136", (int) (byte) 100, "hi!", 10);
        compilerEnvirons0.setErrorReporter(errorReporter31);
        boolean boolean41 = compilerEnvirons0.isGeneratingSource();
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        astRoot2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        scope19.setRelative((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        scope19.addChildToBack((com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str27 = astRoot26.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scope28.spliterator();
        astRoot26.addChildScope(scope28);
        java.lang.String str32 = astRoot26.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scope39.addChild((com.google.javascript.rhino.head.ast.AstNode) scope40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope40.setTop(scriptNode42);
        java.lang.String str45 = scope40.toSource(12);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) astRoot48, 4);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = astRoot48.getComments();
        node46.addChildToBack((com.google.javascript.rhino.head.Node) astRoot48);
        com.google.javascript.rhino.head.Node node54 = astRoot48.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator57 = positionComparator55.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator56);
        com.google.javascript.rhino.head.Node node58 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node59 = node58.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope();
        node58.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        int int62 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scope60.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int67 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scope60, (com.google.javascript.rhino.head.ast.AstNode) astRoot66);
        node54.addChildToFront((com.google.javascript.rhino.head.Node) astRoot66);
        com.google.javascript.rhino.head.ast.AstRoot astRoot69 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int70 = astRoot69.getEndLineno();
        java.lang.Object obj71 = astRoot69.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray72 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet73 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet73, commentArray72);
        astRoot69.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet73);
        boolean boolean77 = astRoot66.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = astRoot66.getTop();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(550287075, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode78);
        java.lang.String str80 = astRoot23.shortName();
        astRoot23.setEncodedSourceBounds(0, (-852661786));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                        {\n                        }\n" + "'", str45, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(commentSet52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(astNodeComparator57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(commentArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "AstRoot" + "'", str80, "AstRoot");
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        boolean boolean2 = astRoot1.hasSideEffects();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot1.visitComments(nodeVisitor3);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("java.io.IOException: Scope");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        com.google.javascript.rhino.head.ast.Scope scope10 = astRoot0.getParentScope();
        com.google.javascript.rhino.head.Node node11 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setRecordingLocalJsDocComments(false);
        boolean boolean15 = compilerEnvirons12.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons16.getErrorReporter();
        boolean boolean20 = compilerEnvirons16.isGenerateObserverCount();
        compilerEnvirons16.setRecordingComments(true);
        boolean boolean23 = compilerEnvirons16.isGenerateObserverCount();
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons27.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons16, errorReporter30);
        boolean boolean32 = compilerEnvirons16.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons16.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons34.setRecordingLocalJsDocComments(false);
        boolean boolean37 = compilerEnvirons34.isGeneratingSource();
        compilerEnvirons34.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons40.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = compilerEnvirons40.getErrorReporter();
        boolean boolean44 = compilerEnvirons40.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons40.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException51 = errorReporter45.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter45.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser58 = new com.google.javascript.rhino.head.Parser(compilerEnvirons34, errorReporter45);
        compilerEnvirons16.setErrorReporter(errorReporter45);
        com.google.javascript.rhino.head.Parser parser60 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12, errorReporter45);
        com.google.javascript.rhino.head.Parser parser61 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12);
        compilerEnvirons12.setStrictMode(true);
        compilerEnvirons12.setRecordingComments(true);
        astRoot0.setCompilerData((java.lang.Object) true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorReporter43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorReporter45);
        org.junit.Assert.assertNotNull(evaluatorException51);
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean1 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons4.setWarnTrailingComma(true);
        boolean boolean7 = compilerEnvirons4.isRecordingLocalJsDocComments();
        compilerEnvirons4.setWarnTrailingComma(false);
        compilerEnvirons4.setAllowSharpComments(false);
        boolean boolean12 = compilerEnvirons4.isGenerateDebugInfo();
        compilerEnvirons4.setIdeMode(false);
        compilerEnvirons4.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons17.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4, errorReporter22);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter22);
        boolean boolean25 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean27 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateObserverCount(false);
        boolean boolean30 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean31 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean3 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons6.setWarnTrailingComma(true);
        boolean boolean9 = compilerEnvirons6.isRecordingLocalJsDocComments();
        compilerEnvirons6.setWarnTrailingComma(false);
        compilerEnvirons6.setAllowSharpComments(false);
        boolean boolean14 = compilerEnvirons6.isGenerateDebugInfo();
        compilerEnvirons6.setIdeMode(false);
        compilerEnvirons6.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons19.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons19.getErrorReporter();
        boolean boolean23 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons19.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser25 = new com.google.javascript.rhino.head.Parser(compilerEnvirons6, errorReporter24);
        compilerEnvirons0.setErrorReporter(errorReporter24);
        com.google.javascript.rhino.head.EvaluatorException evaluatorException32 = errorReporter24.runtimeError("-1\tSCRIPT -1 1\n", "-1\t  BLOCK 0 1\n", 0, "                                                {\n                                                }\n", 129);
        java.lang.Throwable[] throwableArray33 = evaluatorException32.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertNotNull(evaluatorException32);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString("                                                  ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        int int12 = astRoot4.getParamCount();
        java.lang.String str13 = astRoot4.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray17 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList18, symbolArray17);
        astRoot15.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList18);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        astRoot15.addChildScope(scope22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getEndLineno();
        java.lang.Object obj30 = astRoot28.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray31 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet32 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet32, commentArray31);
        astRoot28.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet32);
        astRoot28.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getNextTempName();
        com.google.javascript.rhino.head.Node node38 = scriptNode36.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode36.getFunctions();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot26, (com.google.javascript.rhino.head.Node) astRoot28, (com.google.javascript.rhino.head.Node) scriptNode36);
        int int41 = astRoot26.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot26);
        astRoot15.removeProp(8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = astRoot45.getAstRoot();
        java.lang.String str47 = astRoot46.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = astRoot46.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray51 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList52, symbolArray51);
        astRoot49.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList52);
        scriptNode48.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList52);
        astRoot15.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(775058292, node2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot15, 4);
        java.lang.String str59 = astRoot4.toString();
        astRoot4.setBounds(3, 6);
        int int63 = astRoot4.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = astRoot64.getAstRoot();
        java.lang.String str66 = astRoot65.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = astRoot65.getTop();
        astRoot65.setEncodedSourceEnd(0);
        int int70 = astRoot65.getAbsolutePosition();
        java.lang.String str72 = astRoot65.makeIndent(9);
        java.lang.Object obj74 = astRoot65.getProp(3);
        // The following exception was thrown during execution in test generation
        try {
            astRoot4.setDefault((com.google.javascript.rhino.head.Node) astRoot65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(symbolArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(commentArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(astRoot46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AstRoot" + "'", str47, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(symbolArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "136" + "'", str59, "136");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 136 + "'", int63 == 136);
        org.junit.Assert.assertNotNull(astRoot65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AstRoot" + "'", str66, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                  " + "'", str72, "                  ");
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope2.setTop(scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        scriptNode4.setCompilerData((java.lang.Object) scope7);
        scriptNode4.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        int int16 = scriptNode12.getEncodedSourceEnd();
        scriptNode4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.Node node18 = scriptNode4.getFirstChild();
        boolean boolean19 = node18.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scope21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope22);
        boolean boolean24 = scope21.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scope25.addChild((com.google.javascript.rhino.head.ast.AstNode) scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope21, scope25);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = scope25.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = scope25.getAstRoot();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) scope25);
        node18.addChildrenToFront((com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str35 = astRoot34.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scope36.spliterator();
        astRoot34.addChildScope(scope36);
        java.lang.String str40 = astRoot34.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        java.lang.String str43 = astRoot41.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode44.getSymbols();
        java.lang.String str46 = astRoot41.toStringTree(scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scope47.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope48.setTop(scriptNode50);
        java.lang.String str53 = scope48.toSource(12);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope48);
        int int55 = astRoot34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = scope58.spliterator();
        astRoot56.addChildScope(scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getNextTempName();
        java.lang.String str63 = scriptNode61.debugPrint();
        scriptNode61.setLineno((int) (byte) -1);
        scriptNode61.flattenSymbolTable(true);
        astRoot56.setTop(scriptNode61);
        astRoot56.clearParentScope();
        astRoot34.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot56);
        com.google.javascript.rhino.head.Node node71 = astRoot56.target;
        int int72 = astRoot56.getLineno();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) astRoot56);
        com.google.javascript.rhino.head.Node node74 = astRoot56.getLastChild();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertNull(astRoot30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                        {\n                        }\n" + "'", str53, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(node74);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode5 = astRoot4.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean10 = astRoot2.isInStrictMode();
        astRoot2.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node15 = scriptNode13.target;
        int int16 = scriptNode13.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastChild();
        astRoot2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        boolean boolean19 = astRoot2.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = astRoot21.getAstRoot();
        java.lang.String str23 = astRoot22.shortName();
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node25 = node24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        node24.addChildToFront((com.google.javascript.rhino.head.Node) scope26);
        int int28 = scope26.getLineno();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) scope26, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = astRoot22.new NodeIterator();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot22, 23);
        astRoot22.setPosition(65536);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.Object obj41 = scriptNode40.getCompilerData();
        int int42 = scriptNode40.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int45 = astRoot44.getType();
        com.google.javascript.rhino.head.Node node46 = astRoot44.getFirstChild();
        astRoot44.putIntProp((int) (short) 100, 953557037);
        int int50 = astRoot44.getEndLineno();
        int int51 = astRoot44.getLineno();
        int int54 = astRoot44.getIntProp((-236001159), 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor55 = null;
        astRoot44.visitComments(nodeVisitor55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getNextTempName();
        com.google.javascript.rhino.head.Node node59 = scriptNode57.target;
        boolean boolean60 = scriptNode57.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode57.getSymbols();
        astRoot44.setSymbols(symbolList61);
        scriptNode40.setSymbols(symbolList61);
        astRoot22.setSymbols(symbolList61);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(astNode5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(astRoot22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AstRoot" + "'", str23, "AstRoot");
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 136 + "'", int45 == 136);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(symbolList61);
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        astRoot6.removeChildren();
        java.lang.String str18 = astRoot6.toSource(10);
        int int19 = astRoot6.getParamCount();
        int int22 = astRoot6.getIntProp((-61111), 1403594947);
        java.lang.Object obj24 = astRoot6.getProp((-255300984));
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1403594947 + "'", int22 == 1403594947);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setWarnTrailingComma(true);
        boolean boolean13 = compilerEnvirons10.isRecordingLocalJsDocComments();
        compilerEnvirons10.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        boolean boolean18 = compilerEnvirons0.isGenerateDebugInfo();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet3 = compilerEnvirons0.getActivationNames();
        boolean boolean4 = compilerEnvirons0.recoverFromErrors();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setStrictMode(false);
        boolean boolean15 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons21.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = compilerEnvirons21.getErrorReporter();
        compilerEnvirons18.setErrorReporter(errorReporter24);
        boolean boolean26 = compilerEnvirons18.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean28 = compilerEnvirons27.recoverFromErrors();
        compilerEnvirons27.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons31.setWarnTrailingComma(true);
        boolean boolean34 = compilerEnvirons31.isRecordingLocalJsDocComments();
        compilerEnvirons31.setWarnTrailingComma(false);
        compilerEnvirons31.setAllowSharpComments(false);
        boolean boolean39 = compilerEnvirons31.isGenerateDebugInfo();
        compilerEnvirons31.setIdeMode(false);
        compilerEnvirons31.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons44.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter47 = compilerEnvirons44.getErrorReporter();
        boolean boolean48 = compilerEnvirons44.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter49 = compilerEnvirons44.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser50 = new com.google.javascript.rhino.head.Parser(compilerEnvirons31, errorReporter49);
        com.google.javascript.rhino.head.IRFactory iRFactory51 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons27, errorReporter49);
        errorReporter49.warning("{\n}\n", "136", (int) (byte) 100, "hi!", 10);
        compilerEnvirons18.setErrorReporter(errorReporter49);
        com.google.javascript.rhino.head.Parser parser59 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter49);
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(errorReporter47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(errorReporter49);
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        java.io.IOException iOException1 = new java.io.IOException("-1291599107\tSCRIPT -1291599107 1\n");
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("hi!", (java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray7 = iOException4.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException("", (java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("8\tSCRIPT 8 1\n", (java.lang.Throwable) iOException11);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons13.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons13.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException22 = errorReporter16.runtimeError("{\n}\n", "", 3, "AstRoot", (int) (byte) 1);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) evaluatorException22);
        iOException11.addSuppressed((java.lang.Throwable) iOException23);
        iOException4.addSuppressed((java.lang.Throwable) iOException23);
        iOException1.addSuppressed((java.lang.Throwable) iOException23);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertNotNull(evaluatorException22);
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str4 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope7, 25);
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setLength((int) (short) 1);
        boolean boolean13 = scope7.hasChildren();
        com.google.javascript.rhino.head.ast.Comment comment14 = scope7.getJsDocNode();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "$0" + "'", str4, "$0");
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(comment14);
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        int int3 = compilerEnvirons0.getLanguageVersion();
        int int4 = compilerEnvirons0.getLanguageVersion();
        boolean boolean5 = compilerEnvirons0.isXmlAvailable();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean8 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean8 = compilerEnvirons0.isIdeMode();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons10.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons10.isGeneratingSource();
        compilerEnvirons10.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons16 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons16.setWarnTrailingComma(true);
        boolean boolean19 = compilerEnvirons16.isRecordingLocalJsDocComments();
        compilerEnvirons16.setWarnTrailingComma(false);
        compilerEnvirons16.setAllowSharpComments(false);
        boolean boolean24 = compilerEnvirons16.isGenerateDebugInfo();
        compilerEnvirons16.setIdeMode(false);
        compilerEnvirons16.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons29.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons29.getErrorReporter();
        boolean boolean33 = compilerEnvirons29.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons29.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser35 = new com.google.javascript.rhino.head.Parser(compilerEnvirons16, errorReporter34);
        compilerEnvirons10.setErrorReporter(errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope41.spliterator();
        astRoot39.addChildScope(scope41);
        java.lang.String str45 = astRoot39.toSource(9);
        com.google.javascript.rhino.head.ast.Comment comment46 = null;
        astRoot39.setJsDocNode(comment46);
        int int48 = astRoot39.getType();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = astRoot39.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = iRFactory38.transformTree(astRoot39);
        com.google.javascript.rhino.head.ast.Symbol symbol52 = astRoot39.getSymbol("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 136 + "'", int48 == 136);
        org.junit.Assert.assertNotNull(scopeList49);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNull(symbol52);
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setStrictMode(true);
        boolean boolean10 = compilerEnvirons0.reportWarningAsError();
        boolean boolean11 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setWarnTrailingComma(true);
        java.lang.String[] strArray24 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        compilerEnvirons12.setActivationNames((java.util.Set<java.lang.String>) strSet25);
        boolean boolean28 = compilerEnvirons12.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser29 = new com.google.javascript.rhino.head.Parser(compilerEnvirons12);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "ScriptNode", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        compilerEnvirons12.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        java.lang.String str27 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.Comment comment29 = scriptNode1.getJsDocNode();
        int int30 = scriptNode1.depth();
        com.google.javascript.rhino.head.Node node31 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str34 = astRoot33.getNextTempName();
        java.lang.String str35 = astRoot33.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode36.getSymbols();
        java.lang.String str38 = astRoot33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot33);
        astRoot33.flattenSymbolTable(false);
        int int42 = astRoot33.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = astRoot33.getChildScopes();
        java.lang.String str44 = astRoot33.toSource();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setDefault((com.google.javascript.rhino.head.Node) astRoot33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNull(comment29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "136" + "'", str35, "136");
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = astRoot3.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode5);
        scriptNode5.setEncodedSourceStart(17);
        java.lang.Object obj11 = scriptNode5.getCompilerData();
        scriptNode5.putIntProp((int) '#', 938587703);
        java.lang.Object obj15 = scriptNode5.getCompilerData();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getEndLineno();
        java.lang.Object obj4 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray5 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet6 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet6, commentArray5);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet6);
        astRoot0.setRelative((int) (byte) -1);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet12 = astRoot0.getComments();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList13 = astRoot0.getFunctions();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = astRoot0.getComments();
        astRoot0.setInStrictMode(true);
        boolean boolean17 = astRoot0.hasSideEffects();
        astRoot0.setLength((-665324045));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(commentArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(commentSet12);
        org.junit.Assert.assertNotNull(functionNodeList13);
        org.junit.Assert.assertNull(commentSet14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-738182430));
        com.google.javascript.rhino.head.Node node2 = astRoot1.getFirstChild();
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator3.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = astRoot9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int18 = positionComparator3.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot9, (com.google.javascript.rhino.head.ast.AstNode) scope17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = astNodeComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator21 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator20.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator19.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator24 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator25 = positionComparator21.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str31 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope34, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = astRoot37.getAstRoot();
        java.lang.String str39 = astRoot38.shortName();
        java.lang.String str40 = astRoot38.getSourceName();
        astRoot38.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap42 = astRoot38.getSymbolTable();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) astRoot38);
        int int44 = scope34.getLineno();
        com.google.javascript.rhino.head.Node node45 = scope34.getLastSibling();
        int int46 = scope34.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray50 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList51, symbolArray50);
        astRoot48.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList51);
        boolean boolean54 = astRoot48.hasConsistentReturnUsage();
        astRoot48.setLineno((-3));
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) astRoot48);
        int int58 = positionComparator24.compare((com.google.javascript.rhino.head.ast.AstNode) scope34, (com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        java.lang.String str60 = astRoot48.toSource((-1291599107));
        astRoot48.setSourceName("653625563");
        java.lang.String str63 = astRoot48.debugPrint();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(astRoot38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AstRoot" + "'", str39, "AstRoot");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(symbolArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        java.lang.String str4 = astRoot2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode5.getSymbols();
        java.lang.String str7 = astRoot2.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        scope8.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        int int11 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode5, (com.google.javascript.rhino.head.ast.AstNode) scope8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        astRoot12.addChildScope(scope14);
        java.lang.String str18 = astRoot12.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = astRoot12.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = astRoot23.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot21);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot21, 24);
        astRoot21.removeChildren();
        astRoot21.setLength(100);
        com.google.javascript.rhino.head.ast.AstNode astNode35 = null;
        astRoot21.setParent(astNode35);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.lang.Object obj3 = astRoot1.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot1.getSymbol("java.io.IOException: ");
        astRoot1.setEncodedSourceStart(0);
        java.lang.String str9 = astRoot1.makeIndent(13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray14 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList15, symbolArray14);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        astRoot12.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getEndLineno();
        java.lang.Object obj27 = astRoot25.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        astRoot25.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getNextTempName();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode33.getFunctions();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot23, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int38 = astRoot23.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) astRoot23);
        com.google.javascript.rhino.head.Node node41 = astRoot23.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scope45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        com.google.javascript.rhino.head.Node node48 = scope46.getFirstChild();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope46);
        astRoot42.target = node49;
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = astRoot42.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope();
        scope52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope53);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scope53.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node58 = node57.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope();
        node57.addChildToFront((com.google.javascript.rhino.head.Node) scope59);
        scope53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode56, node57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        java.lang.String str64 = node57.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        java.lang.String str65 = astRoot62.getNextTempName();
        boolean boolean66 = astRoot62.hasSideEffects();
        java.lang.String str68 = astRoot62.toSource(100);
        node41.addChildAfter((com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) astRoot62);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot42);
        com.google.javascript.rhino.head.Node node71 = astRoot1.getLastChild();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                          " + "'", str9, "                          ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(symbolArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(astRoot51);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(node71);
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope(12, 21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getEndLineno();
        java.lang.Object obj7 = astRoot5.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray8 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet9, commentArray8);
        astRoot5.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet9);
        com.google.javascript.rhino.head.Node node12 = astRoot5.getLastSibling();
        int int13 = node12.getType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str15 = astRoot14.getNextTempName();
        java.lang.String str16 = astRoot14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode17.getSymbols();
        java.lang.String str19 = astRoot14.toStringTree(scriptNode17);
        java.lang.String str21 = astRoot14.toSource(0);
        java.lang.String str23 = astRoot14.toSource(25);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scope4, node12, (com.google.javascript.rhino.head.Node) astRoot14);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) astRoot14, 541550340);
        astRoot14.setEncodedSourceStart(374803108);
        java.lang.String str29 = astRoot14.debugPrint();
        com.google.javascript.rhino.head.Node node31 = astRoot14.setType((-443001414));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(commentArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 136 + "'", int13 == 136);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str29, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node31);
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-852661786), (-1291599107));
        com.google.javascript.rhino.head.Node node3 = scope2.getLastChild();
        scope2.setLength(125183716);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons1.setWarnTrailingComma(true);
        boolean boolean4 = compilerEnvirons1.isRecordingLocalJsDocComments();
        compilerEnvirons1.setWarnTrailingComma(false);
        compilerEnvirons1.setAllowSharpComments(false);
        boolean boolean9 = compilerEnvirons1.isGenerateDebugInfo();
        compilerEnvirons1.setIdeMode(false);
        compilerEnvirons1.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons14.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser20 = new com.google.javascript.rhino.head.Parser(compilerEnvirons1, errorReporter19);
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getEndLineno();
        java.lang.Object obj31 = astRoot29.getCompilerData();
        astRoot22.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot29);
        astRoot29.setPosition(25);
        astRoot29.setEncodedSourceStart(10);
        astRoot29.clearParentScope();
        com.google.javascript.rhino.head.Node node38 = iRFactory21.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int42 = astRoot41.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray43 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList44, symbolArray43);
        astRoot41.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList44);
        boolean boolean47 = astRoot41.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setWarnTrailingComma(true);
        boolean boolean51 = compilerEnvirons48.isRecordingLocalJsDocComments();
        compilerEnvirons48.setWarnTrailingComma(false);
        compilerEnvirons48.setAllowSharpComments(false);
        boolean boolean56 = compilerEnvirons48.isGenerateDebugInfo();
        astRoot41.setCompilerData((java.lang.Object) boolean56);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot41);
        astRoot41.setPosition(0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = astRoot61.getAstRoot();
        java.lang.String str63 = astRoot62.shortName();
        java.lang.String str65 = astRoot62.toSource(1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList66 = astRoot62.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray69 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList70, symbolArray69);
        astRoot67.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList70);
        boolean boolean73 = astRoot67.hasChildren();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot62, (com.google.javascript.rhino.head.Node) astRoot67);
        astRoot29.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot41);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump76 = astRoot41.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(symbolArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(astRoot62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AstRoot" + "'", str63, "AstRoot");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(functionNodeList66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(symbolArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        java.lang.String str3 = scriptNode1.debugPrint();
        scriptNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str8 = astRoot7.getNextTempName();
        java.lang.String str9 = astRoot7.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = scriptNode10.getSymbols();
        java.lang.String str12 = astRoot7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int17 = astRoot16.getEndLineno();
        java.lang.Object obj18 = astRoot16.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray19 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet20 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet20, commentArray19);
        astRoot16.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet20);
        int int24 = astRoot14.getRegexpCount();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot14, 550287075);
        java.lang.String str27 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.Comment comment29 = scriptNode1.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setBaseLineno((-766081488));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(symbolList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(commentArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNull(comment29);
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.Parser parser17 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean22 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.Context context23 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        java.lang.String str30 = scriptNode28.debugPrint();
        scriptNode28.setLineno((int) (byte) -1);
        scriptNode28.flattenSymbolTable(true);
        astRoot23.setTop(scriptNode28);
        astRoot23.clearParentScope();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        boolean boolean38 = astRoot1.isInStrictMode();
        java.lang.Object obj40 = astRoot1.getProp(328069054);
        astRoot1.removeProp(0);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator44 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str46 = astRoot45.getNextTempName();
        java.lang.String str47 = astRoot45.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode48.getSymbols();
        java.lang.String str50 = astRoot45.toStringTree(scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scope51.addChild((com.google.javascript.rhino.head.ast.AstNode) scope52);
        int int54 = positionComparator44.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode48, (com.google.javascript.rhino.head.ast.AstNode) scope51);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str56 = astRoot55.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator58 = scope57.spliterator();
        astRoot55.addChildScope(scope57);
        java.lang.String str61 = astRoot55.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = astRoot55.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str65 = astRoot64.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode67 = astRoot66.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode68.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) scriptNode68);
        int int72 = positionComparator44.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot55, (com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot64, 24);
        astRoot64.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = astRoot64.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot64.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = astRoot64.getAstRoot();
        int int79 = astRoot64.getLength();
        astRoot64.flattenSymbolTable(true);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap82 = astRoot64.getSymbolTable();
        astRoot1.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot64);
        astRoot1.setEncodedSourceStart(7);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertNull(astNode67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(astRoot76);
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertNotNull(astRoot78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = astRoot1.getAstRoot();
        java.lang.String str3 = astRoot2.shortName();
        java.lang.String str5 = astRoot2.toSource(1);
        java.lang.Object obj6 = astRoot2.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = astRoot2.getAstRoot();
        astRoot2.setEncodedSource("775058292");
        int int10 = astRoot2.getBaseLineno();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((-508712079), (com.google.javascript.rhino.head.Node) astRoot2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot((int) (byte) 0);
        java.lang.Object obj15 = astRoot13.getProp(7);
        astRoot2.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode(953557037);
        scriptNode19.setEndLineno(0);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((-11), (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = scriptNode19.new NodeIterator();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons24.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons24.getErrorReporter();
        boolean boolean28 = compilerEnvirons24.isGenerateObserverCount();
        boolean boolean29 = compilerEnvirons24.recoverFromErrors();
        java.util.Set<java.lang.String> strSet30 = compilerEnvirons24.getActivationNames();
        boolean boolean31 = compilerEnvirons24.reportWarningAsError();
        compilerEnvirons24.setWarnTrailingComma(false);
        boolean boolean34 = compilerEnvirons24.isXmlAvailable();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str37 = astRoot36.getNextTempName();
        java.lang.String str38 = astRoot36.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode39.getSymbols();
        java.lang.String str41 = astRoot36.toStringTree(scriptNode39);
        astRoot36.checkParentLinks();
        com.google.javascript.rhino.head.Node node43 = astRoot36.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons45 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons45.setStrictMode(true);
        boolean boolean48 = compilerEnvirons45.recoverFromErrors();
        compilerEnvirons45.setRecordingComments(true);
        astRoot36.putProp(11, (java.lang.Object) true);
        astRoot36.setEncodedSourceEnd(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = iRFactory35.transformTree(astRoot36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str57 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode59 = astRoot58.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) astRoot58, (com.google.javascript.rhino.head.Node) scriptNode60);
        int int64 = astRoot56.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scope65.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot56, scope65);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = astRoot56.getSymbolTable();
        astRoot36.setSymbolTable(strMap68);
        scriptNode19.setSymbolTable(strMap68);
        astRoot13.setSymbolTable(strMap68);
        org.junit.Assert.assertNotNull(astRoot2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AstRoot" + "'", str3, "AstRoot");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(astRoot7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "136" + "'", str38, "136");
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertNull(astNode59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(0);
        scriptNode7.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', node3, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, 2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode7.getTop();
        com.google.javascript.rhino.head.ast.Comment comment16 = scriptNode15.getJsDocNode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons17.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons17.getErrorReporter();
        boolean boolean21 = compilerEnvirons17.isGenerateObserverCount();
        boolean boolean22 = compilerEnvirons17.recoverFromErrors();
        java.util.Set<java.lang.String> strSet23 = compilerEnvirons17.getActivationNames();
        compilerEnvirons17.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.Parser parser26 = new com.google.javascript.rhino.head.Parser(compilerEnvirons17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = parser26.parse("", "java.io.IOException: java.io.IOException: ", (int) (short) 100);
        astRoot30.setEncodedSourceEnd(4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = astRoot30.getFunctions();
        scriptNode15.setCompilerData((java.lang.Object) astRoot30);
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode15.getDefiningScope("-2\t    SCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getNextTempName();
        com.google.javascript.rhino.head.Node node39 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode37.getFunctions();
        int int41 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = scriptNode42.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode42.getFunctions();
        int int46 = scriptNode42.getEncodedSourceEnd();
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        int int48 = scriptNode37.getLength();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator50 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        java.lang.String str53 = astRoot51.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode54.getSymbols();
        java.lang.String str56 = astRoot51.toStringTree(scriptNode54);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope57.addChild((com.google.javascript.rhino.head.ast.AstNode) scope58);
        int int60 = positionComparator50.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode54, (com.google.javascript.rhino.head.ast.AstNode) scope57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str62 = astRoot61.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator64 = scope63.spliterator();
        astRoot61.addChildScope(scope63);
        java.lang.String str67 = astRoot61.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = astRoot61.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str71 = astRoot70.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot72 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode73 = astRoot72.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode74.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot70, (com.google.javascript.rhino.head.Node) astRoot72, (com.google.javascript.rhino.head.Node) scriptNode74);
        int int78 = positionComparator50.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot61, (com.google.javascript.rhino.head.ast.AstNode) astRoot70);
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot70, 24);
        astRoot70.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot82 = astRoot70.getAstRoot();
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot70);
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = astRoot70.getAstRoot();
        astRoot70.checkParentLinks();
        java.lang.String str87 = astRoot70.toSource(23);
        int int88 = astRoot70.getLength();
        int int89 = astRoot70.getEncodedSourceStart();
        java.lang.String str90 = scriptNode15.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot70);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList91 = scriptNode15.getFunctions();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strSet23);
        org.junit.Assert.assertNotNull(astRoot30);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "136" + "'", str53, "136");
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertNull(astNode73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(astRoot82);
        org.junit.Assert.assertNotNull(astRoot84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(functionNodeList91);
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        astRoot4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope11);
        astRoot4.addChildScope(scope11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int18 = astRoot17.getEndLineno();
        java.lang.Object obj19 = astRoot17.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray20 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet21 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet21, commentArray20);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet21);
        astRoot17.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        com.google.javascript.rhino.head.Node node27 = scriptNode25.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int30 = astRoot15.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot15);
        astRoot15.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getEndLineno();
        java.lang.Object obj40 = astRoot38.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        astRoot38.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getNextTempName();
        com.google.javascript.rhino.head.Node node48 = scriptNode46.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = scriptNode46.getFunctions();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode46);
        astRoot15.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot38);
        int int52 = astRoot38.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode57 = astRoot56.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int62 = astRoot54.getParamCount();
        java.lang.String str63 = astRoot54.debugPrint();
        boolean boolean64 = astRoot54.isInStrictMode();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) astRoot54, (-2110645446));
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(122705610, (com.google.javascript.rhino.head.Node) astRoot54);
        boolean boolean68 = astRoot54.hasChildren();
        astRoot54.setLineno((-133827546));
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) astRoot54);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = astRoot54.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(commentArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(astNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        astRoot0.setEndLineno((int) (byte) 100);
        java.lang.String str5 = astRoot0.toSource((int) (short) 0);
        astRoot0.setInStrictMode(false);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot0.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = astRoot0.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump10 = astRoot0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(functionNodeList9);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str5 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope8, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = astRoot11.getAstRoot();
        java.lang.String str13 = astRoot12.shortName();
        java.lang.String str14 = astRoot12.getSourceName();
        astRoot12.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = astRoot12.getSymbolTable();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) astRoot12);
        int int18 = scope8.getLineno();
        com.google.javascript.rhino.head.Node node19 = scope8.getLastSibling();
        int int20 = scope8.depth();
        scope8.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = scope8.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str5 = astRoot4.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = astRoot6.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int15 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot6, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator16 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        java.lang.String str19 = astRoot17.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode20.getSymbols();
        java.lang.String str22 = astRoot17.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scope23.addChild((com.google.javascript.rhino.head.ast.AstNode) scope24);
        int int26 = positionComparator16.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode20, (com.google.javascript.rhino.head.ast.AstNode) scope23);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator27 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray31 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList32, symbolArray31);
        astRoot29.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList32);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        astRoot29.addChildScope(scope36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int43 = astRoot42.getEndLineno();
        java.lang.Object obj44 = astRoot42.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray45 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet46 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet46, commentArray45);
        astRoot42.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet46);
        astRoot42.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getNextTempName();
        com.google.javascript.rhino.head.Node node52 = scriptNode50.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode50.getFunctions();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode50);
        int int55 = astRoot40.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) astRoot40);
        astRoot40.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode67.toSource(0);
        scriptNode67.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) '#', node63, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode67, 2);
        int int75 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot40, (com.google.javascript.rhino.head.ast.AstNode) scope66);
        java.lang.String str76 = astRoot40.debugPrint();
        com.google.javascript.rhino.head.Node node77 = astRoot40.getLastSibling();
        int int78 = astRoot40.depth();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(symbolArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(commentArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{\n}\n" + "'", str69, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-3) + "'", int75 == (-3));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str76, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.setTop(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scope6);
        scriptNode3.setCompilerData((java.lang.Object) scope6);
        scriptNode3.setEncodedSourceEnd(0);
        int int11 = scriptNode3.getType();
        int int12 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node13 = scriptNode3.target;
        scriptNode3.clearParentScope();
        java.lang.String str15 = scriptNode3.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode3.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((-3));
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = scriptNode3.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode3.setEndLineno((-847312182));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNotNull(functionNodeList16);
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet3 = astRoot1.getComments();
        int int6 = astRoot1.getIntProp(0, 0);
        com.google.javascript.rhino.head.Node node7 = astRoot1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        astRoot9.setEncodedSourceEnd(0);
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = astRoot20.getAstRoot();
        java.lang.String str22 = astRoot21.shortName();
        java.lang.String str23 = astRoot21.getSourceName();
        astRoot21.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = astRoot21.getTop();
        java.lang.String str26 = scriptNode25.getSourceName();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str30 = astRoot29.getNextTempName();
        java.lang.String str31 = astRoot29.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode32.getSymbols();
        java.lang.String str34 = astRoot29.toStringTree(scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scope35.addChild((com.google.javascript.rhino.head.ast.AstNode) scope36);
        int int38 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode32, (com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str40 = astRoot39.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope41.spliterator();
        astRoot39.addChildScope(scope41);
        java.lang.String str45 = astRoot39.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = astRoot39.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str49 = astRoot48.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode51 = astRoot50.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot50, (com.google.javascript.rhino.head.Node) scriptNode52);
        int int56 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot39, (com.google.javascript.rhino.head.ast.AstNode) astRoot48);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot48, 24);
        astRoot48.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = astRoot48.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode61 = astRoot48.getParent();
        java.lang.String str63 = astRoot48.makeIndent(12);
        int int64 = astRoot48.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) astRoot48, 1246810839);
        com.google.javascript.rhino.head.Node node67 = scriptNode25.getFirstChild();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(commentSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertNotNull(astRoot21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AstRoot" + "'", str22, "AstRoot");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNull(astNode51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(astRoot60);
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        " + "'", str63, "                        ");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(node67);
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setWarnTrailingComma(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setWarnTrailingComma(true);
        boolean boolean12 = compilerEnvirons9.isRecordingLocalJsDocComments();
        compilerEnvirons9.setWarnTrailingComma(false);
        compilerEnvirons9.setAllowSharpComments(false);
        boolean boolean17 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons18.setWarnTrailingComma(true);
        java.lang.String[] strArray30 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "java.io.IOException: ", "136", "136", "java.io.IOException: ", "136", "java.io.IOException: ", "$0", "  {\n  }\n" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        compilerEnvirons18.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        compilerEnvirons9.setActivationNames((java.util.Set<java.lang.String>) strSet31);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setWarnTrailingComma(true);
        boolean boolean38 = compilerEnvirons35.isRecordingLocalJsDocComments();
        compilerEnvirons35.setWarnTrailingComma(false);
        compilerEnvirons35.setAllowSharpComments(false);
        boolean boolean43 = compilerEnvirons35.isGenerateDebugInfo();
        compilerEnvirons35.setIdeMode(false);
        compilerEnvirons35.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons48.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = compilerEnvirons48.getErrorReporter();
        boolean boolean52 = compilerEnvirons48.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser54 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter53);
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter53);
        compilerEnvirons0.setErrorReporter(errorReporter53);
        boolean boolean57 = compilerEnvirons0.isXmlAvailable();
        boolean boolean58 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.IRFactory iRFactory61 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorReporter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int11 = astRoot10.getParamCount();
        java.lang.String str12 = node5.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        java.lang.String str13 = astRoot10.getNextTempName();
        boolean boolean14 = astRoot10.hasSideEffects();
        java.lang.String str16 = astRoot10.toSource(100);
        java.lang.String str18 = astRoot10.toSource((int) (byte) 100);
        astRoot10.checkParentLinks();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        int int6 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean7 = compilerEnvirons0.reportWarningAsError();
        boolean boolean8 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        boolean boolean12 = compilerEnvirons9.isGeneratingSource();
        compilerEnvirons9.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons15.setWarnTrailingComma(true);
        boolean boolean18 = compilerEnvirons15.isRecordingLocalJsDocComments();
        compilerEnvirons15.setWarnTrailingComma(false);
        compilerEnvirons15.setAllowSharpComments(false);
        boolean boolean23 = compilerEnvirons15.isGenerateDebugInfo();
        compilerEnvirons15.setIdeMode(false);
        compilerEnvirons15.setWarnTrailingComma(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons28.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = compilerEnvirons28.getErrorReporter();
        boolean boolean32 = compilerEnvirons28.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser34 = new com.google.javascript.rhino.head.Parser(compilerEnvirons15, errorReporter33);
        compilerEnvirons9.setErrorReporter(errorReporter33);
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter33);
        errorReporter33.warning("2", "0\tSCRIPT 0 3\n", (-53), "java.io.IOException: java.io.IOException:   {\n  }\n", (-475744774));
        // The following exception was thrown during execution in test generation
        try {
            errorReporter33.error("", "                            ", (int) (byte) 100, "%", (-384667093));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -384667093");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(errorReporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getNextTempName();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode6.getFunctions();
        int int10 = scriptNode6.getEncodedSourceEnd();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode1.setPosition(13);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope0, (com.google.javascript.rhino.head.ast.Scope) scriptNode1);
        java.lang.String str15 = scriptNode1.getJsDoc();
        int int16 = scriptNode1.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode1.getChildScopes();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(scopeList17);
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList2 = scope1.getStatements();
        java.lang.String str3 = scope1.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = scope1.getSymbol("97");
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = astRoot10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray16 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList17, symbolArray16);
        scriptNode12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode12.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor23 = null;
        astRoot22.visitComments(nodeVisitor23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray28 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList29, symbolArray28);
        astRoot26.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList29);
        boolean boolean32 = astRoot26.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons33.setWarnTrailingComma(true);
        boolean boolean36 = compilerEnvirons33.isRecordingLocalJsDocComments();
        compilerEnvirons33.setWarnTrailingComma(false);
        compilerEnvirons33.setAllowSharpComments(false);
        boolean boolean41 = compilerEnvirons33.isGenerateDebugInfo();
        astRoot26.setCompilerData((java.lang.Object) boolean41);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot26);
        astRoot22.addChildrenToBack(node43);
        scriptNode12.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getEndLineno();
        java.lang.Object obj48 = astRoot46.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol50 = astRoot46.getSymbol("java.io.IOException: ");
        astRoot46.setSourceName("java.io.IOException: ");
        boolean boolean53 = astRoot46.isInStrictMode();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot46);
        astRoot46.setPosition(19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str60 = astRoot59.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode62 = astRoot61.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot59, (com.google.javascript.rhino.head.Node) astRoot61, (com.google.javascript.rhino.head.Node) scriptNode63);
        int int67 = astRoot59.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scope68.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot59, scope68);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope68);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        scope72.addChild((com.google.javascript.rhino.head.ast.AstNode) scope73);
        boolean boolean75 = scope72.hasSideEffects();
        int int76 = scope68.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope72);
        java.lang.String str78 = scope68.toSource(19);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int80 = astRoot79.getParamCount();
        astRoot79.setEndLineno((int) (byte) 100);
        java.lang.String str84 = astRoot79.toSource((int) (short) 0);
        astRoot79.setInStrictMode(false);
        scope68.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot79);
        astRoot46.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot79);
        astRoot79.setSourceName("$0");
        astRoot79.setBounds(775058292, (-1668176296));
        int int94 = astRoot79.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            scope1.setFinally((com.google.javascript.rhino.head.Node) astRoot79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "129" + "'", str3, "129");
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertNotNull(symbolArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(symbolArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(symbol50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "$0" + "'", str60, "$0");
        org.junit.Assert.assertNull(astNode62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 167891189 + "'", int76 == 167891189);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "                                      {\n                                      }\n" + "'", str78, "                                      {\n                                      }\n");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = scope2.spliterator();
        astRoot0.addChildScope(scope2);
        java.lang.String str6 = astRoot0.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = astRoot0.getSymbolTable();
        astRoot0.setRelative(1796887248);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int25 = astRoot24.getEndLineno();
        java.lang.Object obj26 = astRoot24.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot24.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        astRoot24.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getNextTempName();
        com.google.javascript.rhino.head.Node node34 = scriptNode32.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode32.getFunctions();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot24, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int37 = astRoot22.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot22);
        astRoot22.setEncodedSourceBounds((int) (short) 1, (int) (byte) 100);
        astRoot0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = astRoot22.getTop();
        boolean boolean44 = astRoot22.hasChildren();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons11.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter14);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        java.lang.String str20 = astRoot18.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode21.getSymbols();
        java.lang.String str23 = astRoot18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scope25);
        int int27 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode21, (com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str29 = astRoot28.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot28.addChildScope(scope30);
        java.lang.String str34 = astRoot28.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = astRoot28.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str38 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = astRoot39.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot37, (com.google.javascript.rhino.head.Node) astRoot39, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot28, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot37, 24);
        astRoot37.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = iRFactory15.transformTree(astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode50.toSource(0);
        scriptNode50.setEncodedSourceBounds(12, 10);
        astRoot37.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node57 = scriptNode50.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorReporter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setStrictMode(true);
        boolean boolean10 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean11 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean12 = compilerEnvirons0.isGenerateObserverCount();
        int int13 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray3 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList4, symbolArray3);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList4);
        boolean boolean7 = astRoot1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons8.setWarnTrailingComma(true);
        boolean boolean11 = compilerEnvirons8.isRecordingLocalJsDocComments();
        compilerEnvirons8.setWarnTrailingComma(false);
        compilerEnvirons8.setAllowSharpComments(false);
        boolean boolean16 = compilerEnvirons8.isGenerateDebugInfo();
        astRoot1.setCompilerData((java.lang.Object) boolean16);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot1);
        astRoot1.setLineno(0);
        int int21 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int23 = astRoot22.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray24 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList25, symbolArray24);
        astRoot22.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList25);
        astRoot22.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getEndLineno();
        java.lang.Object obj33 = astRoot31.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        astRoot22.target = astRoot29;
        int int40 = astRoot29.getType();
        java.lang.String str41 = astRoot29.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) astRoot29);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(3, (-236001159));
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((-543879055), node46);
        astRoot29.addChildToBack(node46);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(symbolArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(symbolArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 136 + "'", int40 == 136);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.Node node3 = astRoot0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList4 = astRoot0.getStatements();
        java.lang.String str6 = astRoot0.toSource(23);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope(17, 10);
        astRoot0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        astRoot11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        astRoot11.addChildScope(scope18);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = astRoot11.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot11.getSymbols();
        astRoot0.setSymbols(symbolList22);
        com.google.javascript.rhino.head.Node node24 = astRoot0.getNext();
        int int25 = astRoot0.getEndLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(astNodeList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        int int8 = astRoot1.getLineno();
        int int11 = astRoot1.getIntProp((-236001159), 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor12 = null;
        astRoot1.visitComments(nodeVisitor12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getNextTempName();
        com.google.javascript.rhino.head.Node node16 = scriptNode14.target;
        boolean boolean17 = scriptNode14.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode14.getSymbols();
        astRoot1.setSymbols(symbolList18);
        int int20 = astRoot1.depth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(722910379);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor2 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(312356042);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 312356042");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-932305774));
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str3 = astRoot2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope4.spliterator();
        astRoot2.addChildScope(scope4);
        java.lang.String str8 = astRoot2.toSource(9);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = astRoot2.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str12 = astRoot11.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = astRoot13.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) astRoot13, (com.google.javascript.rhino.head.Node) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getNextTempName();
        com.google.javascript.rhino.head.Node node21 = scriptNode19.target;
        scriptNode19.setBounds((int) (byte) -1, 23);
        int int25 = astRoot13.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scope26.addChild((com.google.javascript.rhino.head.ast.AstNode) scope27);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = scope27.new NodeIterator();
        scope27.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        java.lang.String str34 = astRoot32.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        java.lang.String str37 = astRoot32.toStringTree(scriptNode35);
        java.lang.String str39 = astRoot32.toSource(0);
        java.lang.String str41 = astRoot32.toSource(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getNextTempName();
        com.google.javascript.rhino.head.Node node44 = scriptNode42.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode42.getFunctions();
        int int46 = scriptNode42.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getNextTempName();
        com.google.javascript.rhino.head.Node node49 = scriptNode47.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode47.getFunctions();
        int int51 = scriptNode47.getEncodedSourceEnd();
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str55 = astRoot54.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode57 = astRoot56.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot54, (com.google.javascript.rhino.head.Node) astRoot56, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int62 = astRoot54.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot54, scope63);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap66 = astRoot54.getSymbolTable();
        scriptNode42.setSymbolTable(strMap66);
        astRoot32.setSymbolTable(strMap66);
        scope27.setSymbolTable(strMap66);
        astRoot13.setSymbolTable(strMap66);
        astRoot2.setSymbolTable(strMap66);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap72 = astRoot2.getSymbolTable();
        com.google.javascript.rhino.head.Node node73 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot2, node73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "136" + "'", str34, "136");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNull(astNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str50 = scriptNode47.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope53, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = astRoot56.getAstRoot();
        java.lang.String str58 = astRoot57.shortName();
        java.lang.String str59 = astRoot57.getSourceName();
        astRoot57.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = astRoot57.getSymbolTable();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope53, (com.google.javascript.rhino.head.Node) astRoot57);
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) scope53);
        java.lang.Object obj65 = null;
        scope1.putProp(1203332619, obj65);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertNotNull(astRoot57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AstRoot" + "'", str58, "AstRoot");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(strMap61);
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator5 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator6 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator7 = positionComparator5.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str10 = astRoot9.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = astRoot11.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot9, (com.google.javascript.rhino.head.Node) astRoot11, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int20 = positionComparator5.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) scope19);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = astNodeComparator4.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator5);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = positionComparator0.thenComparing(astNodeComparator21);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator25 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator26 = positionComparator25.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator27 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator29 = positionComparator27.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator28);
        com.google.javascript.rhino.head.Node node30 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node31 = node30.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        node30.addChildToFront((com.google.javascript.rhino.head.Node) scope32);
        int int34 = scope32.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol36 = scope32.getSymbol("java.io.IOException: ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot(11);
        int int39 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) scope32, (com.google.javascript.rhino.head.ast.AstNode) astRoot38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str42 = astRoot41.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = astRoot43.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot41, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) scriptNode45);
        boolean boolean49 = astRoot41.isInStrictMode();
        astRoot41.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int53 = astRoot52.getEndLineno();
        java.lang.Object obj54 = astRoot52.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        astRoot52.checkParentLinks();
        int int60 = positionComparator28.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot41, (com.google.javascript.rhino.head.ast.AstNode) astRoot52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator61 = positionComparator25.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator28);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator62 = positionComparator25.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator63 = astNodeComparator24.thenComparing(astNodeComparator62);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator64 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator65 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator66 = positionComparator64.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator65);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator67 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator68 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator69 = positionComparator67.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator68);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator70 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator71 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator72 = positionComparator70.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator71);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode77 = astRoot76.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot74, (com.google.javascript.rhino.head.Node) astRoot76, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int85 = positionComparator70.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot76, (com.google.javascript.rhino.head.ast.AstNode) scope84);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator86 = astNodeComparator69.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator70);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator87 = astNodeComparator66.thenComparing(astNodeComparator69);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator88 = astNodeComparator66.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator89 = astNodeComparator63.thenComparing(astNodeComparator88);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator90 = astNodeComparator89.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator91 = astNodeComparator89.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(astNodeComparator7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertNotNull(astNodeComparator26);
        org.junit.Assert.assertNotNull(astNodeComparator29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(symbol36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-12) + "'", int39 == (-12));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-52) + "'", int60 == (-52));
        org.junit.Assert.assertNotNull(astNodeComparator61);
        org.junit.Assert.assertNotNull(astNodeComparator62);
        org.junit.Assert.assertNotNull(astNodeComparator63);
        org.junit.Assert.assertNotNull(astNodeComparator66);
        org.junit.Assert.assertNotNull(astNodeComparator69);
        org.junit.Assert.assertNotNull(astNodeComparator72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(astNode77);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-3) + "'", int85 == (-3));
        org.junit.Assert.assertNotNull(astNodeComparator86);
        org.junit.Assert.assertNotNull(astNodeComparator87);
        org.junit.Assert.assertNotNull(astNodeComparator88);
        org.junit.Assert.assertNotNull(astNodeComparator89);
        org.junit.Assert.assertNotNull(astNodeComparator90);
        org.junit.Assert.assertNotNull(astNodeComparator91);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node node6 = node5.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        node5.addChildToFront((com.google.javascript.rhino.head.Node) scope7);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode4, node5);
        scriptNode4.flattenSymbolTable(false);
        int int12 = scriptNode4.getType();
        com.google.javascript.rhino.head.Parser parser13 = new com.google.javascript.rhino.head.Parser();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = parser13.parse("$0", "AstRoot", (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str19 = astRoot18.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scope20.spliterator();
        astRoot18.addChildScope(scope20);
        astRoot17.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot18);
        com.google.javascript.rhino.head.ast.Symbol symbol25 = astRoot18.getSymbol("                  ");
        java.lang.String str27 = astRoot18.toSource(5);
        int int28 = astRoot18.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons39.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons39.getErrorReporter();
        boolean boolean43 = compilerEnvirons39.isGenerateObserverCount();
        compilerEnvirons39.setRecordingComments(true);
        boolean boolean46 = compilerEnvirons39.isGenerateObserverCount();
        boolean boolean47 = compilerEnvirons39.isGenerateDebugInfo();
        compilerEnvirons39.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons50.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter53 = compilerEnvirons50.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory54 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons39, errorReporter53);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator56 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str58 = astRoot57.getNextTempName();
        java.lang.String str59 = astRoot57.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode60.getSymbols();
        java.lang.String str62 = astRoot57.toStringTree(scriptNode60);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scope63.addChild((com.google.javascript.rhino.head.ast.AstNode) scope64);
        int int66 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode60, (com.google.javascript.rhino.head.ast.AstNode) scope63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str68 = astRoot67.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator70 = scope69.spliterator();
        astRoot67.addChildScope(scope69);
        java.lang.String str73 = astRoot67.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = astRoot67.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str77 = astRoot76.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode79 = astRoot78.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode80.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot76, (com.google.javascript.rhino.head.Node) astRoot78, (com.google.javascript.rhino.head.Node) scriptNode80);
        int int84 = positionComparator56.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot67, (com.google.javascript.rhino.head.ast.AstNode) astRoot76);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot76, 24);
        astRoot76.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = iRFactory54.transformTree(astRoot76);
        int int89 = astRoot76.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot76);
        com.google.javascript.rhino.head.ast.AstRoot astRoot91 = astRoot31.getAstRoot();
        astRoot18.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot91);
        com.google.javascript.rhino.head.ast.AstNode astNode93 = astRoot18.getParent();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.removeChild((com.google.javascript.rhino.head.Node) astNode93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 136 + "'", int12 == 136);
        org.junit.Assert.assertNotNull(astRoot17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(errorReporter53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "136" + "'", str59, "136");
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(functionNodeList74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertNull(astNode79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(astRoot91);
        org.junit.Assert.assertNull(astNode93);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.setEndLineno(25);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        int int5 = scriptNode1.getBaseLineno();
        java.io.IOException iOException8 = new java.io.IOException("-");
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException("  {\n  }\n", (java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        scriptNode1.putProp(688626213, (java.lang.Object) iOException8);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1796887248);
        java.lang.String str2 = node1.getJsDoc();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getEndLineno();
        java.lang.Object obj5 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray6 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet7, commentArray6);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet7);
        astRoot3.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode11.getFunctions();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot3, (com.google.javascript.rhino.head.Node) scriptNode11);
        int int16 = astRoot1.getEncodedSourceStart();
        astRoot1.setRelative(100);
        java.lang.String str19 = astRoot1.shortName();
        int int20 = astRoot1.getRegexpCount();
        com.google.javascript.rhino.head.Node node21 = astRoot1.getFirstChild();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(commentArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AstRoot" + "'", str19, "AstRoot");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node21);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        boolean boolean6 = astRoot0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node7 = astRoot0.getFirstChild();
        int int8 = astRoot0.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node9 = astRoot0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray2 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList3, symbolArray2);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList3);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope();
        scope6.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        astRoot0.addChildScope(scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str14 = scriptNode11.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope17, 25);
        java.lang.Object obj21 = scriptNode11.getProp(0);
        scope7.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean23 = scope7.hasSideEffects();
        scope7.setBounds((int) (short) 0, (int) (short) 10);
        com.google.javascript.rhino.head.Node node27 = scope7.getFirstChild();
        boolean boolean28 = scope7.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(symbolArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "$0" + "'", str14, "$0");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode2.toSource(0);
        scriptNode2.clearParentScope();
        boolean boolean6 = scriptNode2.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = null;
        scriptNode2.setSymbolTable(strMap7);
        int int9 = scriptNode2.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = scriptNode2.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode11.toSource(0);
        scriptNode11.clearParentScope();
        boolean boolean15 = scriptNode11.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str18 = astRoot17.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
        astRoot17.addChildScope(scope19);
        java.lang.String str23 = astRoot17.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str25 = astRoot24.getNextTempName();
        java.lang.String str26 = astRoot24.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode27.getSymbols();
        java.lang.String str29 = astRoot24.toStringTree(scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scope30.addChild((com.google.javascript.rhino.head.ast.AstNode) scope31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope31.setTop(scriptNode33);
        java.lang.String str36 = scope31.toSource(12);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope31);
        astRoot17.setBaseLineno(19);
        scriptNode11.addChildToBack((com.google.javascript.rhino.head.Node) astRoot17);
        astRoot17.removeChildren();
        int int42 = astRoot17.getEncodedSourceEnd();
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot17);
        node1.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot17);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump45 = astRoot17.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{\n}\n" + "'", str4, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(astNodeList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "136" + "'", str26, "136");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                        {\n                        }\n" + "'", str36, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean5 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getEndLineno();
        java.lang.Object obj6 = astRoot4.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray7 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet8, commentArray7);
        astRoot4.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet8);
        astRoot4.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getNextTempName();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode12.getFunctions();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) scriptNode12);
        int int17 = astRoot4.getRegexpCount();
        com.google.javascript.rhino.head.Node node18 = astRoot4.getNext();
        astRoot4.setEncodedSourceBounds((-8), (-264283662));
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-280309866), (com.google.javascript.rhino.head.Node) astRoot4, 16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int26 = astRoot25.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scope31.addChild((com.google.javascript.rhino.head.ast.AstNode) scope32);
        astRoot25.addChildScope(scope32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getEndLineno();
        java.lang.Object obj40 = astRoot38.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        astRoot38.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getNextTempName();
        com.google.javascript.rhino.head.Node node48 = scriptNode46.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = scriptNode46.getFunctions();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot36, (com.google.javascript.rhino.head.Node) astRoot38, (com.google.javascript.rhino.head.Node) scriptNode46);
        int int51 = astRoot36.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) astRoot25, (com.google.javascript.rhino.head.Node) astRoot36);
        astRoot36.setEncodedSource("java.io.IOException: ");
        int int55 = astRoot36.getType();
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor57 = null;
        astRoot36.visitComments(nodeVisitor57);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(commentArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 136 + "'", int55 == 136);
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter3 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setWarnTrailingComma(true);
        compilerEnvirons0.setRecordingComments(true);
        org.junit.Assert.assertNotNull(errorReporter3);
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        int int22 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str24 = astRoot23.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scope25.spliterator();
        astRoot23.addChildScope(scope25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getNextTempName();
        java.lang.String str30 = scriptNode28.debugPrint();
        scriptNode28.setLineno((int) (byte) -1);
        scriptNode28.flattenSymbolTable(true);
        astRoot23.setTop(scriptNode28);
        astRoot23.clearParentScope();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot23);
        com.google.javascript.rhino.head.Node node38 = astRoot23.target;
        java.lang.String str40 = astRoot23.toSource((-2110645446));
        boolean boolean41 = astRoot23.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator42 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator43 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator44 = positionComparator42.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str47 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode49 = astRoot48.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot46, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        int int57 = positionComparator42.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot48, (com.google.javascript.rhino.head.ast.AstNode) scope56);
        astRoot48.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = astRoot60.getAstRoot();
        astRoot48.putProp(18, (java.lang.Object) astRoot61);
        com.google.javascript.rhino.head.Node node64 = astRoot48.setType(15);
        java.lang.String str65 = astRoot48.debugPrint();
        int int66 = astRoot48.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = astRoot48.getChildScopes();
        astRoot23.target = astRoot48;
        astRoot23.setSourceName("-1\t  EOF 0 1\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(astNodeComparator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
        org.junit.Assert.assertNotNull(astRoot61);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1\tLE -1 1\n" + "'", str65, "-1\tLE -1 1\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scopeList67);
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean6 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean7 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scope3.spliterator();
        astRoot1.addChildScope(scope3);
        java.lang.String str7 = astRoot1.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str9 = astRoot8.getNextTempName();
        java.lang.String str10 = astRoot8.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode11.getSymbols();
        java.lang.String str13 = astRoot8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scope14.addChild((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope15.setTop(scriptNode17);
        java.lang.String str20 = scope15.toSource(12);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope15);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot1.getSymbols();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator23 = astRoot1.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getNextTempName();
        java.lang.String str27 = scriptNode25.debugPrint();
        scriptNode25.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        java.lang.String str33 = astRoot31.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode34.getSymbols();
        java.lang.String str36 = astRoot31.toStringTree(scriptNode34);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) astRoot31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int41 = astRoot40.getEndLineno();
        java.lang.Object obj42 = astRoot40.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray43 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet44, commentArray43);
        astRoot40.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        int int48 = astRoot38.getRegexpCount();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot38, 550287075);
        com.google.javascript.rhino.head.Node node51 = astRoot31.target;
        java.lang.String str52 = astRoot31.debugPrint();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        astRoot31.visitComments(nodeVisitor53);
        astRoot1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot31);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = astRoot1.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator56.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "136" + "'", str10, "136");
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                        {\n                        }\n" + "'", str20, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNotNull(nodeSpliterator23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "136" + "'", str33, "136");
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(commentArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) (short) 10);
        int int2 = astRoot1.getType();
        com.google.javascript.rhino.head.Node node3 = astRoot1.getFirstChild();
        astRoot1.putIntProp((int) (short) 100, 953557037);
        int int7 = astRoot1.getEndLineno();
        int int8 = astRoot1.getLineno();
        int int11 = astRoot1.getIntProp((-236001159), 0);
        int int12 = astRoot1.getPosition();
        astRoot1.setEncodedSource("                                                  ");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = astRoot1.getChildScopes();
        int int16 = astRoot1.getEndLineno();
        boolean boolean17 = astRoot1.isInStrictMode();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 136 + "'", int2 == 136);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons3.setWarnTrailingComma(true);
        boolean boolean6 = compilerEnvirons3.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter7 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter7);
        boolean boolean9 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.Parser parser14 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean15 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        com.google.javascript.rhino.head.Parser parser6 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        java.lang.String[] strArray29 = new java.lang.String[] { "  {\n  }\n", "/", "                        {\n                        }\n", "/", "2", "java.io.IOException: java.io.IOException", "java.io.IOException: hi!", "-1\tSCRIPT -1 1\n", "                        {\n                        }\n", "/", "/", "{\n}\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", "                  ", "136", "$0", "                        {\n                        }\n", "-1\tBLOCK -1 1\n-1\t  BLOCK 0 1\n", "java.io.IOException: ", "AstRoot", "$0", "2" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons0.getErrorReporter();
        boolean boolean34 = compilerEnvirons0.isIdeMode();
        int int35 = compilerEnvirons0.getLanguageVersion();
        int int36 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGeneratingSource(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean8 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons9.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons9.getErrorReporter();
        boolean boolean13 = compilerEnvirons9.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException20 = errorReporter14.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        errorReporter14.warning("java.io.IOException: java.io.IOException", "                                                {\n                                                }\n", (-12), "$0", (int) '4');
        com.google.javascript.rhino.head.Parser parser27 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter14);
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setIdeMode(true);
        compilerEnvirons0.setRecordingComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = new com.google.javascript.rhino.head.CompilerEnvirons();
        boolean boolean35 = compilerEnvirons34.recoverFromErrors();
        int int36 = compilerEnvirons34.getLanguageVersion();
        boolean boolean37 = compilerEnvirons34.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter41 = compilerEnvirons38.getErrorReporter();
        boolean boolean42 = compilerEnvirons38.isGenerateObserverCount();
        compilerEnvirons38.setRecordingComments(true);
        boolean boolean45 = compilerEnvirons38.isGenerateObserverCount();
        boolean boolean46 = compilerEnvirons38.isGenerateDebugInfo();
        compilerEnvirons38.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons49.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter52 = compilerEnvirons49.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory53 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons38, errorReporter52);
        boolean boolean54 = compilerEnvirons38.isStrictMode();
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = compilerEnvirons38.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory56 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons34, errorReporter55);
        com.google.javascript.rhino.head.Parser parser57 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter55);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertNotNull(evaluatorException20);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorReporter41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(errorReporter52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(errorReporter55);
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.lang.Object obj2 = astRoot0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot0.getSymbol("java.io.IOException: ");
        astRoot0.setSourceName("java.io.IOException: ");
        boolean boolean7 = astRoot0.isInStrictMode();
        boolean boolean8 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor9 = null;
        astRoot0.visitComments(nodeVisitor9);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor11 = null;
        astRoot0.visitComments(nodeVisitor11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = astRoot1.getTop();
        astRoot1.setEncodedSourceEnd(0);
        int int6 = astRoot1.getAbsolutePosition();
        java.lang.String str8 = astRoot1.makeIndent(9);
        java.lang.Object obj10 = astRoot1.getProp(3);
        astRoot1.setEncodedSourceBounds((-748707594), (-1610320791));
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                  " + "'", str8, "                  ");
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = astRoot0.getAstRoot();
        java.lang.String str2 = astRoot1.shortName();
        java.lang.String str3 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node4 = astRoot1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = astRoot1.getStatements();
        int int6 = astRoot1.getFunctionCount();
        int int7 = astRoot1.getEncodedSourceStart();
        boolean boolean8 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = astRoot9.getAstRoot();
        java.lang.String str11 = astRoot10.shortName();
        java.lang.String str12 = astRoot10.debugPrint();
        com.google.javascript.rhino.head.Node node13 = astRoot10.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = astRoot10.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope16.setTop(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.addChild((com.google.javascript.rhino.head.ast.AstNode) scope21);
        scriptNode18.setCompilerData((java.lang.Object) scope21);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = astRoot24.getAstRoot();
        java.lang.String str26 = astRoot25.shortName();
        java.lang.String str27 = astRoot25.debugPrint();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) astRoot25);
        astRoot10.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot25);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setFinally((com.google.javascript.rhino.head.Node) astRoot25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astRoot1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AstRoot" + "'", str2, "AstRoot");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(astRoot10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AstRoot" + "'", str11, "AstRoot");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str12, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AstRoot" + "'", str26, "AstRoot");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList1 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getNextTempName();
        java.lang.String str6 = scriptNode4.debugPrint();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = scriptNode4.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scope9.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(0);
        scriptNode14.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator20 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str22 = astRoot21.getNextTempName();
        java.lang.String str23 = astRoot21.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode24.getSymbols();
        java.lang.String str26 = astRoot21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scope27.addChild((com.google.javascript.rhino.head.ast.AstNode) scope28);
        int int30 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode24, (com.google.javascript.rhino.head.ast.AstNode) scope27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope33.spliterator();
        astRoot31.addChildScope(scope33);
        java.lang.String str37 = astRoot31.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = astRoot31.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str41 = astRoot40.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = astRoot42.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot40, (com.google.javascript.rhino.head.Node) astRoot42, (com.google.javascript.rhino.head.Node) scriptNode44);
        int int48 = positionComparator20.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot31, (com.google.javascript.rhino.head.ast.AstNode) astRoot40);
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot40.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        scope10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) astRoot40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.setCompilerData((java.lang.Object) (byte) 100);
        java.lang.String str59 = scriptNode56.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scope62, 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = astRoot65.getAstRoot();
        java.lang.String str67 = astRoot66.shortName();
        java.lang.String str68 = astRoot66.getSourceName();
        astRoot66.checkParentLinks();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap70 = astRoot66.getSymbolTable();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) scope62, (com.google.javascript.rhino.head.Node) astRoot66);
        scope10.addChildToFront((com.google.javascript.rhino.head.Node) scope62);
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scope10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str75 = astRoot74.getNextTempName();
        java.lang.String str76 = astRoot74.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = scriptNode77.getSymbols();
        java.lang.String str79 = astRoot74.toStringTree(scriptNode77);
        astRoot74.checkParentLinks();
        com.google.javascript.rhino.head.Node node81 = astRoot74.getNext();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons83 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons83.setStrictMode(true);
        boolean boolean86 = compilerEnvirons83.recoverFromErrors();
        compilerEnvirons83.setRecordingComments(true);
        astRoot74.putProp(11, (java.lang.Object) true);
        java.lang.String str90 = astRoot74.toSource();
        java.lang.String str92 = astRoot74.toSource(557642528);
        scope10.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot74);
        org.junit.Assert.assertNotNull(symbolList1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(astNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNotNull(astRoot66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AstRoot" + "'", str67, "AstRoot");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "136" + "'", str76, "136");
        org.junit.Assert.assertNotNull(symbolList78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.target;
        int int3 = scriptNode0.getBaseLineno();
        int int4 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        astRoot6.addChildScope(scope8);
        java.lang.String str12 = astRoot6.toSource(9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int14 = astRoot13.getEndLineno();
        java.lang.Object obj15 = astRoot13.getCompilerData();
        astRoot6.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot13);
        astRoot13.setPosition(25);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((-297370766), (com.google.javascript.rhino.head.Node) astRoot13);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "$0" + "'", str1, "$0");
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setWarnTrailingComma(false);
        compilerEnvirons0.setAllowSharpComments(false);
        compilerEnvirons0.setStrictMode(true);
        boolean boolean10 = compilerEnvirons0.getAllowSharpComments();
        boolean boolean11 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.ErrorReporter errorReporter12 = compilerEnvirons0.getErrorReporter();
        boolean boolean13 = compilerEnvirons0.reportWarningAsError();
        boolean boolean14 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(errorReporter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setWarnTrailingComma(true);
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(0);
        scriptNode5.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str13 = astRoot12.getNextTempName();
        java.lang.String str14 = astRoot12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode15.getSymbols();
        java.lang.String str17 = astRoot12.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.addChild((com.google.javascript.rhino.head.ast.AstNode) scope19);
        int int21 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode15, (com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str23 = astRoot22.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope24.spliterator();
        astRoot22.addChildScope(scope24);
        java.lang.String str28 = astRoot22.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = astRoot22.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str32 = astRoot31.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode34 = astRoot33.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) astRoot33, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int39 = positionComparator11.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot22, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) astRoot31);
        int int45 = astRoot31.getEncodedSourceEnd();
        int int46 = astRoot31.getLineno();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 10, 14);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope(2, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode54.toSource(0);
        scriptNode54.setEncodedSourceBounds(12, 10);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) '#', node50, (com.google.javascript.rhino.head.Node) scope53, (com.google.javascript.rhino.head.Node) scriptNode54, 2);
        com.google.javascript.rhino.head.Node node62 = scope53.getLastChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int65 = astRoot64.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int67 = astRoot66.getEndLineno();
        java.lang.Object obj68 = astRoot66.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment[] commentArray69 = new com.google.javascript.rhino.head.ast.Comment[] {};
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet70, commentArray69);
        astRoot66.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        astRoot66.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getNextTempName();
        com.google.javascript.rhino.head.Node node76 = scriptNode74.target;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode74.getFunctions();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) astRoot64, (com.google.javascript.rhino.head.Node) astRoot66, (com.google.javascript.rhino.head.Node) scriptNode74);
        int int79 = astRoot64.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        scope80.addChild((com.google.javascript.rhino.head.ast.AstNode) scope81);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scope81.setTop(scriptNode83);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor85 = scope81.iterator();
        astRoot64.setParentScope(scope81);
        scope53.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot64);
        astRoot64.setLineno(7);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot31, (com.google.javascript.rhino.head.ast.Scope) astRoot64);
        java.lang.String str91 = astRoot31.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{\n}\n" + "'", str56, "{\n}\n");
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(commentArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(nodeItor85);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "136" + "'", str91, "136");
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-766081488));
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons0.setStrictMode(true);
        boolean boolean3 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean4 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons5.setWarnTrailingComma(true);
        boolean boolean8 = compilerEnvirons5.isRecordingLocalJsDocComments();
        boolean boolean9 = compilerEnvirons5.isRecordingComments();
        boolean boolean10 = compilerEnvirons5.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons12.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter15 = compilerEnvirons12.getErrorReporter();
        boolean boolean16 = compilerEnvirons12.isGenerateObserverCount();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.EvaluatorException evaluatorException23 = errorReporter17.runtimeError("  {\n  }\n", "                                                {\n                                                }\n", (int) (short) 0, "$0", 25);
        compilerEnvirons5.setErrorReporter(errorReporter17);
        compilerEnvirons5.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons27.setRecordingLocalJsDocComments(false);
        java.util.Set<java.lang.String> strSet30 = compilerEnvirons27.getActivationNames();
        boolean boolean31 = compilerEnvirons27.recoverFromErrors();
        boolean boolean32 = compilerEnvirons27.getWarnTrailingComma();
        boolean boolean33 = compilerEnvirons27.isIdeMode();
        boolean boolean34 = compilerEnvirons27.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons35.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons38.setWarnTrailingComma(true);
        boolean boolean41 = compilerEnvirons38.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons38.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser43 = new com.google.javascript.rhino.head.Parser(compilerEnvirons35, errorReporter42);
        com.google.javascript.rhino.head.Parser parser44 = new com.google.javascript.rhino.head.Parser(compilerEnvirons27, errorReporter42);
        compilerEnvirons5.setErrorReporter(errorReporter42);
        com.google.javascript.rhino.head.IRFactory iRFactory46 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode47.getSymbols();
        int int49 = scriptNode47.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = null;
        scriptNode47.setSymbolTable(strMap50);
        com.google.javascript.rhino.head.Node node52 = iRFactory46.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope(24);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("  {\n  }\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node57 = iRFactory46.transform((com.google.javascript.rhino.head.ast.AstNode) scope56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertNotNull(errorReporter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertNotNull(evaluatorException23);
        org.junit.Assert.assertNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertNotNull(symbolList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(scope56);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        int int3 = astRoot0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str7 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode9 = astRoot8.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) scriptNode10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons14.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons14.getErrorReporter();
        boolean boolean18 = compilerEnvirons14.isGenerateObserverCount();
        compilerEnvirons14.setRecordingComments(true);
        boolean boolean21 = compilerEnvirons14.isGenerateObserverCount();
        boolean boolean22 = compilerEnvirons14.isGenerateDebugInfo();
        compilerEnvirons14.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = new com.google.javascript.rhino.head.CompilerEnvirons();
        compilerEnvirons25.setStrictMode(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter28 = compilerEnvirons25.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory29 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter28);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str33 = astRoot32.getNextTempName();
        java.lang.String str34 = astRoot32.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode35.getSymbols();
        java.lang.String str37 = astRoot32.toStringTree(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope();
        scope38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        int int41 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode35, (com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str43 = astRoot42.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = scope44.spliterator();
        astRoot42.addChildScope(scope44);
        java.lang.String str48 = astRoot42.toSource(9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = astRoot42.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str52 = astRoot51.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode54 = astRoot53.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.setCompilerData((java.lang.Object) (byte) 100);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot51, (com.google.javascript.rhino.head.Node) astRoot53, (com.google.javascript.rhino.head.Node) scriptNode55);
        int int59 = positionComparator31.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot42, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) astRoot51, 24);
        astRoot51.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = iRFactory29.transformTree(astRoot51);
        int int64 = astRoot51.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(953557037, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) astRoot51);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot6);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump67 = astRoot0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(astNode9);
        org.junit.Assert.assertNotNull(errorReporter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(errorReporter28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "136" + "'", str34, "136");
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertNull(astNode54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }
}
